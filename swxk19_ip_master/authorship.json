[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":1}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"    TaskList taskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    public Command(TaskList taskList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    public abstract void execute();","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    public abstract void uiReply();","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":11}},{"path":"src/main/java/CommandInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"public enum CommandInput {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"    UNRECOGNIZED_CMD(\"\");","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"    private String commandString;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"    CommandInput(String commandLine) {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        this.commandString \u003d commandLine;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    public static CommandInput getCommandInput(String commandLine) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"        String commandInput \u003d commandLine.split(\" \")[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        Optional\u003cCommandInput\u003e command \u003d Arrays.stream(CommandInput.values()).filter(cmd -\u003e cmd.commandString.equals(commandInput)).findFirst();","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"        return command.isEmpty() ? UNRECOGNIZED_CMD : command.get();","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":26}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"    String dueDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"    Optional\u003cLocalDate\u003e chornoDueDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    // Factory method","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    public static Deadline create(String commandInput) throws TaskNameNotSpecified, DeadlineByNotSpecified {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"        String[] parseInfo \u003d parseCmd(commandInput);","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"        return new Deadline(parseInfo[0], parseInfo[1], false);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"    public static String[] parseCmd(String commandInput) throws TaskNameNotSpecified, DeadlineByNotSpecified {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        String taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        String dueDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"        int indexOfBy \u003d commandInput.indexOf(\"/by\");","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"        if (indexOfBy \u003d\u003d -1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"            throw new DeadlineByNotSpecified(\"Deadline task requires keyword \u0027/by\u0027\");","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        } ","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"        taskName \u003d commandInput.substring(9, indexOfBy - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"            throw new TaskNameNotSpecified(\"Deadline description canont be empty.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"            dueDate \u003d commandInput.substring(indexOfBy + 4);","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"            if (dueDate.equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"                throw new DeadlineByNotSpecified(\"Due date field cannot be empty\");","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"            throw new DeadlineByNotSpecified(\"Due date field cannot be empty.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"        String[] parseInfo \u003d {taskName, dueDate};","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"        return parseInfo;","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"    ","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"    public Deadline(String taskName, String dueDate, boolean isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"        super(taskName, \"D\");","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"        this.completed \u003d isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"        this.chornoDueDate \u003d Parser.parseDate(dueDate); ","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"    public String stringFields() {","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"        String dateString \u003d this.chornoDueDate.isEmpty() ? dueDate : ","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"        chornoDueDate.get().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"        ","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"        return \" (by: \" + dateString + \")\"; ","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":57}},{"path":"src/main/java/DeadlineByNotSpecified.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public class DeadlineByNotSpecified extends TaskInitError {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"    public DeadlineByNotSpecified(String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":5}},{"path":"src/main/java/DeadlineCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public class DeadlineCmd extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"    String lineInput;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"    Task deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    public DeadlineCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"        super(taskList);","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"        this.lineInput \u003d lineInput;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    public void execute() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"        try { ","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"            this.deadline \u003d Deadline.create(this.lineInput);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"            taskList.add(this.deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"        } catch (TaskInitError e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"            Ui.displayMsg(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        } ","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        uiReply();","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    };","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"    ","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    public void uiReply() {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"        Ui.displayMsg(\"Got it. I\u0027ve added this task:\\n\" + ","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        Ui.indentString(this.deadline.toString(), 1) + \"\\n\" + taskList.countTasks());","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    };","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"        String line \u003d \"init\";","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"        taskList.loadFromFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"        System.out.println(\"Hello I\u0027m Duke! \\nWhat can I do for you?\");","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"            if (!line.equals(\"init\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"                CommandInput command \u003d CommandInput.getCommandInput(line);","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"                switch (command) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"                case LIST:","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"                    new ListCmd(taskList).execute();;","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"                case MARK:  ","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"                    int listIndexMark \u003d Integer.parseInt(line.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"                    new MarkCmd(taskList, listIndexMark).execute();","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"                case UNMARK:","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"                    int listIndexUnmark \u003d Integer.parseInt(line.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"                    new UnmarkCmd(taskList, listIndexUnmark).execute();;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"                case DELETE:","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"                    Task removedTask \u003d taskList.removeTask(line);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"                    Ui.displayMsg(\"Noted. I\u0027ve removed this task:\\n\" + Ui.indentString(removedTask.toString(), 1) + \"\\n\" + taskList.countTasks());","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"                case EVENT:","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"                    new EventCmd(taskList, line).execute();","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"                    new DeadlineCmd(taskList, line).execute();","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"                case TODO:","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"                    new ToDoCmd(taskList, line).execute();","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"                case UNRECOGNIZED_CMD:","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"                    Ui.displayMsg(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"                System.out.println(\"\");","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"            line \u003d sc.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"        sc.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"        taskList.saveToFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"        Ui.displayMsg(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":54,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"    String fromDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"    String toDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"    Optional\u003cLocalDate\u003e chronoFromDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    Optional\u003cLocalDate\u003e chronoToDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    public static Event create(String commandInput) throws TaskNameNotSpecified, EventFromToNotSpecified {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"        String[] parseInfo \u003d parseCmd(commandInput);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"        return new Event(parseInfo[0], parseInfo[1], parseInfo[2], false);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"    public Event(String taskName, String fromDate, String toDate, boolean isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        super(taskName, \"E\");","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"        this.completed \u003d isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"        this.chronoFromDate \u003d Parser.parseDate(fromDate);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        this.chronoToDate \u003d Parser.parseDate(toDate);","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    public static String[] parseCmd(String commandInput) throws TaskNameNotSpecified, EventFromToNotSpecified {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"        String taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"        String fromDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"        String toDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"        commandInput \u003d commandInput.substring(6);","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"        int indexOfFrom \u003d commandInput.indexOf(\"/from\");","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"        int indexOfTo \u003d commandInput.indexOf(\"/to\");","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"        if (indexOfFrom \u003d\u003d -1 || indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"            throw new EventFromToNotSpecified(\"Event task requires keywords \u0027/from\u0027 and \u0027/to\u0027\");","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"        taskName \u003d commandInput.substring(0, indexOfFrom - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"            throw new TaskNameNotSpecified(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"        fromDate \u003d commandInput.substring(indexOfFrom + 6, indexOfTo - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"        if (fromDate.equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"            throw new EventFromToNotSpecified(\"from/to fields cannot be empty.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"            toDate \u003d commandInput.substring(indexOfTo + 4, commandInput.length());","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"           ","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"            throw new EventFromToNotSpecified(\"from/to fields cannot be empty.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"        String[] parseInfo \u003d {taskName, fromDate, toDate};","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"        return parseInfo;","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"swxk19"},"content":"    public String stringFields() {","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"swxk19"},"content":"        String fromDateString \u003d this.chronoFromDate.isEmpty() ? this.fromDate : this.chronoFromDate.get().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"swxk19"},"content":"        String toDateString \u003d this.chronoToDate.isEmpty() ? this.fromDate : this.chronoToDate.get().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"swxk19"},"content":"        return \" (from: \" + fromDateString + \" to: \" + toDateString + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":64}},{"path":"src/main/java/EventCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public class EventCmd extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"    String lineInput;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"    Task event;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    public EventCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"        super(taskList);","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"        this.lineInput \u003d lineInput;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    public void execute() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"        try { ","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"            this.event \u003d Event.create(this.lineInput);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"            taskList.add(this.event);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"        } catch (TaskInitError e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"            Ui.displayMsg(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        } ","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        uiReply();","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    };","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"    ","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    public void uiReply() {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"        Ui.displayMsg(\"Got it. I\u0027ve added this task:\\n\" + ","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        Ui.indentString(this.event.toString(), 1) + \"\\n\" + taskList.countTasks());","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    };","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":24}},{"path":"src/main/java/EventFromToNotSpecified.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public class EventFromToNotSpecified extends TaskInitError {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"    public EventFromToNotSpecified(String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":5}},{"path":"src/main/java/ListCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public class ListCmd extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"    ","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"    public ListCmd(TaskList taskList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"        super(taskList);","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    } ","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"    public void execute() {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"        uiReply();","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    public void uiReply() {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"        Ui.displayMsg(\"Here are the tasks in your list:\\n\" + taskList.outputList());","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":15}},{"path":"src/main/java/MarkCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public class MarkCmd extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"    int index;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"    Task task;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    public MarkCmd(TaskList taskList, int index) {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"        super(taskList);","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    public void execute() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"        this.task \u003d taskList.get(this.index).markDone();","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"        uiReply();","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"    public void uiReply() {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        String output \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        Ui.displayMsg(output + \"\\n\" + Ui.indentString(this.task.toString(), 1));","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":19}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"    public static Optional\u003cLocalDate\u003e parseDate(String timeInput) {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"            timeInput \u003d timeInput.replaceAll(\"/\",\"-\");","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"            return Optional.of(LocalDate.parse(timeInput));","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"            return Optional.empty();","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"    String type;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"    String taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"    boolean completed \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"    public Task(String taskName, String type) {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    public Task markDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"        return this;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"    } ","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"    public Task unmarkDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        return this;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    public abstract String stringFields(); ","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"        return \"[\" + this.type + \"]\" + \"[\" + (this.completed ? \"x\" : \" \") + \"] \" + this.taskName + this.stringFields();","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":26}},{"path":"src/main/java/TaskInitError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public class TaskInitError extends Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"    public TaskInitError(String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":5}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"public class TaskList {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    public String outputList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"        for (int index \u003d 0; index \u003c this.tasks.size(); index++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"            result.append((index \u003d\u003d 0 ? \"\" : \"\\n\") + (index + 1) + \". \" + this.tasks.get(index).toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        return result.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"    public String countTasks() {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"        return \"Now you have \" + this.tasks.size() + \" task\" + (this.tasks.size() \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\";","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    public Task removeTask(String command) {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"        int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"    public void saveToFile() throws IOException {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"        String strPath \u003d \"../../../data\";","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"        // create directory","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"        Path path \u003d Paths.get(strPath);","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"        Files.createDirectories(path);","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"    ","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"        // output string to file","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"        PrintWriter out \u003d new PrintWriter(strPath + \"/duke.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"        out.println(this.outputList());","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"        out.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"    public void loadFromFile() throws IOException {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"        Path fileName \u003d Path.of(\"../../../data/duke.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"        String strData \u003d Files.readString(fileName);","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"        String[] strTasks \u003d strData.split(\"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"        for (String strTask : strTasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"swxk19"},"content":"            if (strTask.length() \u003d\u003d 1) return;  // for handling empty file, it still contains \"\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"swxk19"},"content":"            String[] info1 \u003d strTask.split(\"\\\\[\");","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"swxk19"},"content":"            char taskType \u003d info1[1].charAt(0);","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"swxk19"},"content":"            boolean isDone \u003d info1[2].charAt(0) \u003d\u003d \u0027x\u0027;","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"swxk19"},"content":"            String[] info2 \u003d info1[2].split(\" \\\\(\");","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"swxk19"},"content":"            Task task;","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"swxk19"},"content":"            String taskName \u003d info2[0].substring(3);;","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"swxk19"},"content":"            switch (taskType) {","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"swxk19"},"content":"            case (\u0027T\u0027):","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"swxk19"},"content":"                task \u003d new ToDo(taskName, isDone);","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"swxk19"},"content":"                this.tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"swxk19"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"swxk19"},"content":"            case (\u0027D\u0027):","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"swxk19"},"content":"                String dueDate \u003d info2[1].substring(4, info2[1].length() -1);","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"swxk19"},"content":"                task \u003d new Deadline(taskName, dueDate, isDone);","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"swxk19"},"content":"                this.tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"swxk19"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"swxk19"},"content":"            case (\u0027E\u0027):","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"swxk19"},"content":"                String[] info3 \u003d info2[1].split(\" to: \");","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"swxk19"},"content":"                String fromDate \u003d info3[0].substring(6);","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"swxk19"},"content":"                String toDate \u003d info3[1].substring(0, info3[1].length() - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"swxk19"},"content":"                task \u003d new Event(taskName, fromDate, toDate, isDone);","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"swxk19"},"content":"                this.tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"swxk19"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"swxk19"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":85}},{"path":"src/main/java/TaskNameNotSpecified.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public class TaskNameNotSpecified extends TaskInitError {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"    public TaskNameNotSpecified(String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":5}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"    // Factory method","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"    public static ToDo create(String commandInput) throws TaskNameNotSpecified {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"            return new ToDo(parseCmd(commandInput)[0], false);","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"            throw new TaskNameNotSpecified(\"ToDo description cannot be empty.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"    public static String[] parseCmd(String commandInput) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"        String[] parseInfo \u003d {commandInput.substring(5)};","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"        return parseInfo;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    public ToDo(String taskName, boolean isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"        super(taskName, \"T\");","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"        this.completed \u003d isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    public String stringFields() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"        return \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":26}},{"path":"src/main/java/ToDoCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public class ToDoCmd extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"    String lineInput;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"    Task toDo;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    public ToDoCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"        super(taskList);","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"        this.lineInput \u003d lineInput;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    public void execute() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"        try { ","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"            this.toDo \u003d ToDo.create(this.lineInput);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"            taskList.add(this.toDo);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"        } catch (TaskInitError e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"            Ui.displayMsg(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        } ","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        uiReply();","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    };","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    public void uiReply() {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"        Ui.displayMsg(\"Got it. I\u0027ve added this task:\\n\" + ","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        Ui.indentString(this.toDo.toString(), 1) + \"\\n\" + taskList.countTasks());","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    };","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":24}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public class Ui {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"    public static void listReply(TaskList taskList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"        displayMsg(taskList.outputList());","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"    public static void displayMsg(String msg) {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"        System.out.println(indentString(wrapMessageBorder(msg), 1));","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    public static String wrapMessageBorder(String msg) {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"        String border \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"        return border + \"\\n\" + msg + \"\\n\" + border;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"    public static String indentString(String msg, int indendationLevel) {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        String indent \u003d \"  \" .repeat(indendationLevel);","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"        String[] lines \u003d msg.split(\"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"            result.append(indent + lines[i] + (i + 1 \u003c lines.length ? \"\\n\" : \"\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"        return result.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":25}},{"path":"src/main/java/UnmarkCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"public class UnmarkCmd extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"    int index;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"    Task task;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    public UnmarkCmd(TaskList taskList, int index) {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"        super(taskList);","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    public void execute() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"        this.task \u003d taskList.get(this.index).unmarkDone();","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"        uiReply();","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"    public void uiReply() {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        String output \u003d \"Ok, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        Ui.displayMsg(output + \"\\n\" + Ui.indentString(this.task.toString(), 1));","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"todo read book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"todo join sports club","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"mark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"unmark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"mark 4","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"delete 3","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"list","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"swxk19":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"swxk19":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"if [ ! -d \"../bin/\" ]","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"    mkdir ../bin/","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"java -classpath ../bin/ Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":35,"swxk19":3}}]
