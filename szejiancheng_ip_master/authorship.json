[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"    static DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(format) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"    public String getTypeIcon(){","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"        return \"[D]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Duke started, initializing Duke behaviour...\");","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Hello! I\u0027m Duke!\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"        DukeBehaviour mainBehaviour \u003d new DukeBehaviour();","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"We\u0027re all set! What can I do for you?\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"        while (mainBehaviour.isActive){","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"            String userInput \u003d inputScanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"            mainBehaviour.receiveInput(userInput);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"        return;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"szejiancheng":15,"-":4}},{"path":"src/main/java/DukeBehaviour.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.awt.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.io.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":" * Class to encapsulate behavior of personal assistant Duke!","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":" * @author Sze Jian Cheng","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"public class DukeBehaviour {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    Boolean isActive \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"    ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"    Path dataPath;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"     * Public constructor for the DukeBehaviour Object.","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"    public DukeBehaviour() {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Attempting to load data...\");","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"        initMemData();","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"        //https://samderlust.com/dev-blog/java/write-read-arraylist-object-file-java","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"    private void initMemData() {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"        Path dirPath \u003d Paths.get(\".\", \"data\");","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"        //System.out.println(\"data path: \" + dirPath.toAbsolutePath());","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"        boolean directoryExists \u003d java.nio.file.Files.exists(dirPath);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"        //System.out.println(\"Does the data folder exist?: \" + directoryExists);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"            //This method creates a directory if it does not exist yet, but will not","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"            //throw an error even if it exists, and so is safe to call.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"            Files.createDirectories(dirPath);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"        dataPath \u003d Paths.get(dirPath.toString(), \"DukeMem.ser\");","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"        boolean dataExists \u003d java.nio.file.Files.exists(dataPath);","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"        //System.out.println(\"Does the data exist?: \" + dataExists);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"        if (!dataExists) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"            System.out.println(\"No previous session detected, initialising new taskList...\");","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"            updateMem(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"            System.out.println(\"Seems like you have a previous sessions with me! Recalling your tasks...\");","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"            FileInputStream readData \u003d new FileInputStream(dataPath.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"            ObjectInputStream readStream \u003d new ObjectInputStream(readData);","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"            taskList \u003d (ArrayList\u003cTask\u003e) readStream.readObject();","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"            System.out.println(\"Error in loading data, previous session could not be restored.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"            System.out.println(\"Creating new tasklist...\");","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"szejiancheng"},"content":"            taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"szejiancheng"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"szejiancheng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"        displayList();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"szejiancheng"},"content":"    private void updateMem(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"szejiancheng"},"content":"            FileOutputStream writeData \u003d new FileOutputStream(dataPath.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"szejiancheng"},"content":"            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"szejiancheng"},"content":"            writeStream.writeObject(taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"szejiancheng"},"content":"        }catch (IOException e){","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"szejiancheng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"szejiancheng"},"content":"     * Public method for DukeBehaviour to receive user input in the form of Strings.","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"szejiancheng"},"content":"     * @param userIn user input of type String","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"szejiancheng"},"content":"    public void receiveInput(String userIn){","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"szejiancheng"},"content":"        ArrayList\u003cString\u003e tokens \u003d tokenize(userIn);","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"szejiancheng"},"content":"        String key \u003d tokens.get(0);","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"szejiancheng"},"content":"            switch (key){","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"szejiancheng"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"szejiancheng"},"content":"                    isActive \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"szejiancheng"},"content":"                    updateMem(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"szejiancheng"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"szejiancheng"},"content":"                case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"szejiancheng"},"content":"                    displayList();","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"szejiancheng"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"szejiancheng"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"szejiancheng"},"content":"                    mark(tokens);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"szejiancheng"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"szejiancheng"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"szejiancheng"},"content":"                    unmark(tokens);","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"szejiancheng"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"szejiancheng"},"content":"                case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"szejiancheng"},"content":"                    delete(tokens);","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"szejiancheng"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"szejiancheng"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"szejiancheng"},"content":"                    addToDo(tokens);","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"szejiancheng"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"szejiancheng"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"szejiancheng"},"content":"                    addDeadline(tokens);","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"szejiancheng"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"szejiancheng"},"content":"                case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"szejiancheng"},"content":"                    addEvent(tokens);","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"szejiancheng"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"szejiancheng"},"content":"                default:","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"szejiancheng"},"content":"                    throw new DukeException(\"I\u0027m sorry, I could not understand that command.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"szejiancheng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"szejiancheng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"szejiancheng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Invalid input received! \\n datetime could not be parsed, make sure \" +","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"szejiancheng"},"content":"                \"that your date follows the format YYYY-MM-DD\");","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"szejiancheng"},"content":"     * Private method for handling delete command.","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"szejiancheng"},"content":"     * @param userIn user input of type String","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException on index out-of-range","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"szejiancheng"},"content":"    private void delete(ArrayList\u003cString\u003e userIn) throws DukeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"szejiancheng"},"content":"        if (userIn.size()\u003e2 || userIn.size()\u003d\u003d1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"Invalid input received! \\nDelete commands are in the form of: delete i \\n(only 1 whitespace allowed)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"szejiancheng"},"content":"        int index \u003d Integer.parseInt(userIn.get(1));","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"szejiancheng"},"content":"        if (index \u003c 1 || index \u003e taskList.size()){","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"index \" + index +\" not in range!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"szejiancheng"},"content":"        Task currTask \u003d taskList.get(index-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"szejiancheng"},"content":"        taskList.remove(index-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(currTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"szejiancheng"},"content":"    private void echo(String userIn){","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(userIn);","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"szejiancheng"},"content":"     * Private method for handling mark command.","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"szejiancheng"},"content":"     * @param userIn user input of type String","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException on index out-of-range","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"szejiancheng"},"content":"    private void mark(ArrayList\u003cString\u003e userIn) throws DukeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"szejiancheng"},"content":"        if (userIn.size()\u003e2 || userIn.size()\u003d\u003d1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"Invalid input received! \\nMark commands are in the form of: mark i \\n(only 1 whitespace allowed)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"szejiancheng"},"content":"        int index \u003d Integer.parseInt(userIn.get(1));","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"szejiancheng"},"content":"        if (index \u003c 1 || index \u003e taskList.size()){","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"index \" + index +\" not in range!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"szejiancheng"},"content":"        Task currTask \u003d taskList.get(index-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"szejiancheng"},"content":"        currTask.markDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":168,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(currTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"szejiancheng"},"content":"     * Private method for handling unmark command.","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"szejiancheng"},"content":"     * @param userIn user input of type String","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException on index out-of-range","lastModifiedDate":"2023-01-19"},{"lineNumber":175,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"szejiancheng"},"content":"    private void unmark(ArrayList\u003cString\u003e userIn) throws DukeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"szejiancheng"},"content":"        if (userIn.size()\u003e2 || userIn.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"Invalid input received! \\nUnmark commands are in the form of: unmark i \\n(only 1 whitespace allowed)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"szejiancheng"},"content":"        int index \u003d Integer.parseInt(userIn.get(1));","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"szejiancheng"},"content":"        if (index \u003c 1 || index \u003e taskList.size()){","lastModifiedDate":"2023-01-19"},{"lineNumber":182,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"index \" + index +\" not in range!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":183,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":184,"author":{"gitId":"szejiancheng"},"content":"        Task currTask \u003d taskList.get(index-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"szejiancheng"},"content":"        currTask.unmark();","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(currTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"szejiancheng"},"content":"    /***","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"szejiancheng"},"content":"     * Remove whitespace from typed input and returns an arraylist of tokens","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"szejiancheng"},"content":"     * @param input String userinput to be tokenized","lastModifiedDate":"2023-01-26"},{"lineNumber":193,"author":{"gitId":"szejiancheng"},"content":"     * @return tokens","lastModifiedDate":"2023-01-26"},{"lineNumber":194,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"szejiancheng"},"content":"    private ArrayList\u003cString\u003e tokenize(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":196,"author":{"gitId":"szejiancheng"},"content":"        ArrayList\u003cString\u003e tokens \u003d new ArrayList\u003c\u003e(Arrays.asList(input.split(\" \")));","lastModifiedDate":"2023-01-26"},{"lineNumber":197,"author":{"gitId":"szejiancheng"},"content":"        tokens.removeIf(s -\u003e s.equals(\" \") || s.equals(\"\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":198,"author":{"gitId":"szejiancheng"},"content":"        tokens.forEach(s -\u003e s.trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":199,"author":{"gitId":"szejiancheng"},"content":"        //System.out.println(tokens);","lastModifiedDate":"2023-01-26"},{"lineNumber":200,"author":{"gitId":"szejiancheng"},"content":"        return tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":201,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":202,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":203,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":204,"author":{"gitId":"szejiancheng"},"content":"     * Private method for handling commands regarding Events.","lastModifiedDate":"2023-01-19"},{"lineNumber":205,"author":{"gitId":"szejiancheng"},"content":"     * @param userIn user input of type String","lastModifiedDate":"2023-01-19"},{"lineNumber":206,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":207,"author":{"gitId":"szejiancheng"},"content":"    private void addEvent(ArrayList\u003cString\u003e userIn) throws DukeException, DateTimeParseException{","lastModifiedDate":"2023-01-26"},{"lineNumber":208,"author":{"gitId":"szejiancheng"},"content":"        //String descAndTimes \u003d userIn.replace(\"event\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":209,"author":{"gitId":"szejiancheng"},"content":"        //index 0 should be event","lastModifiedDate":"2023-01-26"},{"lineNumber":210,"author":{"gitId":"szejiancheng"},"content":"        //index 1-? should be name","lastModifiedDate":"2023-01-26"},{"lineNumber":211,"author":{"gitId":"szejiancheng"},"content":"        //index containing \"/from\" should be immediately preceding from param","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"szejiancheng"},"content":"        //index containing \"to\" should be immediately preceding to param","lastModifiedDate":"2023-01-26"},{"lineNumber":213,"author":{"gitId":"szejiancheng"},"content":"        int fromId \u003d userIn.indexOf(\"/from\");","lastModifiedDate":"2023-01-26"},{"lineNumber":214,"author":{"gitId":"szejiancheng"},"content":"        int toId \u003d userIn.indexOf(\"/to\");","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"szejiancheng"},"content":"        if (fromId \u003c 0 || toId \u003c 0){","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"Invalid input received! \\nEvent commands are in the form of: event name /from fromtime /to totime \\n(remember to include \u0027/from\u0027 and \u0027/to\u0027)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":218,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":219,"author":{"gitId":"szejiancheng"},"content":"        String name \u003d String.join(\" \", userIn.subList(1, fromId));","lastModifiedDate":"2023-01-26"},{"lineNumber":220,"author":{"gitId":"szejiancheng"},"content":"        LocalDate from \u003d LocalDate.parse(String.join(\" \", userIn.subList(fromId+1, toId)));","lastModifiedDate":"2023-01-26"},{"lineNumber":221,"author":{"gitId":"szejiancheng"},"content":"        LocalDate to \u003d LocalDate.parse(String.join(\" \", userIn.subList(toId+1, userIn.size())));","lastModifiedDate":"2023-01-26"},{"lineNumber":222,"author":{"gitId":"szejiancheng"},"content":"        Event newEvent \u003d new Event(name, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":223,"author":{"gitId":"szejiancheng"},"content":"        taskList.add(newEvent);","lastModifiedDate":"2023-01-19"},{"lineNumber":224,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":225,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(newEvent);","lastModifiedDate":"2023-01-19"},{"lineNumber":226,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":227,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":228,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":229,"author":{"gitId":"szejiancheng"},"content":"     * Private method for handling commands regarding Deadlines.","lastModifiedDate":"2023-01-19"},{"lineNumber":230,"author":{"gitId":"szejiancheng"},"content":"     * @param userIn user input of type String","lastModifiedDate":"2023-01-19"},{"lineNumber":231,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":232,"author":{"gitId":"szejiancheng"},"content":"    private void addDeadline(ArrayList\u003cString\u003e userIn) throws DukeException, DateTimeParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":233,"author":{"gitId":"szejiancheng"},"content":"        LocalDate by;","lastModifiedDate":"2023-01-26"},{"lineNumber":234,"author":{"gitId":"szejiancheng"},"content":"        //String descAndTimes \u003d userIn.replace(\"event\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":235,"author":{"gitId":"szejiancheng"},"content":"        //index 0 should be event","lastModifiedDate":"2023-01-26"},{"lineNumber":236,"author":{"gitId":"szejiancheng"},"content":"        //index 1-? should be name","lastModifiedDate":"2023-01-26"},{"lineNumber":237,"author":{"gitId":"szejiancheng"},"content":"        //index containing \"/by\" should be immediately preceding from param","lastModifiedDate":"2023-01-26"},{"lineNumber":238,"author":{"gitId":"szejiancheng"},"content":"        int byId \u003d userIn.indexOf(\"/by\");","lastModifiedDate":"2023-01-26"},{"lineNumber":239,"author":{"gitId":"szejiancheng"},"content":"        if (byId \u003c 0){","lastModifiedDate":"2023-01-26"},{"lineNumber":240,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"Invalid input received! \\nDeadline commands are in the form of: deadline name /by bytime \\n(remember to include \u0027/by\u0027)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":241,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":242,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":243,"author":{"gitId":"szejiancheng"},"content":"        String name \u003d String.join(\" \", userIn.subList(1, byId));","lastModifiedDate":"2023-01-26"},{"lineNumber":244,"author":{"gitId":"szejiancheng"},"content":"        by \u003d LocalDate.parse(String.join(\" \", userIn.subList(byId+1, userIn.size())));","lastModifiedDate":"2023-01-26"},{"lineNumber":245,"author":{"gitId":"szejiancheng"},"content":"        Deadline newDeadline \u003d new Deadline(name, by);","lastModifiedDate":"2023-01-26"},{"lineNumber":246,"author":{"gitId":"szejiancheng"},"content":"        taskList.add(newDeadline);","lastModifiedDate":"2023-01-19"},{"lineNumber":247,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":248,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(newDeadline);","lastModifiedDate":"2023-01-19"},{"lineNumber":249,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":250,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":251,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":252,"author":{"gitId":"szejiancheng"},"content":"     * Private method for handling commands regarding ToDos.","lastModifiedDate":"2023-01-19"},{"lineNumber":253,"author":{"gitId":"szejiancheng"},"content":"     * @param userIn user input of type String","lastModifiedDate":"2023-01-19"},{"lineNumber":254,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":255,"author":{"gitId":"szejiancheng"},"content":"    private void addToDo(ArrayList\u003cString\u003e userIn) throws DukeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":256,"author":{"gitId":"szejiancheng"},"content":"        if (userIn.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":257,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"todo cannot have no description!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":258,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":259,"author":{"gitId":"szejiancheng"},"content":"        String name \u003d String.join(\" \", userIn.subList(1, userIn.size()));","lastModifiedDate":"2023-01-26"},{"lineNumber":260,"author":{"gitId":"szejiancheng"},"content":"        ToDo newToDo \u003d new ToDo(name);","lastModifiedDate":"2023-01-26"},{"lineNumber":261,"author":{"gitId":"szejiancheng"},"content":"        taskList.add(newToDo);","lastModifiedDate":"2023-01-19"},{"lineNumber":262,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":263,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(newToDo);","lastModifiedDate":"2023-01-19"},{"lineNumber":264,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":265,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":266,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":267,"author":{"gitId":"szejiancheng"},"content":"     * Private method for printing list of tasks stored.","lastModifiedDate":"2023-01-19"},{"lineNumber":268,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":269,"author":{"gitId":"szejiancheng"},"content":"    private void displayList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":270,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"Here are the tasks currently in your list: \");","lastModifiedDate":"2023-01-26"},{"lineNumber":271,"author":{"gitId":"szejiancheng"},"content":"        for (int i \u003d 0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":272,"author":{"gitId":"szejiancheng"},"content":"            System.out.println((i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2023-01-19"},{"lineNumber":273,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":274,"author":{"gitId":"szejiancheng"},"content":"        System.out.println(\"End of task list. (currently contains \" + taskList.size() + \" tasks)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":275,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":276,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":276}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"    static DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(format) + \" to: \" + to.format(format) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"    String getTypeIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"        return \"[E]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"public abstract class Task implements Serializable{","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"    abstract String getTypeIcon();","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"    public String toString(){","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"    public void markDone(){","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    public void unmark(){","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":32}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"        //System.out.println(\"Todo constructor called\");","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"    String getTypeIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"        return \"[T]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"todo task1","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"event event1 /from 1pm /to 2pm","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"deadline dead1 /by today","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"unmark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"unmark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"todo task2","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"event event2 /from 2pm /to 3pm","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"deadline dead2 /by tomorrow","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"bleh","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":25}}]
