[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"javafx {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"    version \u003d \"19\"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"    mainClassName \u003d \"duke.DukeLauncher\"","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"checkstyle {","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"szejiancheng"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"szejiancheng":26,"-":40}},{"path":"src/main/java/duke/DukeLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import duke.gui.DukeGui;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":" * This class acts as a launcher/starting point for the Duke application.","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"public class DukeLauncher {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"        Application.launch(DukeGui.class, args);","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"szejiancheng":13}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import duke.components.Storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":" * The abstract class AddCommand inherits from the Command class and is the superclass of AddDeadlineCommand,","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":" * AddEventCommand, and AddToDoCommand.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":" * Subclasses of Command have to provide methods for the execution of the Commands they encapsulate.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"    private Task taskToAdd;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"     * Abstract construct of an AddCommand object.","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"     * @param tokens {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException when exceptions are encountered during the creation of an AddCommand.","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    protected AddCommand(ArrayList\u003cString\u003e tokens) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"        super(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"     * Setter for task being added.","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"     * @param taskToAdd Task being added.","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"    protected void setTaskToAdd(Task taskToAdd) {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"     * @param tasks TaskList object to handle task management.","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"     * @param storage Storage object to handle reading/writing to/from storage.","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"        tasks.addTask(taskToAdd);","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"                + taskToAdd","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"                + tasks.size()","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"     * @return {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":59}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":" * This is the AddDeadlineCommand class to represent add deadline commands passed to Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":" * Encapsulates the information needed to add a Deadline object to the TaskList.","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"     * Creates a new AddDeadlineCommand.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"     * @param tokens {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException when exceptions are encountered in creating the Deadline.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    public AddDeadlineCommand(ArrayList\u003cString\u003e tokens) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"        super(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"        LocalDate by;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"        int byId \u003d tokens.indexOf(\"/by\");","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"        if (byId \u003c 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"Invalid input received! \\ntasks.Deadline commands are in the form of: deadline \"","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"                    + \"name /by date \\n(remember to include \u0027/by\u0027)\");","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"        String name \u003d String.join(\" \", tokens.subList(1, byId));","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"            by \u003d LocalDate.parse(String.join(\" \", tokens.subList(byId + 1, tokens.size())));","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"Invalid date format! \\n date must be in the form of YYYY-MM-DD\");","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"        Deadline newDeadline \u003d new Deadline(name, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"        setTaskToAdd(newDeadline);","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":38}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":" * This is the AddEventCommand class to represent add event commands passed to Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":" * Encapsulates the information needed to add an Event object to the TaskList.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"     * Creates a new AddEventCommand.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"     * @param tokens {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException when exceptions are encountered in creating the Event.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    public AddEventCommand(ArrayList\u003cString\u003e tokens) throws DukeException, DateTimeParseException {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"        super(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"        int fromId \u003d tokens.indexOf(\"/from\");","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"        int toId \u003d tokens.indexOf(\"/to\");","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"        if (fromId \u003c 0 || toId \u003c 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"Invalid input received! \\ntasks.Event commands are in the form of: event name \"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"                    + \"/from fromtime /to totime \\n(remember to include \u0027/from\u0027 and \u0027/to\u0027)\");","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"        String name \u003d String.join(\" \", tokens.subList(1, fromId));","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"        LocalDate from \u003d LocalDate.parse(String.join(\" \", tokens.subList(fromId + 1, toId)));","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"        LocalDate to \u003d LocalDate.parse(String.join(\" \", tokens.subList(toId + 1, tokens.size())));","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"        Event newEvent \u003d new Event(name, from, to);","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"        super.setTaskToAdd(newEvent);","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":35}},{"path":"src/main/java/duke/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":" * This is the AddToDoCommand class to represent add ToDo commands passed to Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":" * Encapsulates the information needed to add an ToDo object to the TaskList.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"public class AddToDoCommand extends AddCommand {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"     * Creates a new AddToDoCommand.","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"     * @param tokens {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException when exceptions are encountered in creating the ToDo.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"    public AddToDoCommand(ArrayList\u003cString\u003e tokens) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"        super(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"        if (tokens.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"todo cannot have no description!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"        String name \u003d String.join(\" \", tokens.subList(1, tokens.size()));","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"        ToDo newToDo \u003d new ToDo(name);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"        super.setTaskToAdd(newToDo);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":27}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import duke.components.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":" * The abstract class Command is the superclass of AddCommand, DeleteCommand, ExitCommand, ListCommand, MarkCommand","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":" * and UnmarkCommand.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":" * Subclasses of Command have to provide methods for the execution of the Commands they encapsulate.","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"    protected ArrayList\u003cString\u003e tokens;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"     * Abstract constructor of a Command object.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"     * @param tokens tokenized user input.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    public Command(ArrayList\u003cString\u003e tokens) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"     * Carries out the sequence of actions necessary to execute this Command.","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"     * printing or getting input from the user must be done through ui, task management to be carried out","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"     * through tasks, and reading and writing to/from storage to be handled by storage.","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"     * Throws a DukeException when errors are encountered during the execution of this command.","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"     * @param tasks TaskList object to handle task management.","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"     * @param storage Storage object to handle reading/writing to/from storage.","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"     * @return string response after execution of command","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException when errors occur during execution.","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"     * returns whether this Command is an exit command.","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"     * @return boolean of if this Command is an exit command.","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":43}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import duke.components.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":" * This is the DeleteCommand class to represent delete commands passed to Duke.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":" * Encapsulates the information needed to remove a task from the TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"    static final int COMMANDLENGTH \u003d 2;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"    static final int INDEXOFINDEX \u003d 1;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"    private Task taskToBeDeleted;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    private int indexOfTask;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"     * public constructor for a new DeleteCommand","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"     * @param tokens arraylist representation of a tokenized user command.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException when input is invalid","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"    public DeleteCommand(ArrayList\u003cString\u003e tokens) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"        super(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"        if (tokens.size() !\u003d COMMANDLENGTH) {","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"                    \"Invalid input received!\"","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"                    + \"\\nDelete commands are in the form of: delete i \"","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"                    + \"\\n(only 1 whitespace allowed)\"","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"            );","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"        this.indexOfTask \u003d Integer.parseInt(tokens.get(INDEXOFINDEX));","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"        if (indexOfTask \u003c 1 || indexOfTask \u003e tasks.size()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"                    \"index \" + indexOfTask + \" not in range of tasklist!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"        this.taskToBeDeleted \u003d tasks.getTask(indexOfTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"        tasks.deleteTask(indexOfTask);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"                + this.taskToBeDeleted","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"                + tasks.size()","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":56}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import duke.components.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":" * This is the ExitCommand class to represent the exit command parsed by Parser.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":" * Encapsulates the information needed to signal to Duke to exit.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"    public ExitCommand(ArrayList\u003cString\u003e tokens) {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"        super(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"        storage.updateStorage(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"        return \"Bye! See you soon!\";","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"        return true;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":29}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import duke.components.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":" * This is the FindCommand class to represent the find command parsed by Parser.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":" * Encapsulates the information needed to print a list of tasks (matching the keyword provided) to the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"    private final String keyword;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"     * Public constructor for a FindCommand","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"     * @param tokens arraylist representation of a tokenized user command","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException when input is invalid","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"    public FindCommand(ArrayList\u003cString\u003e tokens) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"        super(tokens);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"        if (tokens.size() \u003d\u003d 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"                    \"Invalid input received! Please include a keyword to find!\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"                    + \"Find commands are in the form of: find keyword \"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"            );","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"        keyword \u003d String.join(\" \", tokens.subList(1, tokens.size()));","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"        ArrayList\u003cTask\u003e out \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"            if (tasks.getTask(i).containsString(keyword)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"                out.add(tasks.getTask(i));","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"        if (out.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"            return \"No tasks found!\";","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"            String res \u003d \"These are the \" + out.size() + \" tasks I found:\";","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"            for (int i \u003d 0; i \u003c out.size(); i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"                res +\u003d \"\\n\" + i + 1 + \". \" + out.get(i);","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"            return res;","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"        return false;","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"szejiancheng":55}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import duke.components.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"    public ListCommand(ArrayList\u003cString\u003e tokens) {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"        super(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"        String res \u003d \"Here are the tasks currently in your list: \";","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"            res +\u003d (\"\\n\" + i + \". \" + tasks.getTask(i));","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"        res +\u003d (\"\\nEnd of task list. (currently contains \"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"                + tasks.size()","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"                + \" tasks)\");","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"        return res;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":30}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import duke.components.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"    private int markIndex;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"    public MarkCommand(ArrayList\u003cString\u003e tokens) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"        super(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"        if (tokens.size()\u003e2 || tokens.size()\u003d\u003d1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"                    \"Invalid input received! \\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"                    \"Mark commands are in the form of: mark i \\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"                    \"(only 1 whitespace allowed)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"        int index \u003d Integer.parseInt(tokens.get(1));","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"        markIndex \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"        if (markIndex \u003c 1 || markIndex \u003e tasks.size()){","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"index \" + markIndex +\" not in range!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"        tasks.mark(markIndex);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + tasks.getTask(markIndex);","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":36}},{"path":"src/main/java/duke/commands/RemindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import duke.components.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":" * This is the RemindCommand class to represent remind commands passed to Duke.","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":" * Encapsulates the information needed to display upcoming tasks to the user.","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"    private final int daysToLookAhead;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"     * Creates a new RemindCommand object.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"     * @param tokens tokenized user input.","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"    public RemindCommand(ArrayList\u003cString\u003e tokens) throws DukeException {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"        super(tokens);","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"        if (tokens.size() !\u003d 2) {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"                    \"Invalid input received!\"","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"                            + \"\\nRemind commands are in the form of: remind i \"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"                            + \"\\nwhere i is the number of days to look ahead for\"","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"                            + \"\\n(only 1 whitespace allowed)\"","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"            );","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"        this.daysToLookAhead \u003d Integer.parseInt(tokens.get(1));","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"        if (daysToLookAhead \u003c 0) {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"                    \"Invalid number of days received!\"","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"                    + \"\\nPlease input a positive number of days to look ahead for tasks to be reminded of!\"","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"            );","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"        ArrayList\u003cTask\u003e upcomingTasks \u003d tasks.getUpcomingTasks(daysToLookAhead);","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"        if (upcomingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"            return \"It looks like you have no upcoming unfinished tasks for this timeframe, yay!\";","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"        out.append(\"It looks like you have \").append(upcomingTasks.size()).append(\" tasks upcoming:\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"        for (Task task : upcomingTasks) {","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"            out.append(task).append(\"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"        return out.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"        return false;","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"szejiancheng":58}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import duke.components.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"    private int unmarkIndex;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"    public UnmarkCommand(ArrayList\u003cString\u003e tokens) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"        super(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"        if (tokens.size()\u003e2 || tokens.size()\u003d\u003d1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"                    \"Invalid input received! \\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"                    \"Unmark commands are in the form of: mark i \\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"                    \"(only 1 whitespace allowed)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"        int index \u003d Integer.parseInt(tokens.get(1));","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"        unmarkIndex \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"    public String execute(TaskList tasks,Storage storage) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"        if (unmarkIndex \u003c 1 || unmarkIndex \u003e tasks.size()){","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"index \" + unmarkIndex +\" not in range!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"        tasks.unmark(unmarkIndex);","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + tasks.getTask(unmarkIndex);","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":37}},{"path":"src/main/java/duke/components/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.components;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":" * This is the driver class for Duke, the CLI task manager.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":" * Every Duke object has its own storage, tasklist, and ui objects.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":" * @author Jian Cheng","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":" * @version 0.1","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"public class Duke {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"     * Returns a new Duke object.","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"     * @param filePath the filepath of the serialized TaskList object stored in memory","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"        assert storage !\u003d null : \"storage doesn\u0027t exist\";","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"        assert tasks !\u003d null : \"task-list doesn\u0027t exist\";","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"            Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"            response \u003d c.execute(tasks, storage);","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"            return error.getMessage();","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"        return response;","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"    public static String getFilePath() {","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"        Path dirPath \u003d Paths.get(\".\", \"data\");","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"            //This method creates a directory if it does not exist yet, but will not","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"            //throw an error even if it exists, and so is safe to call.","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"            Files.createDirectories(dirPath);","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"        Path dataPath \u003d Paths.get(dirPath.toString(), \"DukeMem.ser\");","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"        return dataPath.toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"szejiancheng":65}},{"path":"src/main/java/duke/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.components;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import duke.commands.AddDeadlineCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import duke.commands.AddEventCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"import duke.commands.AddToDoCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"import duke.commands.RemindCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"/***","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":" * This is the Parser class for Duke, the CLI task manager.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":" * This class handles parsing of user commands from the CLI","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":" * and handles Command creation.","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"     * Returns an ArrayList of processed user input for parsing.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"     * @param input text input from CLI from user.","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"     * @return ArrayList of the user input with whitespace removed.","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"    private static ArrayList\u003cString\u003e tokenize(String input) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"        ArrayList\u003cString\u003e tokens \u003d new ArrayList\u003c\u003e(Arrays.asList(input.split(\" \")));","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"        tokens.removeIf(s -\u003e s.equals(\" \") || s.equals(\"\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"        tokens.forEach(s -\u003e s \u003d s.trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"        return tokens;","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"     * Returns a Command depending on the first word in","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"     * user\u0027s text input.","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"     * @param userIn user input of type String.","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"     * @return Command depending on keyword.","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"     * @throws DateTimeException if DateTime parsing unsuccessful.","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException if userIn does not follow specified command syntax.","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"    public static Command parse(String userIn) throws DateTimeException, DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"        ArrayList\u003cString\u003e tokens \u003d tokenize(userIn);","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"        String key;","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"            key \u003d tokens.get(0);","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"Looks like you entered an empty command, try again!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"        Command ret \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"        switch (key) {","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"            ret \u003d new ExitCommand(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"szejiancheng"},"content":"        case \"list\":","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"szejiancheng"},"content":"            ret \u003d new ListCommand(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"szejiancheng"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"szejiancheng"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"szejiancheng"},"content":"            ret \u003d new MarkCommand(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"szejiancheng"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"szejiancheng"},"content":"            ret \u003d new UnmarkCommand(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"szejiancheng"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"szejiancheng"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"szejiancheng"},"content":"            ret \u003d new DeleteCommand(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"szejiancheng"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"szejiancheng"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"szejiancheng"},"content":"            ret \u003d new AddToDoCommand(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"szejiancheng"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"szejiancheng"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"szejiancheng"},"content":"            ret \u003d new AddDeadlineCommand(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"szejiancheng"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"szejiancheng"},"content":"        case \"event\":","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"szejiancheng"},"content":"            ret \u003d new AddEventCommand(tokens);","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"szejiancheng"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"szejiancheng"},"content":"        case \"find\":","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"szejiancheng"},"content":"            ret \u003d new FindCommand(tokens);","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"szejiancheng"},"content":"            break;","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"szejiancheng"},"content":"        case \"remind\":","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"szejiancheng"},"content":"            ret \u003d new RemindCommand(tokens);","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"szejiancheng"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"szejiancheng"},"content":"        default:","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(\"I\u0027m sorry, I could not understand that command.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"szejiancheng"},"content":"        return ret;","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":99}},{"path":"src/main/java/duke/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.components;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":" * This is the Storage class for Duke, the CLI task manager.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":" * This class handles all loading and storing of the TaskList","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":" * object that acts as Duke\u0027s memory.","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"    private final String filePath;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"     * Creates a Storage object.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"     * The filePath must lead to where DukeMem should be stored.","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"     * @param filePath the filePath to where DukeMem should be stored.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"     * Loads DukeMem from storage.","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"     * @return TaskList object previously saved by Duke.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException if error occurred in loading from storage.","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"            FileInputStream readData \u003d new FileInputStream(filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"            ObjectInputStream readStream \u003d new ObjectInputStream(readData);","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"            return (TaskList) readStream.readObject();","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"     * Saves current TaskList object to storage to be retrieved","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"     * in the next user session.","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"     * @param tasks TaskList object to be saved.","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"     * @throws DukeException if error occurred in writing to storage.","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"    public void updateStorage(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"            FileOutputStream writeData \u003d new FileOutputStream(filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"            writeStream.writeObject(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":64}},{"path":"src/main/java/duke/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.components;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"/***","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":" * This is the TaskList class for Duke, the CLI task manager.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":" * This class is used to store tasks, as well as manipulate them","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":" * as needed. An object of this class will be written into storage","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":" * at the end of the user session and retrieved for their next session.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"     * Returns a new TaskList with no tasks stored.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"     * @param taskToAdd Task to be added.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    public void addTask(Task taskToAdd) {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"        tasks.add(taskToAdd);","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"     * Returns the number of tasks currently stored.","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"     * @return int of the number of tasks stored.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"    public int size() {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"     * Deletes Task at provided index of the TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"     * @param indexOfTask int of index which the Task resides.","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"    public void deleteTask(int indexOfTask) {","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"        tasks.remove(indexOfTask - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"     * Marks Task at provided index of the TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"     * @param markIndex int of index which the Task resides.","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"    public void mark(int markIndex) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"        Task currTask \u003d tasks.get(markIndex - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"        currTask.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"     * Returns the Task at provided index of the TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"     * @param index int of index which the Task resides.","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"     * @return Task at the index provided.","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"szejiancheng"},"content":"     * Unmarks Task at provided index of the TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"szejiancheng"},"content":"     * @param unmarkIndex int of index which the Task resides.","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"    public void unmark(int unmarkIndex) {","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"szejiancheng"},"content":"        Task currTask \u003d tasks.get(unmarkIndex - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"szejiancheng"},"content":"        currTask.unmark();","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"szejiancheng"},"content":"     * returns list of tasks within the stipulated number of days","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"szejiancheng"},"content":"    public ArrayList\u003cTask\u003e getUpcomingTasks(int days) {","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"szejiancheng"},"content":"        ArrayList\u003cTask\u003e out \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"szejiancheng"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"szejiancheng"},"content":"            if (task.isToBeReminded(days)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"szejiancheng"},"content":"                out.add(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"szejiancheng"},"content":"        return out;","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"szejiancheng":88}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":" * Thrown to indicate that an error related to the running of Duke has been encountered","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"     * @param errorMessage the error message","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":15}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.gui;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"    private void flip() {","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"        db.flip();","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"        return db;","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"szejiancheng":61}},{"path":"src/main/java/duke/gui/DukeGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.gui;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import duke.components.Duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":" * Gui class to display and handle input and output from Duke.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"public class DukeGui extends Application {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"    private Duke duke \u003d new Duke(Duke.getFilePath());","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"            loadGui(stage);","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    private void loadGui(Stage stage) throws IOException {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeGui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"        AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"        Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"        fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"        stage.show();","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"szejiancheng":36}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.gui;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import duke.components.Duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"     * {inheritDoc}","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"        showWelcomeMsg();","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"     * helper function to display welcome message to GUI","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"    private void showWelcomeMsg() {","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"        String response \u003d \"Hello! I\u0027m Duke!\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"                + \"currently my functionality includes:\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"                + \"bye\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"                + \"todo\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"                + \"deadline\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"                + \"event\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"                + \"list\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"                + \"mark\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"                + \"unmark\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"                + \"delete\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"                + \"remind\\n\"","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"                + \"try typing a command! :D\";","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"szejiancheng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"szejiancheng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"szejiancheng"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"szejiancheng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"szejiancheng"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"szejiancheng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"szejiancheng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"szejiancheng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"szejiancheng"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"szejiancheng"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"szejiancheng"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"szejiancheng"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"szejiancheng"},"content":"            System.exit(0);","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"szejiancheng":86}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":" * This is the Deadline task class to represent deadlines passed to Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":" * Encapsulates all information related to the deadline, including the date of the deadline.","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"     * Creates a new Deadline object","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"     * @param description String description of the deadline represented.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"     * @param by LocalDate object representing the date of the deadline.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"        assert this.by !\u003d null : \"LocalDate object not given\";","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"     * @return {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DTFORMAT) + \")\";","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"    public boolean isToBeReminded(int days) {","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"        long daysUntilTask \u003d now.until(this.by, ChronoUnit.DAYS);","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"        return daysUntilTask \u003c days \u0026\u0026 !isDone;","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":40}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":" * This is the Event task class to represent events passed to Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":" * Encapsulates all information related to the event, including start and end dates.","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"     * Creates a new Event object.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"     * @param description String description of the event represented.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"     * @param from LocalDate object representing the start date of the Event.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"     * @param to LocalDate object representing the end date of the Event","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"        assert this.from !\u003d null : \"LocalDate object not given to var \u0027from\u0027\";","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"        assert this.to !\u003d null : \"LocalDate object not given to var \u0027to\u0027\";","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"     * @return {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DTFORMAT) + \" to: \" + to.format(DTFORMAT) + \")\";","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"    public boolean isToBeReminded(int days) {","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"        long daysUntilTask \u003d now.until(this.from, ChronoUnit.DAYS);","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"        return daysUntilTask \u003c days \u0026\u0026 !isDone;","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":45}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":" * The abstract class Task is the superclass of Deadline, Event, and ToDo.","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":" * Subclasses of Task have to provide methods to get the type icon in order to display to the user.","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"    protected static final DateTimeFormatter DTFORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"     * Abstract constructor of a Task object.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"     * @param description of task","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"        assert this.description !\u003d null : \"description not initialized\";","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"     * Returns the string representing whether this Task isDone.","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"     * @return String representation of whether this task is completed.","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"        // mark done task with X","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"     * @return {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"     * Marks this Task as done.","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"     * Undoes the mark status of this Task","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"     * Returns true if description of task matches given keyword","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"     * @param keyword that is being searched","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"     * @return whether this task matches the keyword","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"    public boolean containsString(String keyword) {","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"szejiancheng"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"szejiancheng"},"content":"     * Returns true if task is within the number of days provided","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"     * @param days leading up to task to be reminded","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"szejiancheng"},"content":"    public abstract boolean isToBeReminded(int days);","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":73}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":" * This is the ToDo task class to represent events passed to Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":" * Encapsulates all information related to the todo.","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"     * Creates a new ToDo object.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"     * @param description String description of the ToDo represented.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"     * @return {@inheritDoc}","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"    public boolean isToBeReminded(int days) {","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"        return !isDone;","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" textFill\u003d\"WHITE\" style\u003d\"-fx-background-color: grey; -fx-border-color: black; -fx-padding: 0 10 10 5;\" prefWidth\u003d\"400.0\" minHeight\u003d\"99\"/\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-border-color: black;\"/\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"szejiancheng":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"            fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" \u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: powderblue;\"/\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"szejiancheng":21}},{"path":"src/test/java/duke/commands/AddDeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.commands;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"public class AddDeadlineCommandTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"    public void constructor_invalidInput_exceptionThrown() {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"            new AddDeadlineCommand(new ArrayList\u003c\u003e(Arrays.asList(\"there\", \"is\", \"no\", \"by\")));","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"            assertEquals(","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"                    \"Invalid input received! \\ntasks.Deadline commands are in the form of: \" +","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"                            \"deadline name /by date \\n(remember to include \u0027/by\u0027)\",","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"                    e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"    public void constructor_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"            new AddDeadlineCommand(new ArrayList\u003c\u003e(Arrays.asList(\"deadline\", \"sampleDeadline\", \"/by\", \"today\")));","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"            assertEquals(","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"                    \"Invalid date format! \\n date must be in the form of YYYY-MM-DD\",","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"                    e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"szejiancheng":32}},{"path":"src/test/java/duke/components/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package duke.components;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"    public void parse_invalidInput_exceptionThrown() {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"            Parser.parse(\"This command should throw an error\");","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"            assertEquals(","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"                    \"I\u0027m sorry, I could not understand that command.\",","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"                    e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"szejiancheng":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"todo task1","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"event event1 /from 1pm /to 2pm","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"deadline dead1 /by today","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"unmark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"unmark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"todo task2","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"event event2 /from 2pm /to 3pm","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"deadline dead2 /by tomorrow","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"bleh","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"szejiancheng":25}}]
