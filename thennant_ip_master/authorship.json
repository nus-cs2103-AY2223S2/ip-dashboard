[{"path":"src/main/java/Crystal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"import java.util.*;","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"import java.io.File;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"class Crystal {","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"        fw.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"    private static ArrayList\u003cTask\u003e readFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"            String t \u003d s.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"            if (t.startsWith(\"T\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"                if (t.contains(\"| 0 |\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"                    String description \u003d t.replace(\"T | 0 |\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"                    Task n \u003d new Todo(description.trim());","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"                    n.isDone \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"                    temp.add(n);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"                    String description \u003d t.replace(\"T | 1 |\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"                    Task n \u003d new Todo(description.trim());","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"                    n.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"                    temp.add(n);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"            } else if (t.startsWith(\"D\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"                if (t.contains(\"| 0 |\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"                    String description \u003d t.replace(\"D | 0 |\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"                    int index \u003d description.lastIndexOf(\"|\");","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"                    String time \u003d description.substring(description.lastIndexOf(\"|\") + 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"                    description \u003d description.replace(description.substring(index), \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"                    System.out.println(time);","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"                    Task n \u003d new Deadline(description.trim(), time.trim());","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"                    n.isDone \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"                    temp.add(n);","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"                    String description \u003d t.replace(\"D | 1 |\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"                    int index \u003d description.lastIndexOf(\"|\");","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"                    String time \u003d description.substring(description.lastIndexOf(\"|\") + 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"                    description \u003d description.replace(description.substring(index), \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"thennant"},"content":"                    Task n \u003d new Deadline(description.trim(), time.trim());","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"                    n.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"                    temp.add(n);","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"thennant"},"content":"            } else if (t.startsWith(\"E\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"thennant"},"content":"                if (t.contains(\"| 0 |\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"thennant"},"content":"                    String description \u003d t.replace(\"E | 0 |\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"thennant"},"content":"                    int index \u003d description.lastIndexOf(\"|\");","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"thennant"},"content":"                    int index2 \u003d description.lastIndexOf(\"-\");","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"thennant"},"content":"                    String time \u003d description.substring(description.lastIndexOf(\"|\") + 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"thennant"},"content":"                    int index3 \u003d time.lastIndexOf(\"-\");","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"thennant"},"content":"                    time \u003d time.replace(time.substring(index3), \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"thennant"},"content":"                    String endtime \u003d description.substring(description.lastIndexOf(\"-\") + 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"thennant"},"content":"                    description \u003d description.replace(description.substring(index), \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"thennant"},"content":"                    Task n \u003d new Event(description.trim(), time.trim(), endtime.trim());","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"thennant"},"content":"                    n.isDone \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"thennant"},"content":"                    temp.add(n);","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"thennant"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"thennant"},"content":"                    String description \u003d t.replace(\"E | 1 |\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"thennant"},"content":"                    int index \u003d description.lastIndexOf(\"|\");","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"thennant"},"content":"                    int index2 \u003d description.lastIndexOf(\"-\");","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"thennant"},"content":"                    String time \u003d description.substring(description.lastIndexOf(\"|\") + 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"thennant"},"content":"                    int index3 \u003d time.lastIndexOf(\"-\");","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"thennant"},"content":"                    time \u003d time.replace(time.substring(index3), \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"thennant"},"content":"                    String endtime \u003d description.substring(description.lastIndexOf(\"-\") + 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"thennant"},"content":"                    description \u003d description.replace(description.substring(index), \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"thennant"},"content":"                    Task n \u003d new Event(description.trim(), time.trim(), endtime.trim());","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"thennant"},"content":"                    n.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"thennant"},"content":"                    temp.add(n);","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"thennant"},"content":"        return temp;","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"thennant"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-16"},{"lineNumber":100,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"thennant"},"content":"        String file2 \u003d \"/repos/Independentproject/myfiles/Crystal.txt\";","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"thennant"},"content":"        String base \u003d \"/repos/Independentproject\";","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"thennant"},"content":"        String relative \u003d new File(base).toURI().relativize(new File(file2).toURI()).getPath();","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"thennant"},"content":"        System.out.println(\" Hi! I am CRYSTAL.\\n How may I be of assistance?\");","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":108,"author":{"gitId":"thennant"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-16"},{"lineNumber":109,"author":{"gitId":"thennant"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-16"},{"lineNumber":110,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":111,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"thennant"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"thennant"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"thennant"},"content":"            list \u003d readFileContents(file2);","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"thennant"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"thennant"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":118,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"thennant"},"content":"        while (true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"thennant"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":123,"author":{"gitId":"thennant"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":124,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":125,"author":{"gitId":"thennant"},"content":"                    System.out.println(\"Here are your current tasks:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":126,"author":{"gitId":"thennant"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-16"},{"lineNumber":127,"author":{"gitId":"thennant"},"content":"                        System.out.println(i + 1 + \". \" + list.get(i));","lastModifiedDate":"2023-01-16"},{"lineNumber":128,"author":{"gitId":"thennant"},"content":"                    }","lastModifiedDate":"2023-01-16"},{"lineNumber":129,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":130,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"thennant"},"content":"                } else if (input.contains(\"unmark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":132,"author":{"gitId":"thennant"},"content":"                    String getnum \u003d input.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":133,"author":{"gitId":"thennant"},"content":"                    int num \u003d Integer.parseInt(getnum);","lastModifiedDate":"2023-01-17"},{"lineNumber":134,"author":{"gitId":"thennant"},"content":"                    Task t \u003d list.get(num - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":135,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":136,"author":{"gitId":"thennant"},"content":"                    System.out.println(\"Alright, I\u0027ve marked this task as not done: \");","lastModifiedDate":"2023-01-17"},{"lineNumber":137,"author":{"gitId":"thennant"},"content":"                    t.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":138,"author":{"gitId":"thennant"},"content":"                    System.out.println(t.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":139,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":140,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"thennant"},"content":"                } else if (input.contains(\"mark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":142,"author":{"gitId":"thennant"},"content":"                    String getnum \u003d input.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":143,"author":{"gitId":"thennant"},"content":"                    int num \u003d Integer.parseInt(getnum);","lastModifiedDate":"2023-01-17"},{"lineNumber":144,"author":{"gitId":"thennant"},"content":"                    Task t \u003d list.get(num - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":145,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":146,"author":{"gitId":"thennant"},"content":"                    System.out.println(\"Alright, I\u0027ve marked the task as done: \");","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"thennant"},"content":"                    t.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"thennant"},"content":"                    System.out.println(t.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":149,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"thennant"},"content":"                } else if (input.contains(\"todo\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":152,"author":{"gitId":"thennant"},"content":"                    String s \u003d input.replace(\"todo\", \"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":153,"author":{"gitId":"thennant"},"content":"                    if (s.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":154,"author":{"gitId":"thennant"},"content":"                        throw new CrystalException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":155,"author":{"gitId":"thennant"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":156,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":157,"author":{"gitId":"thennant"},"content":"                    Todo t \u003d new Todo(s);","lastModifiedDate":"2023-01-17"},{"lineNumber":158,"author":{"gitId":"thennant"},"content":"                    System.out.println(\"Alright, I\u0027ve added this task: \");","lastModifiedDate":"2023-01-17"},{"lineNumber":159,"author":{"gitId":"thennant"},"content":"                    System.out.println(t.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":160,"author":{"gitId":"thennant"},"content":"                    list.add(t);","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"thennant"},"content":"                    System.out.println(\"Current number of tasks : \" + list.size());","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":163,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":164,"author":{"gitId":"thennant"},"content":"                } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":165,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":166,"author":{"gitId":"thennant"},"content":"                    String s \u003d input.replace(\"deadline\", \"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":167,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":168,"author":{"gitId":"thennant"},"content":"//                    String[] arr \u003d s.split(\"/\");","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"thennant"},"content":"//                    String subs \u003d arr[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"thennant"},"content":"//                    String n \u003d arr[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"thennant"},"content":"//                    String subsubs \u003d n.replace(\"by\", \"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"thennant"},"content":"//                    Deadline d \u003d new Deadline(subs, subsubs);","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"thennant"},"content":"                    int index \u003d s.lastIndexOf(\"/by\");","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"thennant"},"content":"                    String description \u003d s.replace(s.substring(index), \"\"); //description of task","lastModifiedDate":"2023-01-24"},{"lineNumber":176,"author":{"gitId":"thennant"},"content":"                    s \u003d s.substring(index + 3); //date/time for by portion","lastModifiedDate":"2023-01-24"},{"lineNumber":177,"author":{"gitId":"thennant"},"content":"                    Deadline d \u003d new Deadline(description, s);","lastModifiedDate":"2023-01-24"},{"lineNumber":178,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":179,"author":{"gitId":"thennant"},"content":"                    System.out.println(\"Alright, I\u0027ve added this task: \");","lastModifiedDate":"2023-01-17"},{"lineNumber":180,"author":{"gitId":"thennant"},"content":"                    System.out.println(d.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":181,"author":{"gitId":"thennant"},"content":"                    list.add(d);","lastModifiedDate":"2023-01-17"},{"lineNumber":182,"author":{"gitId":"thennant"},"content":"                    System.out.println(\"Current number of tasks : \" + list.size());","lastModifiedDate":"2023-01-17"},{"lineNumber":183,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":184,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":185,"author":{"gitId":"thennant"},"content":"                } else if (input.contains(\"event\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":186,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":187,"author":{"gitId":"thennant"},"content":"                    String s \u003d input.replace(\"event\", \"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":188,"author":{"gitId":"thennant"},"content":"                    String[] arr \u003d s.split(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"thennant"},"content":"                    String subs \u003d arr[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"thennant"},"content":"                    String n \u003d arr[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"thennant"},"content":"                    String subsubs \u003d n.replace(\"from\", \"\");","lastModifiedDate":"2023-01-19"},{"lineNumber":192,"author":{"gitId":"thennant"},"content":"                    String t \u003d arr[2];","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"thennant"},"content":"                    String sublastsub \u003d t.replace(\"to\", \"\");","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"thennant"},"content":"                    Event e \u003d new Event(subs, subsubs, sublastsub);","lastModifiedDate":"2023-01-17"},{"lineNumber":195,"author":{"gitId":"thennant"},"content":"                    System.out.println(\"Alright, I\u0027ve added this task: \");","lastModifiedDate":"2023-01-17"},{"lineNumber":196,"author":{"gitId":"thennant"},"content":"                    System.out.println(e.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":197,"author":{"gitId":"thennant"},"content":"                    list.add(e);","lastModifiedDate":"2023-01-17"},{"lineNumber":198,"author":{"gitId":"thennant"},"content":"                    System.out.println(\"Current number of tasks: \" + list.size());","lastModifiedDate":"2023-01-17"},{"lineNumber":199,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":200,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":201,"author":{"gitId":"thennant"},"content":"                } else if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":202,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":203,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" Thank You. Please come by again~!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":204,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":205,"author":{"gitId":"thennant"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":206,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":207,"author":{"gitId":"thennant"},"content":"                } else if (input.contains(\"delete\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":208,"author":{"gitId":"thennant"},"content":"                    String getnum \u003d input.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-01-18"},{"lineNumber":209,"author":{"gitId":"thennant"},"content":"                    int num \u003d Integer.parseInt(getnum);","lastModifiedDate":"2023-01-18"},{"lineNumber":210,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-18"},{"lineNumber":211,"author":{"gitId":"thennant"},"content":"                    System.out.println(\"Alright, I\u0027ve removed this task: \");","lastModifiedDate":"2023-01-18"},{"lineNumber":212,"author":{"gitId":"thennant"},"content":"                    Task item \u003d list.get(num - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":213,"author":{"gitId":"thennant"},"content":"                    list.remove(num - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":214,"author":{"gitId":"thennant"},"content":"                    System.out.println(item.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":215,"author":{"gitId":"thennant"},"content":"                    System.out.println(\"Current number of tasks: \" + list.size());","lastModifiedDate":"2023-01-18"},{"lineNumber":216,"author":{"gitId":"thennant"},"content":"                    System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-18"},{"lineNumber":217,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":218,"author":{"gitId":"thennant"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":219,"author":{"gitId":"thennant"},"content":"                    throw new CrystalException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-22"},{"lineNumber":220,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":221,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":222,"author":{"gitId":"thennant"},"content":"            } catch (CrystalException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":223,"author":{"gitId":"thennant"},"content":"                System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":224,"author":{"gitId":"thennant"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-17"},{"lineNumber":225,"author":{"gitId":"thennant"},"content":"                System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":226,"author":{"gitId":"thennant"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2023-01-16"},{"lineNumber":227,"author":{"gitId":"thennant"},"content":"                continue;","lastModifiedDate":"2023-01-17"},{"lineNumber":228,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":229,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":230,"author":{"gitId":"thennant"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":231,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":232,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":233,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":234,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":235,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":236,"author":{"gitId":"thennant"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-01-22"},{"lineNumber":237,"author":{"gitId":"thennant"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":238,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":239,"author":{"gitId":"thennant"},"content":"            if (list.get(i).toString().startsWith(\"[T]\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":240,"author":{"gitId":"thennant"},"content":"                String s \u003d list.get(i).toString().replace(\"[T]\", \"T \");","lastModifiedDate":"2023-01-22"},{"lineNumber":241,"author":{"gitId":"thennant"},"content":"                if (list.get(i).toString().contains(\"[X]\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":242,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\"[X]\", \"| 0 |\"); //task done","lastModifiedDate":"2023-01-22"},{"lineNumber":243,"author":{"gitId":"thennant"},"content":"                    str.append(s + \"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":244,"author":{"gitId":"thennant"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":245,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\"[ ]\", \"| 1 |\");","lastModifiedDate":"2023-01-22"},{"lineNumber":246,"author":{"gitId":"thennant"},"content":"                    str.append(s + \"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":247,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":248,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":249,"author":{"gitId":"thennant"},"content":"            } else if (list.get(i).toString().startsWith(\"[D]\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":250,"author":{"gitId":"thennant"},"content":"                String s \u003d list.get(i).toString().replace(\"[D]\", \"D \");","lastModifiedDate":"2023-01-22"},{"lineNumber":251,"author":{"gitId":"thennant"},"content":"                if (list.get(i).toString().contains(\"[X]\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":252,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\"[X]\", \"| 0 |\");","lastModifiedDate":"2023-01-22"},{"lineNumber":253,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\"(by:\", \"|\");","lastModifiedDate":"2023-01-22"},{"lineNumber":254,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\")\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":255,"author":{"gitId":"thennant"},"content":"                    str.append(s + \"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":256,"author":{"gitId":"thennant"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":257,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\"[ ]\", \"| 1 |\");","lastModifiedDate":"2023-01-22"},{"lineNumber":258,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\"(by:\", \"|\");","lastModifiedDate":"2023-01-22"},{"lineNumber":259,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\")\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":260,"author":{"gitId":"thennant"},"content":"                    str.append(s + \"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":261,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":262,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":263,"author":{"gitId":"thennant"},"content":"            } else if (list.get(i).toString().startsWith(\"[E]\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":264,"author":{"gitId":"thennant"},"content":"                String s \u003d list.get(i).toString().replace(\"[E]\", \"E \");","lastModifiedDate":"2023-01-22"},{"lineNumber":265,"author":{"gitId":"thennant"},"content":"                if (list.get(i).toString().contains(\"[X]\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":266,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\"[X]\", \"| 0 |\");","lastModifiedDate":"2023-01-22"},{"lineNumber":267,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\"(from:\", \"|\");","lastModifiedDate":"2023-01-22"},{"lineNumber":268,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\"to:\", \"-\");","lastModifiedDate":"2023-01-22"},{"lineNumber":269,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\")\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":270,"author":{"gitId":"thennant"},"content":"                    str.append(s + \"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":271,"author":{"gitId":"thennant"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":272,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\"[ ]\", \"| 1 |\");","lastModifiedDate":"2023-01-22"},{"lineNumber":273,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\"(from:\", \"|\");","lastModifiedDate":"2023-01-22"},{"lineNumber":274,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\"to:\", \"-\");","lastModifiedDate":"2023-01-22"},{"lineNumber":275,"author":{"gitId":"thennant"},"content":"                    s \u003d s.replace(\")\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":276,"author":{"gitId":"thennant"},"content":"                    str.append(s + \"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":277,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":278,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":279,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":280,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":281,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":282,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":283,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":284,"author":{"gitId":"thennant"},"content":"        //Write to file","lastModifiedDate":"2023-01-22"},{"lineNumber":285,"author":{"gitId":"thennant"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":286,"author":{"gitId":"thennant"},"content":"            writeToFile(relative, str + System.lineSeparator());","lastModifiedDate":"2023-01-22"},{"lineNumber":287,"author":{"gitId":"thennant"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":288,"author":{"gitId":"thennant"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":289,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":290,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":291,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":292,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"thennant":292}},{"path":"src/main/java/CrystalException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"public class CrystalException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"    public CrystalException(String msg) {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"        super(msg);","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":7}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"    //protected String by;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    protected String by;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"        if (by.contains(\"day\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"            if (by.endsWith(\"day\") || by.endsWith(\"day \")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"                this.by \u003d by;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"                //For day with time","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"                try {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"                    String[] temp \u003d by.split(\"\\\\s+\");","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"                    String day \u003d temp[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"                    String time \u003d temp[2];","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"                    DateFormat f \u003d new SimpleDateFormat(\"hhmm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"                    Date d \u003d f.parse(time);","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"                    DateFormat f2 \u003d new SimpleDateFormat(\"hhmm aa\");","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"                    this.by \u003d day + \" \" + f2.format(d);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"                    System.out.println(\"Incorrect format!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"        } else if (by.contains(\"/\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"                DateFormat f \u003d new SimpleDateFormat(\"yyyy/MM/dd hhmm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"                Date d \u003d f.parse(by);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"                DateFormat date \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"                DateFormat time \u003d new SimpleDateFormat(\"hhmm aa\");","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"                String k \u003d date.format(d);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"                LocalDate d1 \u003d LocalDate.parse(k.trim());","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"                String t \u003d time.format(d);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"                this.by \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + t;","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"                System.out.println(\"Incorrect format!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"                DateFormat f \u003d new SimpleDateFormat(\"yyyy-MM-dd hhmm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"                Date d \u003d f.parse(by);","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"thennant"},"content":"                DateFormat date \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"                DateFormat time \u003d new SimpleDateFormat(\"hhmm aa\");","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"                String k \u003d date.format(d);","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"                LocalDate d1 \u003d LocalDate.parse(k.trim());","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"thennant"},"content":"                String t \u003d time.format(d);","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"thennant"},"content":"                this.by \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + t;","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"thennant"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"thennant"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"thennant"},"content":"                System.out.println(\"Incorrect format!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"thennant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"thennant"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":83}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"    protected String from;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"    protected String to;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \"to: \" + this.to + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"import java.util.*;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":20}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"    protected boolean isSet;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"    public Todo (String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"todo buy book","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"thennant":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"java -classpath ..\\bin Crystal \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"thennant":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"java -classpath ../bin Crystal \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"thennant":1}}]
