[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    mainClassName \u003d \"crystal.Crystal\"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    archiveBaseName \u003d \"crystal\"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"thennant":2}},{"path":"src/main/java/crystal/Crystal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import java.io.File;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" * Represents the Crystal class.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"class Crystal {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * Constructor for Crystal class.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     * @param filePath filepath to load the file from","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    public Crystal(String filePath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"            tasks \u003d new TaskList(storage.readFileContents());","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"        } catch (CrystalException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"     * Runs the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     * Shows the welcome message.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     * While isExit is false, loads the previous saved file and","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     * takes in user commands for the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"    public void run() {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"                Command cmd \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"                cmd.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"                storage.saveFile(tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"                isExit \u003d cmd.isExit();","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"            } catch (CrystalException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"                ui.showError(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"     * Main method which calls the run method.","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"        String file2 \u003d \"/repos/Independentproject/myfiles/Crystal.txt\";","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"        String base \u003d \"/repos/Independentproject\";","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"thennant"},"content":"        String relative \u003d new File(base).toURI().relativize(new File(file2).toURI()).getPath();","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"thennant"},"content":"        new Crystal(relative).run();","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"thennant":69}},{"path":"src/main/java/crystal/CrystalException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":" * Represents the CrystalException class.","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"public class CrystalException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"     * Constructor for CrystalException","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"     * @param msg The error message","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    public CrystalException(String msg) {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"        super(msg);","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":19}},{"path":"src/main/java/crystal/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"thennant":1,"-":10}},{"path":"src/main/java/crystal/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.command.ListCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.command.UnmarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.command.MarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import crystal.command.TodoCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"import crystal.command.DeadlineCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"import crystal.command.EventCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"import crystal.command.ByeCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"import crystal.command.DeleteCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"import crystal.command.FindCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":" * Represents the Parser task.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     * Returns the respective command object based on the command","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     * the user enters.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     * @param command User command","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"     * @throws CrystalException When user command is not recognised","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"    public static Command parse(String command) throws CrystalException {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"        } else if (command.contains(\"unmark\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"            String getNum \u003d command.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"            int num \u003d Integer.parseInt(getNum);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"            return new UnmarkCommand(num);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"        } else if (command.contains(\"mark\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"            String getNum \u003d command.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"            int num \u003d Integer.parseInt(getNum);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"            return new MarkCommand(num);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"        } else if (command.contains(\"todo\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"            String stringNoTodo \u003d command.replace(\"todo\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"            if (stringNoTodo.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"                throw new CrystalException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"            return new TodoCommand(stringNoTodo);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"        } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"            String stringNoDeadline \u003d command.replace(\"deadline\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"            int index \u003d stringNoDeadline.lastIndexOf(\"/by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"            String description \u003d stringNoDeadline.replace(stringNoDeadline.substring(index), \"\"); //description of task","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"            stringNoDeadline \u003d stringNoDeadline.substring(index + 3); //date/time for by portion","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"            return new DeadlineCommand(description, stringNoDeadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"        } else if (command.contains(\"event\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"            String stringNoEvent \u003d command.replace(\"event\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"            String[] arr \u003d stringNoEvent.split(\"/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"            String subString \u003d arr[0]; //description","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"            String temp \u003d arr[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"            String subStringNoFrom \u003d temp.replace(\"from\", \"\"); //from","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"            String tempOne \u003d arr[2];","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"            String subStringNoTo \u003d tempOne.replace(\"to\", \"\"); //to","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"            return new EventCommand(subString, subStringNoFrom, subStringNoTo);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"        } else if (command.contains(\"find\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"            String stringReplaceFind \u003d command.replace(\"find\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"thennant"},"content":"            return new FindCommand(stringReplaceFind);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"        } else if (command.contains(\"delete\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"thennant"},"content":"            String getNum \u003d command.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"thennant"},"content":"            int num \u003d Integer.parseInt(getNum);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"thennant"},"content":"            return new DeleteCommand(num);","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"thennant"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"thennant"},"content":"            throw new CrystalException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":74}},{"path":"src/main/java/crystal/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"import crystal.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"import crystal.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"import crystal.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"import crystal.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":" * Represents the Storage task.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    String filepath;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     * @param filepath filepath where the list is stored at.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     * Method to write to the file.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     * @param filepath Filepath to store the list at","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"     * @param textToAdd Text to be printed on the file","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"    //Save to file","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"    public void writeToFile(String filepath,String textToAdd) throws IOException {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"        fw.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"     * Method to save the file.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"     * @param tasks Tasklist to be saved","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"    public void saveFile(TaskList tasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"            if (tasks.get(i).toString().startsWith(\"[T]\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"                String stringReplaceT \u003d tasks.get(i).toString().replace(\"[T]\", \"T \");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"                if (tasks.get(i).toString().contains(\"[X]\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"thennant"},"content":"                    stringReplaceT \u003d stringReplaceT.replace(\"[X]\", \"| 0 |\"); //task done","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"                    str.append(stringReplaceT + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"                    stringReplaceT \u003d stringReplaceT.replace(\"[ ]\", \"| 1 |\");","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"thennant"},"content":"                    str.append(stringReplaceT + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"thennant"},"content":"            } else if (tasks.get(i).toPrint().startsWith(\"[D]\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"thennant"},"content":"                String stringReplaceD \u003d tasks.get(i).toPrint().replace(\"[D]\", \"D \");","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"thennant"},"content":"                if (tasks.get(i).toPrint().contains(\"[X]\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"thennant"},"content":"                    stringReplaceD \u003d stringReplaceD.replace(\"[X]\", \"| 0 |\");","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"thennant"},"content":"                    stringReplaceD \u003d stringReplaceD.replace(\"(by:\", \"|\");","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"thennant"},"content":"                    stringReplaceD \u003d stringReplaceD.replace(\")\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"thennant"},"content":"                    str.append(stringReplaceD + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"thennant"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"thennant"},"content":"                    stringReplaceD \u003d stringReplaceD.replace(\"[ ]\", \"| 1 |\");","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"thennant"},"content":"                    stringReplaceD \u003d stringReplaceD.replace(\"(by:\", \"|\");","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"thennant"},"content":"                    stringReplaceD \u003d stringReplaceD.replace(\")\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"thennant"},"content":"                    str.append(stringReplaceD + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"thennant"},"content":"            } else if (tasks.get(i).toPrint().startsWith(\"[E]\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"thennant"},"content":"                String stringReplaceE \u003d tasks.get(i).toPrint().replace(\"[E]\", \"E \");","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"thennant"},"content":"                if (tasks.get(i).toPrint().contains(\"[X]\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"thennant"},"content":"                    stringReplaceE \u003d stringReplaceE.replace(\"[X]\", \"| 0 |\");","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"thennant"},"content":"                    stringReplaceE \u003d stringReplaceE.replace(\"(from:\", \"|\");","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"thennant"},"content":"                    stringReplaceE \u003d stringReplaceE.replace(\"to:\", \" - \");","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"thennant"},"content":"                    stringReplaceE \u003d stringReplaceE.replace(\")\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"thennant"},"content":"                    str.append(stringReplaceE + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"thennant"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"thennant"},"content":"                    stringReplaceE \u003d stringReplaceE.replace(\"[ ]\", \"| 1 |\");","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"thennant"},"content":"                    stringReplaceE \u003d stringReplaceE.replace(\"(from:\", \"|\");","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"thennant"},"content":"                    stringReplaceE \u003d stringReplaceE.replace(\"to:\", \"-\");","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"thennant"},"content":"                    stringReplaceE \u003d stringReplaceE.replace(\")\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"thennant"},"content":"                    str.append(stringReplaceE + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"thennant"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"thennant"},"content":"            writeToFile(this.filepath, str + System.lineSeparator());","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"thennant"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"thennant"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"thennant"},"content":"     * Method to read the file and return a Task arraylist.","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"thennant"},"content":"     * @throws CrystalException When the date format is not recognised","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"thennant"},"content":"    //Load file","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"thennant"},"content":"    public ArrayList\u003cTask\u003e readFileContents() throws CrystalException{","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"thennant"},"content":"        File file \u003d new File(this.filepath); // create a File for the given file path","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"thennant"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"thennant"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"thennant"},"content":"            Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"thennant"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"thennant"},"content":"                String nextInput \u003d s.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"thennant"},"content":"                if (nextInput.startsWith(\"T\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"thennant"},"content":"                    if (nextInput.contains(\"| 0 |\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"thennant"},"content":"                        String description \u003d nextInput.replace(\"T | 0 |\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"thennant"},"content":"                        Task newTask \u003d new Todo(description.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"thennant"},"content":"                        newTask.isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"thennant"},"content":"                        temp.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"thennant"},"content":"                    } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"thennant"},"content":"                        String description \u003d nextInput.replace(\"T | 1 |\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"thennant"},"content":"                        Task newTask \u003d new Todo(description.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"thennant"},"content":"                        newTask.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"thennant"},"content":"                        temp.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"thennant"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"thennant"},"content":"                } else if (nextInput.startsWith(\"D\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"thennant"},"content":"                    if (nextInput.contains(\"| 0 |\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"thennant"},"content":"                        String description \u003d nextInput.replace(\"D | 0 |\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"thennant"},"content":"                        int index \u003d description.lastIndexOf(\"|\");","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"thennant"},"content":"                        String time \u003d description.substring(description.lastIndexOf(\"|\") + 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"thennant"},"content":"                        description \u003d description.replace(description.substring(index), \"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"thennant"},"content":"                        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"thennant"},"content":"                            Task newTask \u003d new Deadline(description.trim(), time.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"thennant"},"content":"                            newTask.isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"thennant"},"content":"                            temp.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"thennant"},"content":"                        } catch (CrystalException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"thennant"},"content":"                            System.out.println(\"Wrong date format! Please change!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"thennant"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"thennant"},"content":"                    } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"thennant"},"content":"                        String description \u003d nextInput.replace(\"D | 1 |\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"thennant"},"content":"                        int index \u003d description.lastIndexOf(\"|\");","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"thennant"},"content":"                        String time \u003d description.substring(description.lastIndexOf(\"|\") + 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"thennant"},"content":"                        description \u003d description.replace(description.substring(index), \"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"thennant"},"content":"                        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":157,"author":{"gitId":"thennant"},"content":"                            Task newTask \u003d new Deadline(description.trim(), time.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"thennant"},"content":"                            newTask.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"thennant"},"content":"                            temp.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"thennant"},"content":"                        } catch (CrystalException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"thennant"},"content":"                            System.out.println(\"Wrong date format! Please change!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"thennant"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"thennant"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":164,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":165,"author":{"gitId":"thennant"},"content":"                } else if (nextInput.startsWith(\"E\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"thennant"},"content":"                    if (nextInput.contains(\"| 0 |\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"thennant"},"content":"                        String description \u003d nextInput.replace(\"E | 0 |\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"thennant"},"content":"                        int index \u003d description.lastIndexOf(\"|\");","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"thennant"},"content":"                        int index2 \u003d description.lastIndexOf(\"-\");","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"thennant"},"content":"                        String time \u003d description.substring(description.lastIndexOf(\"|\") + 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":171,"author":{"gitId":"thennant"},"content":"                        int index3 \u003d time.lastIndexOf(\" - \");","lastModifiedDate":"2023-01-25"},{"lineNumber":172,"author":{"gitId":"thennant"},"content":"                        time \u003d time.replace(time.substring(index3), \"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":173,"author":{"gitId":"thennant"},"content":"                        String endTime \u003d description.substring(description.lastIndexOf(\" - \") + 3);","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"thennant"},"content":"                        description \u003d description.replace(description.substring(index), \"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"thennant"},"content":"                        Task newTask \u003d new Event(description.trim(), time.trim(), endTime.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"thennant"},"content":"                        newTask.isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"thennant"},"content":"                        temp.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"thennant"},"content":"                    } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"thennant"},"content":"                        String description \u003d nextInput.replace(\"E | 1 |\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"thennant"},"content":"                        int index \u003d description.lastIndexOf(\"|\");","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"thennant"},"content":"                        int index2 \u003d description.lastIndexOf(\"-\");","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"thennant"},"content":"                        String time \u003d description.substring(description.lastIndexOf(\"|\") + 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"thennant"},"content":"                        int index3 \u003d time.lastIndexOf(\" - \");","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"thennant"},"content":"                        time \u003d time.replace(time.substring(index3), \"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":185,"author":{"gitId":"thennant"},"content":"                        String endTime \u003d description.substring(description.lastIndexOf(\" - \") + 3);","lastModifiedDate":"2023-01-29"},{"lineNumber":186,"author":{"gitId":"thennant"},"content":"                        description \u003d description.replace(description.substring(index), \"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":187,"author":{"gitId":"thennant"},"content":"                        Task newTask \u003d new Event(description.trim(), time.trim(), endTime.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":188,"author":{"gitId":"thennant"},"content":"                        newTask.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"thennant"},"content":"                        temp.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":190,"author":{"gitId":"thennant"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":191,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":192,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":193,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":194,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":195,"author":{"gitId":"thennant"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":196,"author":{"gitId":"thennant"},"content":"            e.getMessage();","lastModifiedDate":"2023-01-25"},{"lineNumber":197,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":198,"author":{"gitId":"thennant"},"content":"        return temp;","lastModifiedDate":"2023-01-25"},{"lineNumber":199,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":200,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":200}},{"path":"src/main/java/crystal/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" * Represents the TaskList class.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    public ArrayList\u003cTask\u003e arr;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     * Constructor for TaskList","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     * @param arr Task arraylist","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * @throws CrystalException When the date format is incorrect","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"    public TaskList(ArrayList\u003cTask\u003e arr) throws CrystalException{","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"        this.arr \u003d arr;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"        this.arr \u003d arr;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"     * Returns the size of the arraylist.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"    public int size() {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"        return arr.size();","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"     * Gets the respective task at the index i.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"     * @param i Index in the arraylist.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"        return this.arr.get(i);","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"     * Add the new task to the arraylist","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"        this.arr.add(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"     * Removes the task from the arraylist.","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"thennant"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"        this.arr.remove(i);","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":65}},{"path":"src/main/java/crystal/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" * Represents the Ui task.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * Return the next Line in the file","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"        System.out.println(\" Hi! I am CRYSTAL.\\n How may I be of assistance?\");","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     * Prints the error message.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     * @param e Exception","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"    public void showError(CrystalException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"     * Prints the error message if the file failed to load.","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Load Error\");","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"     * Prints the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"     * @param task tasklist","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"    public void printList(TaskList task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Here are your current tasks:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"        for (int i \u003d 0; i \u003c task.size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"            System.out.println(i + 1 + \". \" + task.get(i));","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"thennant"},"content":"     * Prints the unmark task message.","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"thennant"},"content":"     * @param task tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"thennant"},"content":"     * @param num The task number to be unmarked","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"thennant"},"content":"    public void printUnmark(TaskList task, int num) {","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"thennant"},"content":"        Task unmarkTask \u003d task.get(num-1);","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Alright, I\u0027ve marked this task as not done: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"thennant"},"content":"        unmarkTask.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"thennant"},"content":"        System.out.println(unmarkTask.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"thennant"},"content":"     * Prints the mark task message.","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"thennant"},"content":"     * @param task tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"thennant"},"content":"     * @param num The task number to be marked","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"thennant"},"content":"    public void printMark(TaskList task, int num) {","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"thennant"},"content":"        Task markTask \u003d task.get(num - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Alright, I\u0027ve marked the task as done: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"thennant"},"content":"        markTask.isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"thennant"},"content":"        System.out.println(markTask.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"thennant"},"content":"     * Prints the todo task message.","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"thennant"},"content":"     * @param task tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"thennant"},"content":"     * @param td Todo task","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"thennant"},"content":"    public void printTodo(TaskList task, Todo td) {","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Alright, I\u0027ve added this task: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"thennant"},"content":"        System.out.println(td.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Current number of tasks : \" + task.size());","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"thennant"},"content":"     * Prints the deadline task message.","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"thennant"},"content":"     * @param task tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"thennant"},"content":"     * @param dl Deadline task.","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"thennant"},"content":"    public void printDeadline(TaskList task, Deadline dl) {","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Alright, I\u0027ve added this task: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"thennant"},"content":"        System.out.println(dl.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Current number of tasks : \" + task.size());","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"thennant"},"content":"     * Prints the event task message.","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"thennant"},"content":"     * @param task tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"thennant"},"content":"     * @param evt Event task.","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"thennant"},"content":"    public void printEvent(TaskList task, Event evt) {","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Alright, I\u0027ve added this task: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"thennant"},"content":"        System.out.println(evt.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Current number of tasks: \" + task.size());","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"thennant"},"content":"     * Prints the bye message.","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"thennant"},"content":"    public void printBye() {","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"thennant"},"content":"        System.out.println(\" Thank You. Please come by again~!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"thennant"},"content":"     * Prints the delete message.","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"thennant"},"content":"     * @param task Tasklist","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"thennant"},"content":"     * @param num the task number to be deleted","lastModifiedDate":"2023-01-28"},{"lineNumber":155,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":156,"author":{"gitId":"thennant"},"content":"    public void printDelete(TaskList task, int num) {","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Alright, I\u0027ve removed this task: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"thennant"},"content":"        Task item \u003d task.get(num - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"thennant"},"content":"        task.remove(num - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"thennant"},"content":"        System.out.println(item.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Current number of tasks: \" + task.size());","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"thennant"},"content":"    public void printFind(TaskList task, String word) {","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"thennant"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"thennant"},"content":"        for (int i \u003d 0; i \u003c task.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"thennant"},"content":"            if (task.get(i).getDescription().contains(word)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"thennant"},"content":"                System.out.println(counter + \". \" + task.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"thennant"},"content":"                counter++;","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":179}},{"path":"src/main/java/crystal/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" * Represents the bye command when the user enters \"bye\".","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     * Executes the bye command to print the bye message.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"        ui.printBye();","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to true to end the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":34}},{"path":"src/main/java/crystal/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the abstract command class for all","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" * the other commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     * Abstract method to execute the respective command","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * @param tasks the tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"     * Abstract method to determine whether the program should end or not.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":32}},{"path":"src/main/java/crystal/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import crystal.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" * Represents the deadline command when the user enters \"deadline\".","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"public class DeadlineCommand extends Command{","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    public String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    public String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * Constructor for DeadlineCommand class.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     * @param by The date time portion of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     * Executes the deadline command to print the deadline message.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     * @throws CrystalException if the user input is incorrectly formatted","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CrystalException {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"        ui.printDeadline(tasks, deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":53}},{"path":"src/main/java/crystal/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" * Represents the delete command when the user enters \"delete\".","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    public int num;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     * Constructor for DeleteCommand class.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * @param num Task number to be deleted","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"    public DeleteCommand(int num) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"     * Executes the delete command to print the delete message.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"    public void execute(TaskList tasks, Ui ui,Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"        ui.printDelete(tasks, this.num);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":44}},{"path":"src/main/java/crystal/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import crystal.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" * Represents the event command when the user enters \"event\".","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    public String from;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    public String to;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    public String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * Constructor for EventCommand class.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     * @param description description of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     * @param from start date of task","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     * @param to end date of task","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     * Executes the event command to print the event message.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    public void execute(TaskList tasks, Ui ui,Storage storage) throws CrystalException {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"        tasks.add(event);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"        ui.printEvent(tasks, event);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":54}},{"path":"src/main/java/crystal/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" * Represents the find command when the user enters \"find\".","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    public String word;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     * Constructor for FindCommand class","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"    public FindCommand(String word) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"        this.word \u003d word;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     * Executes the find command to print the find message.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"        ui.printFind(tasks, this.word);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"thennant":42}},{"path":"src/main/java/crystal/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" * Represents the list command when the user enters \"list\".","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"     * Executes the list command to print the list message.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"        ui.printList(tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":32}},{"path":"src/main/java/crystal/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" * Represents the mark command when the user enters \"mark\".","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    public int num;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     * Constructor for MarkCommand class.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * @param num Task number to be marked","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    public MarkCommand(int num) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     * Executes the event command to print the event message.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    public void execute(TaskList tasks, Ui ui,Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"        ui.printMark(tasks, this.num);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":48}},{"path":"src/main/java/crystal/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the todo command when the user enters \"todo\".","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class TodoCommand extends Command{","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    public String task;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * Constructor for TodoCommand class.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     * @param task Task description","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    public TodoCommand(String task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     * Executes the todo command to print the todo message.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    public void execute(TaskList tasks, Ui ui,Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"        Todo todo \u003d new Todo(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"        ui.printTodo(tasks, todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":49}},{"path":"src/main/java/crystal/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" * Represents the unmark command when the user enters \"unmark\".","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    public int num;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     * Constructor for UnmarkCommand class.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * @param num Task number to be unmarked","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"    public UnmarkCommand(int num) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     * Executes the unmark command to print the unmark message.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"    public void execute(TaskList tasks, Ui ui,Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"        ui.printUnmark(tasks, this.num);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":47}},{"path":"src/main/java/crystal/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    public LocalDateTime by;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     * @param description Task description","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     * @param by Task date and time","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     * @throws CrystalException When user input is in the incorrect format","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"    public Deadline(String description, String by) throws CrystalException {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(by.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"            this.by \u003d date;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"            throw new CrystalException(\"Please change the input date format to yyyy-MMM-dThh:mm!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     *  Returns the printed output shown in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a\")) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"     *  Returns the String output when saving the list","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"    public String toPrint() {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":56}},{"path":"src/main/java/crystal/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the Event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     * Constructor for Event class.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * @param description Task description","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     * @param from Task starting date and time","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     * @param to Task end date and time","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"    public Event(String description, String from, String to) throws CrystalException {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"            this.from \u003d LocalDateTime.parse(from.trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"            this.to \u003d LocalDateTime.parse(to.trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"            throw new CrystalException(\"Please change the input date format to yyyy-MMM-dThh:mm!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     *  Returns the printed output shown in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a\")) + \" to: \"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"                + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"     *  Returns the String output when saving the list","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"    public String toPrint() {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":55}},{"path":"src/main/java/crystal/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":" * Represents the abstract task class for all tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"    public boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"     * Constructor for Task class.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     * @param description Task description","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     *  Returns a String X if isDone is true else","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"     *  returns an empty string","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"        // mark done task with X","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"     *  Returns the description of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"        return this.description;","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"     *  Returns the printed output format shown in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"     *  Returns the String output for when saving the list","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"    public String toPrint() {","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"        return this.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":61}},{"path":"src/main/java/crystal/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":" * Represents the Todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"    protected boolean isSet;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"     * @param description Task description","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    public Todo (String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     *  Returns the printed output shown in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":30}},{"path":"src/test/java/crystal/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":" * Represents the DeadlineCommandTest class.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"     * Test if the Deadline Command class is working as intended.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    public void testDeadlineCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"        Command c \u003d new DeadlineCommand(\"buy book\", \"2019-10-15T18:00\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"        assertEquals(false, c.isExit());","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"thennant":21}},{"path":"src/test/java/crystal/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":" * Represents the TodoCommandTest class.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"     * Test if the Todo Command class is working as intended.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    public void testTodoCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"        Command c \u003d new TodoCommand(\"buy book\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"        assertEquals(false, c.isExit());","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"thennant":21}},{"path":"src/test/java/crystal/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the DeadlineTest class.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     * test if the deadline class is working as intended","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"    public void testDeadLine() throws CrystalException {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"        Deadline dl \u003d new Deadline(\"return book\", \"2019-10-15T18:00\");","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"        assertEquals(\"[D][ ] return book (by: Oct 15 2019 0600 PM)\", dl.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"thennant":23}},{"path":"src/test/java/crystal/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the EventTest class.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class EventTest  {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     * test if the Event class is working as intended","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"    public void testEvent() throws CrystalException {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"        Event event \u003d new Event(\"project meeting\", \"Mon 2pm\", \"4pm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"        assertEquals(\"[E][ ] project meeting (from: Mon 2pm to: 4pm)\", event.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"thennant":23}},{"path":"src/test/java/crystal/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":" * Represents the TodoTest class.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"     * test if the Todo class is working as intended","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    public void testTodo(){","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"        assertEquals(\"[T][ ] borrow book\", todo.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"thennant":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"todo buy book","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"thennant":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"java -classpath ..\\bin Crystal \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"thennant":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"java -classpath ../bin Crystal \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"thennant":1}}]
