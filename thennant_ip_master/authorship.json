[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"# CRYSTAL ","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"## Image Credits","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"Images were obtained from [https://unsplash.com/](https://unsplash.com/).\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"Silhouette image was taken by [Joe Shields](https://unsplash.com/photos/dLij9K4ObYY?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditShareLink).\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"Crystal image was taken by [Nicole Avagliano](https://unsplash.com/photos/TeLjs2pL5fA?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditShareLink).","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thennant":6,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"checkstyle {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"javafx {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    version \u003d \"19\"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"    mainClassName \u003d \"crystal.Launcher\"","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"    archiveBaseName \u003d \"crystal\"","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"thennant"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"thennant":28}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"C.R.Y.S.T.A.L is a desktop app for managing tasks. It has been optimized for use either ","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"by a Command Line Interface (CLI) or a Graphical User Interface (GUI). If you need a personalise","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"tasklist, C.R.Y.S.T.A.L is here for you.","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"![Crystal](https://github.com/thennant/ip/blob/master/docs/Ui.png)","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"- [Quick Start](#Quick-Start)","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"- [Features](#Features)","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"- [Usage](#Usage)","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"- [Command Summary](#Command-Summary)","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"## Quick Start","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"2. Download the latest version of `Crystal` from [here](https://github.com/thennant/ip/releases) ","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"### Feature-todo","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"Creates a task that is to be done.","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"### Feature-deadline","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"Creates a task that has a deadline.","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"### Feature-event","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"Creates a event that has a start date and an end date","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"### Feature-mark","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"Marks a task as done or completed","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"### Feature-unmark","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"Unmarks a task that was previously marked.","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"### Feature-list","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"Lists out all the current task in the tasklist.","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"### Feature-delete","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"Deletes a specific task specified by the user.","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"### Feature-priority","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"Sets a priority tag to a task that has to be prioritized.","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"### Feature-find","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"Finds all the tasks that contain a specific keyword","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"### Feature-bye","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"Ends the program.","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"### `Keyword` - todo ","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"User enters the command `todo` together with the description of the task.","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"thennant"},"content":"`todo buy books`","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"thennant"},"content":"The task is then stored into the tasklist and indicated as \"[T]\".","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":78,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"thennant"},"content":"Alright, I\u0027ve added this task:","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"thennant"},"content":"[T] [ ] buy books","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"thennant"},"content":"Current number of task: 1","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"thennant"},"content":"### `Keyword` - deadline","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"thennant"},"content":"User enters the command `deadline` together with the description of the task and the date and time.","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"thennant"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"thennant"},"content":"`deadline sell books /by 2020-10-11T15:00`","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"thennant"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"thennant"},"content":"The task is then stored into the tasklist and indicated as \"[D]\".","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"thennant"},"content":"expected output","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"thennant"},"content":"Alright, I\u0027ve added this task:","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"thennant"},"content":"[D] [ ] sell books (by: Oct 11 2020 0300 PM)","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"thennant"},"content":"Current number of task: 1","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"thennant"},"content":"### `Keyword` - event","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"thennant"},"content":"User enters the command `event` together with the description of the task and the date and time.","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"thennant"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"thennant"},"content":"`event return books /from 2020-10-11T15:00 /to 2020-11-12T13:00`","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"thennant"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"thennant"},"content":"The task is then stored into the tasklist and indicated as \"[E]\".","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"thennant"},"content":"expected output","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"thennant"},"content":"Alright, I\u0027ve added this task:","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"thennant"},"content":"[E] [ ] return books (from: Oct 11 2020 0300 PM ","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"thennant"},"content":"to Nov 12 2020 0100 PM)","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"thennant"},"content":"Current number of task: 1","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"thennant"},"content":"### `Keyword` - mark","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"thennant"},"content":"User enters the command `mark` together with the task number in the list.","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":131,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"thennant"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":133,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":134,"author":{"gitId":"thennant"},"content":"`mark 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":135,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":136,"author":{"gitId":"thennant"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":138,"author":{"gitId":"thennant"},"content":"The task is then marked and indicated with \"[X]\".","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":141,"author":{"gitId":"thennant"},"content":"expected output","lastModifiedDate":"2023-02-15"},{"lineNumber":142,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":143,"author":{"gitId":"thennant"},"content":"Alright, I\u0027ve marked the task as done:","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"thennant"},"content":"[T] [X] buy books","lastModifiedDate":"2023-02-15"},{"lineNumber":145,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"thennant"},"content":"### `Keyword` - unmark","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"thennant"},"content":"User enters the command `unmark` together with the task number in the list.","lastModifiedDate":"2023-02-15"},{"lineNumber":150,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":152,"author":{"gitId":"thennant"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":154,"author":{"gitId":"thennant"},"content":"`unmark 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":155,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":156,"author":{"gitId":"thennant"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":158,"author":{"gitId":"thennant"},"content":"The task is then unmarked and indicated with \"[ ]\".","lastModifiedDate":"2023-02-15"},{"lineNumber":159,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":161,"author":{"gitId":"thennant"},"content":"expected output","lastModifiedDate":"2023-02-15"},{"lineNumber":162,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":163,"author":{"gitId":"thennant"},"content":"Alright, I\u0027ve marked the task as not done:","lastModifiedDate":"2023-02-15"},{"lineNumber":164,"author":{"gitId":"thennant"},"content":"[T] [ ] buy books","lastModifiedDate":"2023-02-15"},{"lineNumber":165,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":166,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":167,"author":{"gitId":"thennant"},"content":"### `Keyword` - list","lastModifiedDate":"2023-02-15"},{"lineNumber":168,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":169,"author":{"gitId":"thennant"},"content":"User enters the command `list`.","lastModifiedDate":"2023-02-15"},{"lineNumber":170,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":171,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":172,"author":{"gitId":"thennant"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":173,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":174,"author":{"gitId":"thennant"},"content":"`list`","lastModifiedDate":"2023-02-15"},{"lineNumber":175,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":176,"author":{"gitId":"thennant"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":177,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":178,"author":{"gitId":"thennant"},"content":"The task list is then displayed for the user.","lastModifiedDate":"2023-02-15"},{"lineNumber":179,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":180,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":181,"author":{"gitId":"thennant"},"content":"expected output","lastModifiedDate":"2023-02-15"},{"lineNumber":182,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":183,"author":{"gitId":"thennant"},"content":"Here are your current tasks:","lastModifiedDate":"2023-02-15"},{"lineNumber":184,"author":{"gitId":"thennant"},"content":"1. [T] [X] buy books","lastModifiedDate":"2023-02-15"},{"lineNumber":185,"author":{"gitId":"thennant"},"content":"2. [D] [ ] sell books (by: Oct 11 2020 0300 PM)","lastModifiedDate":"2023-02-15"},{"lineNumber":186,"author":{"gitId":"thennant"},"content":"3. [E] [ ] return books (by: Oct 11 2020 0300 ","lastModifiedDate":"2023-02-15"},{"lineNumber":187,"author":{"gitId":"thennant"},"content":"PM to Nov 12 2020 0100 PM)","lastModifiedDate":"2023-02-15"},{"lineNumber":188,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":189,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":190,"author":{"gitId":"thennant"},"content":"### `Keyword` - delete","lastModifiedDate":"2023-02-15"},{"lineNumber":191,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":192,"author":{"gitId":"thennant"},"content":"User enters the command `delete` together with the task number in the list.","lastModifiedDate":"2023-02-15"},{"lineNumber":193,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":194,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":195,"author":{"gitId":"thennant"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":196,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":197,"author":{"gitId":"thennant"},"content":"`delete 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":201,"author":{"gitId":"thennant"},"content":"The task is then deleted and removed from the list.","lastModifiedDate":"2023-02-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2023-02-15"},{"lineNumber":205,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":206,"author":{"gitId":"thennant"},"content":"Alright, I\u0027ve removed this task:","lastModifiedDate":"2023-02-15"},{"lineNumber":207,"author":{"gitId":"thennant"},"content":"[T] [ ] buy books","lastModifiedDate":"2023-02-15"},{"lineNumber":208,"author":{"gitId":"thennant"},"content":"Current number of tasks: 2","lastModifiedDate":"2023-02-15"},{"lineNumber":209,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":211,"author":{"gitId":"thennant"},"content":"### `Keyword` - priority","lastModifiedDate":"2023-02-15"},{"lineNumber":212,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":213,"author":{"gitId":"thennant"},"content":"User enters the command `priority` together with the task number in the list","lastModifiedDate":"2023-02-15"},{"lineNumber":214,"author":{"gitId":"thennant"},"content":"and the priority level.","lastModifiedDate":"2023-02-15"},{"lineNumber":215,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":216,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":217,"author":{"gitId":"thennant"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":218,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":219,"author":{"gitId":"thennant"},"content":"`priority item 1 level 2`","lastModifiedDate":"2023-02-15"},{"lineNumber":220,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":221,"author":{"gitId":"thennant"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":222,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":223,"author":{"gitId":"thennant"},"content":"The task is given the priority level. The priority level cannot be more than 9.","lastModifiedDate":"2023-02-17"},{"lineNumber":224,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":225,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":226,"author":{"gitId":"thennant"},"content":"expected output","lastModifiedDate":"2023-02-15"},{"lineNumber":227,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":228,"author":{"gitId":"thennant"},"content":"Alright, I\u0027ve marked this task as priority level 2","lastModifiedDate":"2023-02-15"},{"lineNumber":229,"author":{"gitId":"thennant"},"content":"[T] [ ] buy books (priority level 2)","lastModifiedDate":"2023-02-15"},{"lineNumber":230,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":231,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":232,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":233,"author":{"gitId":"thennant"},"content":"### `Keyword` - find","lastModifiedDate":"2023-02-15"},{"lineNumber":234,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":235,"author":{"gitId":"thennant"},"content":"User enters the command `find` together with the keyword they want to look ","lastModifiedDate":"2023-02-15"},{"lineNumber":236,"author":{"gitId":"thennant"},"content":"for.","lastModifiedDate":"2023-02-15"},{"lineNumber":237,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":238,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":239,"author":{"gitId":"thennant"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":240,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":241,"author":{"gitId":"thennant"},"content":"`find book`","lastModifiedDate":"2023-02-15"},{"lineNumber":242,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":243,"author":{"gitId":"thennant"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":244,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":245,"author":{"gitId":"thennant"},"content":"Displays all the tasks that contain the keyword.","lastModifiedDate":"2023-02-15"},{"lineNumber":246,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":247,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":248,"author":{"gitId":"thennant"},"content":"expected output","lastModifiedDate":"2023-02-15"},{"lineNumber":249,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":250,"author":{"gitId":"thennant"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-15"},{"lineNumber":251,"author":{"gitId":"thennant"},"content":"1. [T] [ ] buy books (priority level 2)","lastModifiedDate":"2023-02-15"},{"lineNumber":252,"author":{"gitId":"thennant"},"content":"2. [D] [ ] sell books (by: Oct 11 2020 0300 PM)","lastModifiedDate":"2023-02-15"},{"lineNumber":253,"author":{"gitId":"thennant"},"content":"3. [E] [ ] return books (by: Oct 11 2020 0300 ","lastModifiedDate":"2023-02-15"},{"lineNumber":254,"author":{"gitId":"thennant"},"content":"PM to Nov 12 2020 0100 PM)","lastModifiedDate":"2023-02-15"},{"lineNumber":255,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":256,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":257,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":258,"author":{"gitId":"thennant"},"content":"### `Keyword` - bye","lastModifiedDate":"2023-02-15"},{"lineNumber":259,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":260,"author":{"gitId":"thennant"},"content":"User enters the command `bye`.","lastModifiedDate":"2023-02-15"},{"lineNumber":261,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":262,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":263,"author":{"gitId":"thennant"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":264,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":265,"author":{"gitId":"thennant"},"content":"`bye`","lastModifiedDate":"2023-02-15"},{"lineNumber":266,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":267,"author":{"gitId":"thennant"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":268,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":269,"author":{"gitId":"thennant"},"content":"Displays a good bye message to the user and closes the window.","lastModifiedDate":"2023-02-15"},{"lineNumber":270,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":271,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":272,"author":{"gitId":"thennant"},"content":"expected output","lastModifiedDate":"2023-02-15"},{"lineNumber":273,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":274,"author":{"gitId":"thennant"},"content":"Thank You. Please come by again~!","lastModifiedDate":"2023-02-15"},{"lineNumber":275,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":276,"author":{"gitId":"thennant"},"content":"------------------------------------------------","lastModifiedDate":"2023-02-15"},{"lineNumber":277,"author":{"gitId":"thennant"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":278,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":279,"author":{"gitId":"thennant"},"content":"## Command Summary","lastModifiedDate":"2023-02-15"},{"lineNumber":280,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":281,"author":{"gitId":"thennant"},"content":"1. `todo`: Creates todo task","lastModifiedDate":"2023-02-15"},{"lineNumber":282,"author":{"gitId":"thennant"},"content":"2. `deadline`: Creates deadline task","lastModifiedDate":"2023-02-15"},{"lineNumber":283,"author":{"gitId":"thennant"},"content":"3. `event`: Creates event task","lastModifiedDate":"2023-02-15"},{"lineNumber":284,"author":{"gitId":"thennant"},"content":"4. `mark`: Marks a task","lastModifiedDate":"2023-02-15"},{"lineNumber":285,"author":{"gitId":"thennant"},"content":"5. `unmark`: Unmarks a task","lastModifiedDate":"2023-02-15"},{"lineNumber":286,"author":{"gitId":"thennant"},"content":"6. `list`: Displays tasklist","lastModifiedDate":"2023-02-15"},{"lineNumber":287,"author":{"gitId":"thennant"},"content":"7. `delete`: Deletes a task","lastModifiedDate":"2023-02-15"},{"lineNumber":288,"author":{"gitId":"thennant"},"content":"8. `priority`: Set a priority level to a task","lastModifiedDate":"2023-02-15"},{"lineNumber":289,"author":{"gitId":"thennant"},"content":"9. `find`: Finds all the tasks with the specific keyword","lastModifiedDate":"2023-02-15"},{"lineNumber":290,"author":{"gitId":"thennant"},"content":"10. `bye`: Displays goodbye message and close the window","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"-":30,"thennant":260}},{"path":"src/main/java/crystal/Crystal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.command.Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":" * Represents the Crystal class.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"public class Crystal {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    private String filepath \u003d \"Crystal.txt\";","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * Constructor for Crystal class.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    public Crystal() {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"            tasks \u003d new TaskList(storage.readFileContents());","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"        } catch (CrystalException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    //@@author francisyzy-reused","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/francisyzy/ip/blob/master/src/main/java/duke/Duke.java","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Runs the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Shows the welcome message.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * While isExit is false, loads the previous saved file and","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * takes in user commands for the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void run() {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                Command cmd \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                cmd.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                storage.saveFile(tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                isExit \u003d cmd.isExit();","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            } catch (CrystalException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                ui.showError(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //@@author laihuiqi-reused","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/laihuiqi/ip/blob/master/src/main/java/chattime/Chattime.java","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns the welcome message","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String printWelcome() {","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return ui.showWelcome();","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns the bot response in the GUI","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param input the message from the user","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @return the bot message","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            temp \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } catch (CrystalException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return temp;","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Main method which calls the run method.","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        new Crystal().run();","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"thennant":33,"-":67}},{"path":"src/main/java/crystal/CrystalException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":" * Represents the CrystalException class.","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"public class CrystalException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"     * Constructor for CrystalException","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"     * @param msg The error message","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    public CrystalException(String msg) {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"        super(msg);","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":19}},{"path":"src/main/java/crystal/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//@@author Jeffry Lum-reused","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * DialogBox class","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructor for DialogBox class","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates the DialogBox for the user in the GUI","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param text the user\u0027s text","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param img the user\u0027s avatar","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @return the dialog box","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *  Creates the DialogBox for Crystal","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param text Crystal\u0027s text","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param img Crystal\u0027s avatar","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @return the dialog box","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static DialogBox getCrystalDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"thennant":16,"-":64}},{"path":"src/main/java/crystal/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author Jeffry Lum-reused","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart1.html","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Launcher {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"thennant":4,"-":11}},{"path":"src/main/java/crystal/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author Jeffry Lum-reused","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A GUI for Crystal using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Crystal crystal \u003d new Crystal();","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setCrystal(crystal);","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            stage.show();","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"thennant":11,"-":26}},{"path":"src/main/java/crystal/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"//@@author Jeffry Lum-reused","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Crystal crystal;","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/human.png\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Image crystalImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/crystal.png\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setCrystal(Crystal d) {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        crystal \u003d d;","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                DialogBox.getCrystalDialog(d.printWelcome(), crystalImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Crystal\u0027s reply and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void handleUserInput() throws CrystalException {","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String response \u003d crystal.getResponse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                DialogBox.getCrystalDialog(response, crystalImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // @@author francisyzy-reused","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Reused from https://github.com/francisyzy/ip/blob/master/src/main/java/duke/gui/MainWindow.java","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Inspiration from https://github.com/nus-cs2103-AY2223S2/forum/issues/99","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            PauseTransition stop \u003d new PauseTransition(Duration.seconds(1.5));","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            stop.setOnFinished(event -\u003e {","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                Platform.exit();","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                // Solution fromn https://stackoverflow.com/a/20489749","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                System.exit(0);","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            });","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            // start the pause","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            stop.play();","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"thennant":13,"-":65}},{"path":"src/main/java/crystal/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.command.ByeCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.command.DeadlineCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.command.DeleteCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import crystal.command.EventCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"import crystal.command.FindCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"import crystal.command.ListCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"import crystal.command.MarkCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"import crystal.command.PriorityCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"import crystal.command.TodoCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"import crystal.command.UnmarkCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":" * Represents the Parser task.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     * Returns the respective command object based on the command","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     * the user enters.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"     * @param command User command","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     * @throws CrystalException When user command is not recognised","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"    public static Command parse(String command) throws CrystalException {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"        switch (command) {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"        case \"list\":","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"        default:","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"            if (command.contains(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"                int num \u003d getNumber(command);","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"                return new UnmarkCommand(num);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"            } else if (command.contains(\"mark\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"                int num \u003d getNumber(command);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"                return new MarkCommand(num);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"            } else if (command.contains(\"todo\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"                String stringNoTodo \u003d getTodoDescription(command);","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"                return new TodoCommand(stringNoTodo);","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"            } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"                String[] description \u003d getDeadline(command);","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"                return new DeadlineCommand(description[0], description[1]);","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"            } else if (command.contains(\"event\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"                String[] description \u003d getEvent(command);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"                return new EventCommand(description[0], description[1], description[2]);","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"            } else if (command.contains(\"find\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"                String stringReplaceFind \u003d command.replace(\"find\", \"\");","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"                return new FindCommand(stringReplaceFind);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"            } else if (command.contains(\"delete\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"                int num \u003d getNumber(command);","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"                return new DeleteCommand(num);","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"            } else if (command.contains(\"priority\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"                String[] stringNoPriority \u003d getPriority(command);","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"                return new PriorityCommand(Integer.parseInt(stringNoPriority[0]),","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"                        Integer.parseInt(stringNoPriority[1]));","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"thennant"},"content":"                throw new CrystalException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"thennant"},"content":"     * Returns the number portion in the command","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"thennant"},"content":"     * @param command the command entered by the user","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"thennant"},"content":"     * @return the number portion of the command","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"thennant"},"content":"    private static int getNumber(String command) {","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"thennant"},"content":"        String getNum \u003d command.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"thennant"},"content":"        int num \u003d Integer.parseInt(getNum);","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"thennant"},"content":"        return num;","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"thennant"},"content":"     * Returns the description of the todo task","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"thennant"},"content":"     * @param command the command entered by the user","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"thennant"},"content":"     * @return the description of the todo task","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"thennant"},"content":"    private static String getTodoDescription(String command) throws CrystalException {","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"thennant"},"content":"        String stringNoTodo \u003d command.replace(\"todo\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"thennant"},"content":"        if (stringNoTodo.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"thennant"},"content":"            throw new CrystalException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"thennant"},"content":"        return stringNoTodo;","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"thennant"},"content":"     * Returns a string array containing the description and datetime of deadline task","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"thennant"},"content":"     * @param command the command entered by the user","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"thennant"},"content":"     * @return the string array containing the description and datetime of deadline task","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"thennant"},"content":"    private static String[] getDeadline(String command) {","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"thennant"},"content":"        String stringNoDeadline \u003d command.replace(\"deadline\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"thennant"},"content":"        int index \u003d stringNoDeadline.lastIndexOf(\"/by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"thennant"},"content":"        String description \u003d stringNoDeadline.replace(stringNoDeadline.substring(index), \"\"); //description of task","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"thennant"},"content":"        stringNoDeadline \u003d stringNoDeadline.substring(index + 3); //date/time for by portion","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"thennant"},"content":"        return new String[] { description, stringNoDeadline };","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"thennant"},"content":"     * Returns a string array containing the description of the event and the from and to datetimes","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"thennant"},"content":"     * @param command the command entered by the user","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"thennant"},"content":"     * @return string array containing the description of the event and the from and to datetimes","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"thennant"},"content":"    private static String[] getEvent(String command) {","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"thennant"},"content":"        String stringNoEvent \u003d command.replace(\"event\", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"thennant"},"content":"        String[] arr \u003d stringNoEvent.split(\"/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"thennant"},"content":"        String subString \u003d arr[0]; //description","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"thennant"},"content":"        String temp \u003d arr[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"thennant"},"content":"        String subStringNoFrom \u003d temp.replace(\"from\", \"\"); //from","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"thennant"},"content":"        String tempOne \u003d arr[2];","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"thennant"},"content":"        String subStringNoTo \u003d tempOne.replace(\"to\", \"\"); //to","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"thennant"},"content":"        return new String[] {subString, subStringNoFrom, subStringNoTo};","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"thennant"},"content":"    private static String[] getPriority(String command) {","lastModifiedDate":"2023-02-10"},{"lineNumber":123,"author":{"gitId":"thennant"},"content":"        String stringNoPriority \u003d command.replace(\"priority item\", \"\");","lastModifiedDate":"2023-02-10"},{"lineNumber":124,"author":{"gitId":"thennant"},"content":"        String[] arr \u003d stringNoPriority.split(\" level \");","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"thennant"},"content":"        String noItem \u003d arr[0].replace(\"item\", \"\");","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"thennant"},"content":"        String nolevel \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"thennant"},"content":"        return new String[] {noItem.trim(), nolevel.trim()};","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":134}},{"path":"src/main/java/crystal/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"import crystal.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"import crystal.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"import crystal.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"import crystal.task.Todo;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":" * Represents the Storage task.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"    private String filepath;","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"     * @param filepath filepath where the list is stored at.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"     * Method to write to the file.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     * @param filepath  Filepath to store the list at","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     * @param textToAdd Text to be printed on the file","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"    //Save to file","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    public void writeToFile(String filepath, String textToAdd) throws IOException {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"        fw.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"     * Method to save the file.","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"     * @param tasks Tasklist to be saved","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"    public void saveFile(TaskList tasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"            str.append(tasks.get(i).toExport() + \"\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"            writeToFile(this.filepath, str + System.lineSeparator());","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"thennant"},"content":"     * Method to read the file and return a Task arraylist.","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"thennant"},"content":"     * @throws CrystalException When the date format is not recognised","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"thennant"},"content":"    //Load file","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"thennant"},"content":"    public ArrayList\u003cTask\u003e readFileContents() throws CrystalException {","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"thennant"},"content":"        File file \u003d new File(this.filepath); // create a File for the given file path","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"thennant"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"thennant"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"thennant"},"content":"            Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"thennant"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"thennant"},"content":"                String nextInput \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"thennant"},"content":"                nextInput \u003d s.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"thennant"},"content":"                String description \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"thennant"},"content":"                String priority \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"thennant"},"content":"                description \u003d nextInput.substring(8);","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"thennant"},"content":"                priority \u003d nextInput.substring(6, 8).trim();","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"thennant"},"content":"                int priorityNum \u003d Integer.parseInt(priority);","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"thennant"},"content":"                boolean isPriority \u003d false;","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"thennant"},"content":"                if (priorityNum !\u003d 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"thennant"},"content":"                    isPriority \u003d true;","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"thennant"},"content":"                boolean isComplete \u003d false;","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"thennant"},"content":"                if (nextInput.contains(\"| 0 |\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"thennant"},"content":"                    isComplete \u003d true;","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"thennant"},"content":"                if (nextInput.startsWith(\"T\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"thennant"},"content":"                    Task newTask \u003d new Todo(description.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"thennant"},"content":"                    newTask.setIsDone(isComplete);","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"thennant"},"content":"                    newTask.setIsPriority(isPriority);","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"thennant"},"content":"                    newTask.setPriorityNum(priorityNum);","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"thennant"},"content":"                    temp.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"thennant"},"content":"                } else if (nextInput.startsWith(\"D\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"thennant"},"content":"                    int index \u003d description.lastIndexOf(\"|\");","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"thennant"},"content":"                    String time \u003d description.substring(description.lastIndexOf(\"|\") + 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"thennant"},"content":"                    description \u003d description.replace(description.substring(index), \"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"thennant"},"content":"                    try {","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"thennant"},"content":"                        Task newTask \u003d new Deadline(description.trim(), time.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"thennant"},"content":"                        newTask.setIsDone(isComplete);","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"thennant"},"content":"                        newTask.setIsPriority(isPriority);","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"thennant"},"content":"                        newTask.setPriorityNum(priorityNum);","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"thennant"},"content":"                        temp.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"thennant"},"content":"                    } catch (CrystalException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"thennant"},"content":"                        System.out.println(\"Wrong date format! Please change!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"thennant"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"thennant"},"content":"                } else if (nextInput.startsWith(\"E\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"thennant"},"content":"                    int index \u003d description.lastIndexOf(\"|\");","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"thennant"},"content":"                    int endIndex \u003d description.lastIndexOf(\"\u003e\");","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"thennant"},"content":"                    String startTime \u003d description.substring(description.lastIndexOf(\"|\") + 1,","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"thennant"},"content":"                            description.lastIndexOf(\"\u003e\") - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"thennant"},"content":"                    String endTime \u003d description.substring(description.lastIndexOf(\"\u003e\") + 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"thennant"},"content":"                    description \u003d description.replace(description.substring(index), \"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"thennant"},"content":"                    Task newTask \u003d new Event(description.trim(), startTime.trim(), endTime.trim());","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"thennant"},"content":"                    newTask.setIsDone(isComplete);","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"thennant"},"content":"                    newTask.setIsPriority(isPriority);","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"thennant"},"content":"                    newTask.setPriorityNum(priorityNum);","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"thennant"},"content":"                    temp.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"thennant"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"thennant"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"thennant"},"content":"            e.getMessage();","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"thennant"},"content":"        return temp;","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":140}},{"path":"src/main/java/crystal/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" * Represents the TaskList class.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    private ArrayList\u003cTask\u003e arr;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * Constructor for TaskList","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * @param arr Task arraylist","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     * @throws CrystalException When the date format is incorrect","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    public TaskList(ArrayList\u003cTask\u003e arr) throws CrystalException {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"        this.arr \u003d arr;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"        this.arr \u003d arr;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     * Returns the size of the arraylist.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    public int size() {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"        return arr.size();","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //@@author amoonguss1-reused","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/amoonguss1/ip/blob/master/src/main/java/Nerd/entities/TaskList.java","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Gets the respective task at the index i.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param i Index in the arraylist.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assert i \u003e\u003d 0 : \"Index cannot be negative\";","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this.arr.get(i);","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Add the new task to the arraylist","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.arr.add(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //@@author amoonguss1-reused","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/amoonguss1/ip/blob/master/src/main/java/Nerd/entities/TaskList.java","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Removes the task from the arraylist.","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert i \u003e\u003d 0 : \"Index cannot be negative\";","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.arr.remove(i);","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return arr.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"thennant":44,"-":38}},{"path":"src/main/java/crystal/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import crystal.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"import crystal.task.Todo;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":" * Represents the Ui task.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    private String line \u003d \" ____________________________________________________________\";","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     * Return the next Line in the file","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     * @returns the next line in the file","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     * Returns the welcome message.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     * @returns the welcome message.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"        StringBuilder temp \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"        temp.append(\" Hi! I am CRYSTAL.\\n How may I be of assistance?\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"        return temp.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"     * Prints the error message.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"     * @param e Exception","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"    public void showError(CrystalException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"        System.out.println(\" ____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"     * Prints the error message if the file failed to load.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"        System.out.println(\"Load Error\");","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"     * Returns the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"     * @param task tasklist","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"thennant"},"content":"     * @return the message.","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"    public String printList(TaskList task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"        StringBuilder temp \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"thennant"},"content":"        temp.append(\"Here are your current tasks:\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"thennant"},"content":"        for (int i \u003d 0; i \u003c task.size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"thennant"},"content":"            temp.append(i + 1 + \". \" + task.get(i) + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"thennant"},"content":"        return temp.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"thennant"},"content":"     * Returns the unmark task message.","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"thennant"},"content":"     * @param task tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"thennant"},"content":"     * @param num  The task number to be unmarked","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"thennant"},"content":"     * @return the message.","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"thennant"},"content":"    public String printUnmark(TaskList task, int num) {","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"thennant"},"content":"        Task unmarkTask \u003d task.get(num - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"thennant"},"content":"        StringBuilder temp \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"thennant"},"content":"        temp.append(\"Alright, I\u0027ve marked this task as not done: \\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"thennant"},"content":"        unmarkTask.setIsDone(false);","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"thennant"},"content":"        temp.append(unmarkTask.toString() + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"thennant"},"content":"        return temp.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"thennant"},"content":"     * Returns the mark task message.","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"thennant"},"content":"     * @param task tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"thennant"},"content":"     * @param num  The task number to be marked","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"thennant"},"content":"     * @return the message.","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"thennant"},"content":"    public String printMark(TaskList task, int num) {","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"thennant"},"content":"        Task markTask \u003d task.get(num - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"thennant"},"content":"        StringBuilder temp \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"thennant"},"content":"        temp.append(\"Alright, I\u0027ve marked the task as done: \\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"thennant"},"content":"        markTask.setIsDone(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"thennant"},"content":"        temp.append(markTask.toString() + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"thennant"},"content":"        return temp.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"thennant"},"content":"     * Returns the todo task message.","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"thennant"},"content":"     * @param task tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"thennant"},"content":"     * @param td   Todo task","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"thennant"},"content":"     * @return the message","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"thennant"},"content":"    public String printTodo(TaskList task, Todo td) {","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"thennant"},"content":"        StringBuilder temp \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"thennant"},"content":"        temp.append(\"Alright, I\u0027ve added this task: \\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"thennant"},"content":"        temp.append(td.toString() + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"thennant"},"content":"        temp.append(\"Current number of tasks : \" + task.size() + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"thennant"},"content":"        return temp.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":129,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"thennant"},"content":"     * Returns the deadline task message.","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"thennant"},"content":"     * @param task tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"thennant"},"content":"     * @param dl   Deadline task.","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"thennant"},"content":"     * @return the message","lastModifiedDate":"2023-02-03"},{"lineNumber":138,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"thennant"},"content":"    public String printDeadline(TaskList task, Deadline dl) {","lastModifiedDate":"2023-02-03"},{"lineNumber":140,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"thennant"},"content":"        StringBuilder temp \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":142,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":143,"author":{"gitId":"thennant"},"content":"        temp.append(\"Alright, I\u0027ve added this task: \\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":144,"author":{"gitId":"thennant"},"content":"        temp.append(dl.toString() + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":145,"author":{"gitId":"thennant"},"content":"        temp.append(\"Current number of tasks : \" + task.size() + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":146,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"thennant"},"content":"        return temp.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":148,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":149,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"thennant"},"content":"     * Returns the event task message.","lastModifiedDate":"2023-02-03"},{"lineNumber":154,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":155,"author":{"gitId":"thennant"},"content":"     * @param task tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":156,"author":{"gitId":"thennant"},"content":"     * @param evt  Event task.","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"thennant"},"content":"     * @return the message","lastModifiedDate":"2023-02-03"},{"lineNumber":158,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"thennant"},"content":"    public String printEvent(TaskList task, Event evt) {","lastModifiedDate":"2023-02-03"},{"lineNumber":160,"author":{"gitId":"thennant"},"content":"        StringBuilder temp \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":161,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":162,"author":{"gitId":"thennant"},"content":"        temp.append(\"Alright, I\u0027ve added this task: \\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":163,"author":{"gitId":"thennant"},"content":"        temp.append(evt.toString() + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":164,"author":{"gitId":"thennant"},"content":"        temp.append(\"Current number of tasks: \" + task.size() + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":165,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":166,"author":{"gitId":"thennant"},"content":"        return temp.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":167,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":168,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":171,"author":{"gitId":"thennant"},"content":"     * Returns the bye message.","lastModifiedDate":"2023-02-03"},{"lineNumber":172,"author":{"gitId":"thennant"},"content":"     * @return the message","lastModifiedDate":"2023-02-03"},{"lineNumber":173,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":174,"author":{"gitId":"thennant"},"content":"    public String printBye() {","lastModifiedDate":"2023-02-03"},{"lineNumber":175,"author":{"gitId":"thennant"},"content":"        StringBuilder temp \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":176,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":177,"author":{"gitId":"thennant"},"content":"        temp.append(\" Thank You. Please come by again~!\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":178,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":179,"author":{"gitId":"thennant"},"content":"        return temp.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":180,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":183,"author":{"gitId":"thennant"},"content":"     * Returns the delete message.","lastModifiedDate":"2023-02-03"},{"lineNumber":184,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":185,"author":{"gitId":"thennant"},"content":"     * @param task Tasklist","lastModifiedDate":"2023-01-28"},{"lineNumber":186,"author":{"gitId":"thennant"},"content":"     * @param num  the task number to be deleted","lastModifiedDate":"2023-01-28"},{"lineNumber":187,"author":{"gitId":"thennant"},"content":"     * @return the message","lastModifiedDate":"2023-02-03"},{"lineNumber":188,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":189,"author":{"gitId":"thennant"},"content":"    public String printDelete(TaskList task, int num) {","lastModifiedDate":"2023-02-03"},{"lineNumber":190,"author":{"gitId":"thennant"},"content":"        StringBuilder temp \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":191,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":192,"author":{"gitId":"thennant"},"content":"        temp.append(\"Alright, I\u0027ve removed this task: \\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":193,"author":{"gitId":"thennant"},"content":"        Task item \u003d task.get(num - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":194,"author":{"gitId":"thennant"},"content":"        task.remove(num - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":195,"author":{"gitId":"thennant"},"content":"        temp.append(item.toString() + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":196,"author":{"gitId":"thennant"},"content":"        temp.append(\"Current number of tasks: \" + task.size() + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":197,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":198,"author":{"gitId":"thennant"},"content":"        return temp.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":199,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":200,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":202,"author":{"gitId":"thennant"},"content":"     * Returns the find message","lastModifiedDate":"2023-02-03"},{"lineNumber":203,"author":{"gitId":"thennant"},"content":"     * @param task Tasklist","lastModifiedDate":"2023-02-03"},{"lineNumber":204,"author":{"gitId":"thennant"},"content":"     * @param word the word to be found in the tasklist","lastModifiedDate":"2023-02-03"},{"lineNumber":205,"author":{"gitId":"thennant"},"content":"     * @return the message","lastModifiedDate":"2023-02-03"},{"lineNumber":206,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":207,"author":{"gitId":"thennant"},"content":"    public String printFind(TaskList task, String word) {","lastModifiedDate":"2023-02-03"},{"lineNumber":208,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":209,"author":{"gitId":"thennant"},"content":"        StringBuilder temp \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":210,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":211,"author":{"gitId":"thennant"},"content":"        temp.append(\"Here are the matching tasks in your list: \\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":212,"author":{"gitId":"thennant"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":213,"author":{"gitId":"thennant"},"content":"        for (int i \u003d 0; i \u003c task.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":214,"author":{"gitId":"thennant"},"content":"            if (task.get(i).getDescription().contains(word.trim())) {","lastModifiedDate":"2023-02-03"},{"lineNumber":215,"author":{"gitId":"thennant"},"content":"                temp.append(counter + \". \" + task.get(i) + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":216,"author":{"gitId":"thennant"},"content":"                counter++;","lastModifiedDate":"2023-01-29"},{"lineNumber":217,"author":{"gitId":"thennant"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":218,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":219,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":220,"author":{"gitId":"thennant"},"content":"        return temp.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":221,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":222,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":223,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":224,"author":{"gitId":"thennant"},"content":"     *  Returns the priority message.","lastModifiedDate":"2023-02-10"},{"lineNumber":225,"author":{"gitId":"thennant"},"content":"     * @param task Tasklist","lastModifiedDate":"2023-02-10"},{"lineNumber":226,"author":{"gitId":"thennant"},"content":"     * @param itemNum item to be prioritize.","lastModifiedDate":"2023-02-10"},{"lineNumber":227,"author":{"gitId":"thennant"},"content":"     * @param lvlNum priority level.","lastModifiedDate":"2023-02-10"},{"lineNumber":228,"author":{"gitId":"thennant"},"content":"     * @return the priority message.","lastModifiedDate":"2023-02-10"},{"lineNumber":229,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":230,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":231,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":232,"author":{"gitId":"thennant"},"content":"    public String printPriority(TaskList task, int itemNum, int lvlNum) {","lastModifiedDate":"2023-02-10"},{"lineNumber":233,"author":{"gitId":"thennant"},"content":"        Task markTask \u003d task.get(itemNum - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":234,"author":{"gitId":"thennant"},"content":"        markTask.setIsPriority(true);","lastModifiedDate":"2023-02-10"},{"lineNumber":235,"author":{"gitId":"thennant"},"content":"        markTask.setPriorityNum(lvlNum);","lastModifiedDate":"2023-02-10"},{"lineNumber":236,"author":{"gitId":"thennant"},"content":"        StringBuilder temp \u003d new StringBuilder();","lastModifiedDate":"2023-02-10"},{"lineNumber":237,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":238,"author":{"gitId":"thennant"},"content":"        temp.append(\"Alright, I\u0027ve marked this task as priority level \" + lvlNum + \":\" + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":239,"author":{"gitId":"thennant"},"content":"        temp.append(markTask.toString() + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":240,"author":{"gitId":"thennant"},"content":"        temp.append(line + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":241,"author":{"gitId":"thennant"},"content":"        return temp.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":242,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":243,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":244,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":245,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":245}},{"path":"src/main/java/crystal/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the bye command when the user enters \"bye\".","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     * Executes the bye command to print the bye message.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"        return ui.printBye();","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to true to end the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":36}},{"path":"src/main/java/crystal/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" * Represents the abstract command class for all","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" * the other commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     * Abstract method to execute the respective command","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * @param tasks the tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws CrystalException;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     * Abstract method to determine whether the program should end or not.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":33}},{"path":"src/main/java/crystal/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import crystal.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" * Represents the deadline command when the user enters \"deadline\".","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    private String by;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    private String description;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * Constructor for DeadlineCommand class.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     * @param by The date time portion of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     * Executes the deadline command to print the deadline message.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     * @throws CrystalException if the user input is incorrectly formatted","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws CrystalException {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"        return ui.printDeadline(tasks, deadline);","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":54}},{"path":"src/main/java/crystal/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the delete command when the user enters \"delete\".","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    private int num;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     * Constructor for DeleteCommand class.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * @param num Task number to be deleted","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    public DeleteCommand(int num) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     * Executes the delete command to print the delete message.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"        return ui.printDelete(tasks, this.num);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":46}},{"path":"src/main/java/crystal/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"import crystal.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" * Represents the event command when the user enters \"event\".","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    private String from;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    private String to;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    private String description;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * Constructor for EventCommand class.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     * @param description description of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     * @param from start date of task","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     * @param to end date of task","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     * Executes the event command to print the event message.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws CrystalException {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"        tasks.add(event);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"        return ui.printEvent(tasks, event);","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":55}},{"path":"src/main/java/crystal/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" * Represents the find command when the user enters \"find\".","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    private String word;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     * Constructor for FindCommand class","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"    public FindCommand(String word) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"        this.word \u003d word;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     * Executes the find command to print the find message.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"        return ui.printFind(tasks, this.word);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"thennant":42}},{"path":"src/main/java/crystal/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the list command when the user enters \"list\".","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     * Executes the list command to print the list message.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"        return ui.printList(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":34}},{"path":"src/main/java/crystal/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the mark command when the user enters \"mark\".","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    private int num;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     * Constructor for MarkCommand class.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * @param num Task number to be marked","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    public MarkCommand(int num) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     * Executes the event command to print the event message.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"        return ui.printMark(tasks, this.num);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":49}},{"path":"src/main/java/crystal/command/PriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" * Represents the priority command when the user enter \"priority\"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"public class PriorityCommand extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    private int itemNum;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    private int lvlNum;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     * Constructor for prioritycommand class","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * @param itemNum the item number in the list","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * @param lvlNum the priority level to be given","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"    public PriorityCommand(int itemNum, int lvlNum) {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"        this.itemNum \u003d itemNum;","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"        this.lvlNum \u003d lvlNum;","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"     * Executes the priority command to print the event message.","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"        if (this.lvlNum \u003e 9) {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"            return \"Priority Level cannot be more than 9!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"            return ui.printPriority(tasks, this.itemNum, this.lvlNum);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"thennant":50}},{"path":"src/main/java/crystal/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the todo command when the user enters \"todo\".","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    private String task;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * Constructor for TodoCommand class.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     * @param task Task description","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    public TodoCommand(String task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     * Executes the todo command to print the todo message.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"        Todo todo \u003d new Todo(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"        return ui.printTodo(tasks, todo);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":50}},{"path":"src/main/java/crystal/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import crystal.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import crystal.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the unmark command when the user enters \"unmark\".","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    private int num;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     * Constructor for UnmarkCommand class.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * @param num Task number to be unmarked","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    public UnmarkCommand(int num) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"     * Executes the unmark command to print the unmark message.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"     * @param tasks tasklist.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"     * @param ui ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"     * @param storage storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"        return ui.printUnmark(tasks, this.num);","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"     * Sets the exit condition to false to continue the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"thennant":48}},{"path":"src/main/java/crystal/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" * Represents the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     * @param description Task description","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     * @param by Task date and time","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     * @throws CrystalException When user input is in the incorrect format","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    public Deadline(String description, String by) throws CrystalException {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(by.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"            this.by \u003d date;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"            throw new CrystalException(\"Please change the input date format to yyyy-MMM-dThh:mm!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"     *  Returns the printed output shown in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a\")) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"     *  Returns the String output when saving the list","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"    public String toPrint() {","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"     *  Returns the printed output format on the text file.","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"    public String toExport() {","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"        return \"D\" + super.toExport() + \" | \" + this.by;","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":67}},{"path":"src/main/java/crystal/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" * Represents the Event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     * Constructor for Event class.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     * @param description Task description","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     * @param from Task starting date and time","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     * @param to Task end date and time","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    public Event(String description, String from, String to) throws CrystalException {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"            this.from \u003d LocalDateTime.parse(from.trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"            this.to \u003d LocalDateTime.parse(to.trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"            throw new CrystalException(\"Please change the input date format to yyyy-MMM-dThh:mm!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"        assert this.to.isAfter(this.from) : \"to: date should not be before from: date\";","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"     *  Returns the printed output shown in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a\")) + \" to: \"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"                + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"     *  Returns the String output when saving the list","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"    public String toPrint() {","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"thennant"},"content":"     *  Returns the printed output format on the text file.","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"thennant"},"content":"    public String toExport() {","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"thennant"},"content":"        return \"E\" + super.toExport() + \" | \" + this.from + \" \u003e \" + this.to;","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":66}},{"path":"src/main/java/crystal/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":" * Represents the abstract task class for all tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"    private boolean isPriority;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    private int num; //priority number","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"     * Constructor for Task class.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"     * @param description Task description","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"        this.isPriority \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"        this.num \u003d 0;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"    public void setIsPriority(boolean isPriority) {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"        this.isPriority \u003d isPriority;","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"    public void setPriorityNum(int num) {","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"thennant"},"content":"     *  Returns a String X if isDone is true else","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"thennant"},"content":"     *  returns an empty string","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"thennant"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"thennant"},"content":"        // mark done task with X","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"thennant"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"thennant"},"content":"    public String getPriorityLevel() {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"thennant"},"content":"        return (isPriority ? \"priority level\" : \" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //@@author amoonguss1-reused","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/amoonguss1/ip/blob/master/src/main/java/Nerd/entities/TaskList.java","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *  Returns the description of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assert !this.description.equals(\"\") : \"Empty description!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *  Returns the printed output format shown in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (this.isPriority \u003d\u003d true) {","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + this.description + \" \"","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    + \"(\" + this.getPriorityLevel() + \" \" + this.num + \")\";","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //@@author francisyzy-reused","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/francisyzy/ip/blob/master/src/main/java/duke/task/Task.java","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *  Returns the printed output format on the text file.","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public String toExport() {","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            output +\u003d \"| 0 |\";","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            output +\u003d \"| 1 |\";","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        output +\u003d this.num + \" \" + this.description;","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return output;","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *  Returns the String output for when saving the list","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public String toPrint() {","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":55,"-":53}},{"path":"src/main/java/crystal/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":" * Represents the Todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"    protected boolean isSet;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"     * @param description Task description","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"     *  Returns the printed output shown in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"thennant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"thennant"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"thennant"},"content":"     *  Returns the printed output format on the text file.","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"thennant"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"thennant"},"content":"    public String toExport() {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"thennant"},"content":"        return \"T\" + super.toExport();","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"thennant":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"  style\u003d\"-fx-padding: 10;\"/\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"thennant":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"391.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"crystal.MainWindow\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"49.0\" prefWidth\u003d\"314.0\" AnchorPane.bottomAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"314.0\" layoutY\u003d\"551.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"49.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"551.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"thennant":19}},{"path":"src/test/java/crystal/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":" * Represents the DeadlineCommandTest class.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"     * Test if the Deadline Command class is working as intended.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    public void testDeadlineCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"        Command c \u003d new DeadlineCommand(\"buy book\", \"2019-10-15T18:00\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"        assertEquals(false, c.isExit());","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"thennant":21}},{"path":"src/test/java/crystal/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":" * Represents the TodoCommandTest class.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"     * Test if the Todo Command class is working as intended.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    public void testTodoCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"        Command c \u003d new TodoCommand(\"buy book\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"        assertEquals(false, c.isExit());","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"thennant":21}},{"path":"src/test/java/crystal/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the DeadlineTest class.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     * test if the deadline class is working as intended","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"    public void testDeadLine() throws CrystalException {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"        Deadline dl \u003d new Deadline(\"return book\", \"2019-10-15T18:00\");","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"        assertEquals(\"[D][ ] return book (by: Oct 15 2019 0600 PM)\", dl.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"thennant":23}},{"path":"src/test/java/crystal/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import crystal.CrystalException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" * Represents the EventTest class.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"public class EventTest  {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     * test if the Event class is working as intended","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"    public void testEvent() throws CrystalException {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"        Event event \u003d new Event(\"project meeting\", \"Mon 2pm\", \"4pm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"        assertEquals(\"[E][ ] project meeting (from: Mon 2pm to: 4pm)\", event.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"thennant":23}},{"path":"src/test/java/crystal/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"package crystal.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":" * Represents the TodoTest class.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"thennant"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"thennant"},"content":"     * test if the Todo class is working as intended","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"thennant"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"thennant"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"thennant"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"thennant"},"content":"    public void testTodo(){","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"thennant"},"content":"        assertEquals(\"[T][ ] borrow book\", todo.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"thennant"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"thennant"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"thennant"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"thennant":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thennant"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"thennant"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"thennant"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"thennant"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"thennant"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"thennant"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"thennant"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"thennant"},"content":"todo buy book","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"thennant"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"thennant"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"thennant":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"thennant"},"content":"java -classpath ..\\bin Crystal \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"thennant":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"thennant"},"content":"java -classpath ../bin Crystal \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"thennant":1}}]
