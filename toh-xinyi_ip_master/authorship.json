[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"toh-xinyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"toh-xinyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"toh-xinyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"toh-xinyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"toh-xinyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"toh-xinyi"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"toh-xinyi"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"toh-xinyi":17}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":" * Represents a Task that has a due date.","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"    public Deadlines(String name, String dueDate) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"        super(name, \"D\", makeDateTime(dueDate), null);","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"    public Deadlines(String name, String dueDate, boolean isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"        super(name, \"D\", makeDateTime(dueDate), null, isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"     * Adds on the due date to the \u003ccode\u003edescription()\u003c/code\u003e method in","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"     * \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e in the format to be output to the user","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"        return String.format(\"%s (by: %s)\", super.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"toh-xinyi"},"content":"                formatDateTime(this.startDate));","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"toh-xinyi"},"content":"     * Adds on the due date to the \u003ccode\u003eformatDescription()\u003c/code\u003e method in","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"toh-xinyi"},"content":"     * \u003ccode\u003eTask\u003c/code\u003e class.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"toh-xinyi"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e to be added into the task list representing","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"toh-xinyi"},"content":"     * this \u003ccode\u003eDeadline\u003c/code\u003e object.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"toh-xinyi"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"toh-xinyi"},"content":"    public String formatDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"toh-xinyi"},"content":"        return super.formatDescription()","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"toh-xinyi"},"content":"                + String.format(\" | %s\", formatDateTimeForTaskList(this.startDate));","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"toh-xinyi":38}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"toh-xinyi"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"toh-xinyi"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"toh-xinyi"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"toh-xinyi"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"toh-xinyi"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"toh-xinyi"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"toh-xinyi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"toh-xinyi"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"toh-xinyi"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"toh-xinyi"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"toh-xinyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"toh-xinyi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"toh-xinyi"},"content":"        Circle clip \u003d new Circle(displayPicture.getFitWidth() / 2,","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"toh-xinyi"},"content":"                displayPicture.getFitHeight() / 2,","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"toh-xinyi"},"content":"                displayPicture.getFitWidth() / 2);","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"toh-xinyi"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"toh-xinyi"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"toh-xinyi"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"toh-xinyi"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"toh-xinyi"},"content":"    private void flip() {","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"toh-xinyi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"toh-xinyi"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"toh-xinyi"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"toh-xinyi"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"toh-xinyi"},"content":"    public static DialogBox getHelloMessage(Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"toh-xinyi"},"content":"        return getDukeDialog(\"Hello, I\u0027m Duke! How can I help you today?\", img);","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"toh-xinyi"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"toh-xinyi"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"toh-xinyi"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"toh-xinyi"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"toh-xinyi"},"content":"        db.flip();","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"toh-xinyi"},"content":"        return db;","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"toh-xinyi":70}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"toh-xinyi"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"toh-xinyi"},"content":"            return Parser.handleInput(input, ui, tasks, storage);","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"toh-xinyi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"toh-xinyi"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"toh-xinyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"toh-xinyi"},"content":"            return \"Something went wrong while handling this task.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"toh-xinyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"toh-xinyi"},"content":"            return \"Something went wrong\";","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"toh-xinyi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"toh-xinyi"},"content":"            return \"Format of date given is wrong. Please ensure format of date is yyyy-MM-dd HH:mm \" +","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"toh-xinyi"},"content":"                    \"(e.g. 2022-03-30 14:30)\";","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"toh-xinyi":36}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"        super(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"toh-xinyi":7}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"public class Events extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"    public Events(String name, String startDate, String endDate) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"        super(name, \"E\", makeDateTime(startDate), makeDateTime(endDate));","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"    public Events(String name, String startDate, String endDate, boolean isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"        super(name, \"E\", makeDateTime(startDate), makeDateTime(endDate), isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"     * Adds on the start and end date to the \u003ccode\u003edescription()\u003c/code\u003e method in","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"     * \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e in the format to be output to the user","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"        return String.format(\"%s (from: %s to: %s)\", super.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"                formatDateTime(this.startDate), formatDateTime(this.endDate));","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"toh-xinyi"},"content":"     * Adds on the start and end date to the \u003ccode\u003eformatDescription()\u003c/code\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"toh-xinyi"},"content":"     * method in \u003ccode\u003eTask\u003c/code\u003e class.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"toh-xinyi"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e to be added in format of the task list","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"toh-xinyi"},"content":"     * representing this \u003ccode\u003eEvents\u003c/code\u003e object.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"toh-xinyi"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"toh-xinyi"},"content":"    public String formatDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"toh-xinyi"},"content":"        return super.formatDescription()","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"toh-xinyi"},"content":"                + String.format(\" | %s | %s\", formatDateTimeForTaskList(startDate),","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"toh-xinyi"},"content":"                formatDateTimeForTaskList(endDate));","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"toh-xinyi":38}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"public class Launcher {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"toh-xinyi":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"    private Duke duke \u003d new Duke(\"./data/tasks.txt\");","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"toh-xinyi"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"toh-xinyi"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"toh-xinyi"},"content":"            stage.show();","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"toh-xinyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"toh-xinyi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"toh-xinyi":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"toh-xinyi"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/piplup.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"toh-xinyi"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/eevee.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"toh-xinyi"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"toh-xinyi"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"toh-xinyi"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"toh-xinyi"},"content":"        dialogContainer.getChildren().add(DialogBox.getHelloMessage(dukeImage));","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"toh-xinyi"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"toh-xinyi"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"toh-xinyi"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"toh-xinyi"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"toh-xinyi"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"toh-xinyi"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"toh-xinyi"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"toh-xinyi"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"toh-xinyi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"toh-xinyi"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"toh-xinyi"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"toh-xinyi"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"toh-xinyi"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"toh-xinyi":53}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"    private final static int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"    private final static int TASK_IS_DONE_INDEX \u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"    private final static int TASK_DESCRIPTION \u003d 2;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"    private final static int START_TIME_INDEX \u003d 3;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"    private final static int END_TIME_INDEX \u003d 4;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"    private final static int TODO_TASK_DESCRIPTION_INDEX \u003d 5;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"    private final static int DEADLINE_TASK_DESCRIPTION_INDEX \u003d 9;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"    private final static int EVENT_TASK_DESCRIPTION_INDEX \u003d 6;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"    private final static int TASK_NAME_INDEX \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"    private final static int TASK_START_TIME_INDEX \u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"    private final static int TASK_END_TIME_INDEX \u003d 2;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"    private final static int TO_REMOVE_LEADING_FOUR_LETTERS \u003d 5;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"    private final static int TO_REMOVE_LEADING_TWO_LETTERS \u003d 3;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"toh-xinyi"},"content":"     * Converts a task from the task list format","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"toh-xinyi"},"content":"     * to a Task object","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"toh-xinyi"},"content":"     * @param line line to be converted to a \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"toh-xinyi"},"content":"     * @return a \u003ccode\u003eTask\u003c/code\u003e\u003e object with the relevant information","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"toh-xinyi"},"content":"    public static Task convertTaskFromLineInTaskList(String line) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"toh-xinyi"},"content":"        String[] taskInfo \u003d line.split(\"[|]\");","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"toh-xinyi"},"content":"        String taskType \u003d taskInfo[TASK_TYPE_INDEX].trim();","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"toh-xinyi"},"content":"        boolean isDone \u003d taskInfo[TASK_IS_DONE_INDEX].trim().equals(\"1\");","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"toh-xinyi"},"content":"        String taskDescription \u003d taskInfo[TASK_DESCRIPTION].trim();","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"toh-xinyi"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"toh-xinyi"},"content":"        case \"T\":","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"toh-xinyi"},"content":"            return new ToDos(taskDescription, isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"toh-xinyi"},"content":"        case \"D\":","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"toh-xinyi"},"content":"            String taskTime \u003d taskInfo[START_TIME_INDEX].trim();","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"toh-xinyi"},"content":"            return new Deadlines(taskDescription, taskTime, isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"toh-xinyi"},"content":"        case \"E\":","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"toh-xinyi"},"content":"            String startTime \u003d taskInfo[START_TIME_INDEX].trim();","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"toh-xinyi"},"content":"            String endTime \u003d taskInfo[END_TIME_INDEX].trim();","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"toh-xinyi"},"content":"            return new Events(taskDescription, startTime, endTime, isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"toh-xinyi"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"toh-xinyi"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + taskType);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"toh-xinyi"},"content":"     * Makes a \u003ccode\u003eToDos\u003c/code\u003e object from the given line.","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"toh-xinyi"},"content":"     * @param line information of the \u003ccode\u003eToDos\u003c/code\u003e in a","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"toh-xinyi"},"content":"     *             \u003ccode\u003eString\u003c/code\u003e format","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"toh-xinyi"},"content":"     * @return a \u003ccode\u003eTask\u003c/code\u003e object of the \u003ccode\u003eToDos\u003c/code\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"toh-xinyi"},"content":"    public static Task makeTodoFromCommand(String line) {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"toh-xinyi"},"content":"        String taskName \u003d line.substring(TODO_TASK_DESCRIPTION_INDEX);","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"toh-xinyi"},"content":"        return new ToDos(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"toh-xinyi"},"content":"     * Makes a \u003ccode\u003eDeadlines\u003c/code\u003e object from the given line.","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"toh-xinyi"},"content":"     * @param line information of the \u003ccode\u003eDeadlines\u003c/code\u003e in a","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"toh-xinyi"},"content":"     *             \u003ccode\u003eString\u003c/code\u003e format","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"toh-xinyi"},"content":"     * @return a \u003ccode\u003eTask\u003c/code\u003e object of the \u003ccode\u003eDeadlines\u003c/code\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"toh-xinyi"},"content":"    public static Task makeDeadlineFromCommand(String line) {","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"toh-xinyi"},"content":"        String taskInfo \u003d line.substring(DEADLINE_TASK_DESCRIPTION_INDEX);","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"toh-xinyi"},"content":"        String taskName \u003d taskInfo.split(\" /by\")[TASK_NAME_INDEX];","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"toh-xinyi"},"content":"        String taskDeadline \u003d taskInfo.split(\"/by \")[TASK_START_TIME_INDEX];","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"toh-xinyi"},"content":"        return new Deadlines(taskName, taskDeadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"toh-xinyi"},"content":"     * Makes a \u003ccode\u003eEvents\u003c/code\u003e object from the given line.","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"toh-xinyi"},"content":"     * @param line information of the \u003ccode\u003eEvents\u003c/code\u003e in a","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"toh-xinyi"},"content":"     *             \u003ccode\u003eString\u003c/code\u003e format","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"toh-xinyi"},"content":"     * @return a \u003ccode\u003eTask\u003c/code\u003e object of the \u003ccode\u003eEvents\u003c/code\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"toh-xinyi"},"content":"    public static Task makeEventFromCommand(String line) {","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"toh-xinyi"},"content":"        String taskInfo \u003d line.substring(EVENT_TASK_DESCRIPTION_INDEX);","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"toh-xinyi"},"content":"        String taskName \u003d taskInfo.split(\" /\")[TASK_NAME_INDEX];","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"toh-xinyi"},"content":"        String[] taskInfoTimes \u003d taskInfo.split(\" /\");","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"toh-xinyi"},"content":"        String taskStart \u003d taskInfoTimes[TASK_START_TIME_INDEX].substring(TO_REMOVE_LEADING_FOUR_LETTERS);","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"toh-xinyi"},"content":"        String taskEnd \u003d taskInfoTimes[TASK_END_TIME_INDEX].substring(TO_REMOVE_LEADING_TWO_LETTERS);","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"toh-xinyi"},"content":"        return new Events(taskName, taskStart, taskEnd);","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"toh-xinyi"},"content":"    public static String getSearchWord(String line) {","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"toh-xinyi"},"content":"        return line.substring(TO_REMOVE_LEADING_FOUR_LETTERS);","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"toh-xinyi"},"content":"    public static int getIndexFromCommand(String command) {","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"toh-xinyi"},"content":"        return Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"toh-xinyi"},"content":"    public static String getTypeOfCommand(String command) {","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"toh-xinyi"},"content":"        return command.split(\" \")[0];","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"toh-xinyi"},"content":"    public static String handleInput(String command, Ui ui, TaskList tasks, Storage storage) throws DukeException,","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"toh-xinyi"},"content":"            IOException, IndexOutOfBoundsException, DateTimeParseException {","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"toh-xinyi"},"content":"        String typeOfCommand \u003d getTypeOfCommand(command);","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"toh-xinyi"},"content":"        switch (typeOfCommand) {","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"toh-xinyi"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"toh-xinyi"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"toh-xinyi"},"content":"        case \"list\":","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"toh-xinyi"},"content":"            return ui.showTaskList(tasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"toh-xinyi"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"toh-xinyi"},"content":"            Task markedTask \u003d tasks.markTaskAsDone(getIndexFromCommand(command), storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"toh-xinyi"},"content":"            assert markedTask.getTaskStatus() : \"Task is wrongly marked.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"toh-xinyi"},"content":"            return ui.showMarkingTaskDone(markedTask);","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"toh-xinyi"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"toh-xinyi"},"content":"            Task unmarkedTask \u003d tasks.markTaskAsUndone(getIndexFromCommand(command), storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"toh-xinyi"},"content":"            assert !unmarkedTask.getTaskStatus() : \"Task is wrongly marked.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"toh-xinyi"},"content":"            return ui.showMarkingTaskUndone(unmarkedTask);","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"toh-xinyi"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"toh-xinyi"},"content":"            Task newTodo \u003d Parser.makeTodoFromCommand(command);","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"toh-xinyi"},"content":"            tasks.addTask(newTodo, storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"toh-xinyi"},"content":"            return ui.showAddingNewTask(newTodo, tasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":121,"author":{"gitId":"toh-xinyi"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"toh-xinyi"},"content":"            Task newDeadline \u003d Parser.makeDeadlineFromCommand(command);","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"toh-xinyi"},"content":"            tasks.addTask(newDeadline, storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"toh-xinyi"},"content":"            return ui.showAddingNewTask(newDeadline, tasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":125,"author":{"gitId":"toh-xinyi"},"content":"        case \"event\":","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"toh-xinyi"},"content":"            Task newEvent \u003d Parser.makeEventFromCommand(command);","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"toh-xinyi"},"content":"            boolean canAddEvent \u003d tasks.canAddTask(newEvent, storage);","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"toh-xinyi"},"content":"            return canAddEvent ? ui.showAddingNewTask(newEvent, tasks) : ui.showFailAddingNewTask(tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"toh-xinyi"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"toh-xinyi"},"content":"            Task taskToDelete \u003d tasks.deleteTask(getIndexFromCommand(command), storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"toh-xinyi"},"content":"            return ui.showDeletingTask(taskToDelete, tasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"toh-xinyi"},"content":"        case \"find\":","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"toh-xinyi"},"content":"            String searchWord \u003d Parser.getSearchWord(command);","lastModifiedDate":"2023-02-07"},{"lineNumber":134,"author":{"gitId":"toh-xinyi"},"content":"            TaskList tasksFound \u003d tasks.makeTaskFinder(searchWord);","lastModifiedDate":"2023-02-07"},{"lineNumber":135,"author":{"gitId":"toh-xinyi"},"content":"            return ui.showFindingTask(tasksFound);","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"toh-xinyi"},"content":"        default:","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"toh-xinyi"},"content":"            throw new DukeException(\"Command not recognised.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":138,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":139,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"toh-xinyi":140}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"import java.io.File;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":" * Deal with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"public class Storage {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"     * Location of task list in hard disk","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"    private String dukeFilePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"     * Constructor to instantiate a new Storage object and creates a tasks.txt file to store tasks if","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"     * one does not already exist in the given file path","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"     * @param filePath location of task list in hard disk","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"toh-xinyi"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"toh-xinyi"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"toh-xinyi"},"content":"            this.dukeFilePath \u003d filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"toh-xinyi"},"content":"            File dukeTxt \u003d new File(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"toh-xinyi"},"content":"            if (dukeTxt.createNewFile()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"toh-xinyi"},"content":"                System.out.printf(\"Create file: %s\\n\", dukeTxt.getName());","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"toh-xinyi"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"toh-xinyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"toh-xinyi"},"content":"            System.out.printf(\"Something went wrong ): %s\", e);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"toh-xinyi"},"content":"     * Reads the task list and adds all tasks currently","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"toh-xinyi"},"content":"     * in task list to an \u003ccode\u003eArrayList\u003c/code\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"toh-xinyi"},"content":"     * @return The task list in the form of an \u003ccode\u003eArrayList\u003c/code\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"toh-xinyi"},"content":"     * @throws DukeException if task list is empty","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"toh-xinyi"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"toh-xinyi"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"toh-xinyi"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"toh-xinyi"},"content":"            Scanner scan \u003d new Scanner(new File(dukeFilePath));","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"toh-xinyi"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"toh-xinyi"},"content":"                String currentLine \u003d scan.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"toh-xinyi"},"content":"                Task newTask \u003d Parser.convertTaskFromLineInTaskList(currentLine);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"toh-xinyi"},"content":"                taskList.add(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"toh-xinyi"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"toh-xinyi"},"content":"        catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"toh-xinyi"},"content":"            System.out.println(\"File is not found.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"toh-xinyi"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"toh-xinyi"},"content":"            throw new DukeException(\"No task list yet.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"toh-xinyi"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"toh-xinyi"},"content":"            return taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"toh-xinyi"},"content":"     * Updates the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"toh-xinyi"},"content":"     * @param tasks list of updated tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"toh-xinyi"},"content":"     * @throws IOException if something went wrong while updating","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"toh-xinyi"},"content":"    public void updateTaskList(TaskList tasks) throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"toh-xinyi"},"content":"        FileWriter writer \u003d new FileWriter(dukeFilePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"toh-xinyi"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskListSize(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"toh-xinyi"},"content":"            Task currTask \u003d tasks.getTaskByIndex(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"toh-xinyi"},"content":"            writer.write(currTask.formatDescription() + \"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"toh-xinyi"},"content":"        writer.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"toh-xinyi":76}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"    protected String name;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"    protected String taskType;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"    public Task(String name, String taskType, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"    public Task(String name, String taskType, LocalDateTime startDate, LocalDateTime endDate, boolean isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"toh-xinyi"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"toh-xinyi"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"toh-xinyi"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"toh-xinyi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"toh-xinyi"},"content":"     * Returns \u003ccode\u003eX\u003c/code\u003e if the task is done and","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"toh-xinyi"},"content":"     * a blank space if the task is not done.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"toh-xinyi"},"content":"     * @return \u003ccode\u003e\"X\"\u003c/code\u003e or \u003ccode\u003e\" \"\u003c/code\u003e depending on the status","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"toh-xinyi"},"content":"     * of the task","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"toh-xinyi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"toh-xinyi"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"toh-xinyi"},"content":"     * Returns the name of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"toh-xinyi"},"content":"     * @return name of task","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"toh-xinyi"},"content":"    public String getName() {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"toh-xinyi"},"content":"        return this.name;","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"toh-xinyi"},"content":"     * Returns the type of task this \u003ccode\u003eTask\u003c/code\u003e is.","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"toh-xinyi"},"content":"     * @return type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"toh-xinyi"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"toh-xinyi"},"content":"        return this.taskType;","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"toh-xinyi"},"content":"     * Returns the status of this \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"toh-xinyi"},"content":"     * @return true if task is done and false if task is not done","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"toh-xinyi"},"content":"    public boolean getTaskStatus() {","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"toh-xinyi"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"toh-xinyi"},"content":"     * Returns the start date of task","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"toh-xinyi"},"content":"     * @return start date of task, null if task is not dated","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"toh-xinyi"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"toh-xinyi"},"content":"        return this.startDate;","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"toh-xinyi"},"content":"     * Returns the end date of the task","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"toh-xinyi"},"content":"     * @return end date of task, null if task is not dated","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"toh-xinyi"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"toh-xinyi"},"content":"        return this.endDate;","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"toh-xinyi"},"content":"     * Marks task as undone.","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"toh-xinyi"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"toh-xinyi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"toh-xinyi"},"content":"     * Marks task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"toh-xinyi"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"toh-xinyi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"toh-xinyi"},"content":"     * Describes the \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"toh-xinyi"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e for output to users.","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"toh-xinyi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"toh-xinyi"},"content":"        return String.format(\"[%s][%s] %s\", this.taskType, this.getStatusIcon(), this.name);","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"toh-xinyi"},"content":"     * Formats the task so that it can be added into the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"toh-xinyi"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e to be added into the task list representing","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"toh-xinyi"},"content":"     * this \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"toh-xinyi"},"content":"    public String formatDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"toh-xinyi"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"toh-xinyi"},"content":"        String description \u003d String.format(\"%s | %s | %s\", this.taskType,","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"toh-xinyi"},"content":"                status, this.name);","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"toh-xinyi"},"content":"        return description;","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"toh-xinyi"},"content":"    public static LocalDateTime makeDateTime(String date) {","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"toh-xinyi"},"content":"        return LocalDateTime.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"toh-xinyi"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"toh-xinyi"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":121,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"toh-xinyi"},"content":"    public static String formatDateTimeForTaskList(LocalDateTime dateTime) {","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"toh-xinyi"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":125,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"toh-xinyi"},"content":"    public boolean taskClashWithCurrTask(Task currTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"toh-xinyi"},"content":"        LocalDateTime currTaskStartDate \u003d currTask.getStartDate();","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"toh-xinyi"},"content":"        LocalDateTime currTaskEndDate \u003d currTask.getEndDate();","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"toh-xinyi"},"content":"        boolean currTaskStartBeforeTaskEnd \u003d currTaskStartDate.isBefore(this.getEndDate());","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"toh-xinyi"},"content":"        boolean currTaskStartAfterTaskStart \u003d currTaskStartDate.isAfter(this.getStartDate());","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"toh-xinyi"},"content":"        boolean currTaskStartDuringTask \u003d currTaskStartAfterTaskStart \u0026\u0026 currTaskStartBeforeTaskEnd;","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"toh-xinyi"},"content":"        boolean currTaskEndBeforeTaskEnd \u003d currTaskEndDate.isBefore(this.getEndDate());","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"toh-xinyi"},"content":"        boolean currTaskEndAfterTaskStart \u003d currTaskEndDate.isAfter(this.getStartDate());","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"toh-xinyi"},"content":"        boolean currTaskEndDuringTask \u003d currTaskEndAfterTaskStart \u0026\u0026 currTaskEndBeforeTaskEnd;","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"toh-xinyi"},"content":"        boolean currTaskClashWithTask \u003d currTaskStartDuringTask || currTaskEndDuringTask;","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"toh-xinyi"},"content":"        return currTaskClashWithTask;","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"toh-xinyi":138}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"public class TaskList {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"     * Returns the task at the given index from the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"     * @param index index of task in the task list","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"     * @return the task at the index given","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"    public Task getTaskByIndex(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"toh-xinyi"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"toh-xinyi"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"toh-xinyi"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"toh-xinyi"},"content":"    public boolean contains(Task task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"toh-xinyi"},"content":"        return this.tasks.contains(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"toh-xinyi"},"content":"     * Adds the given task into the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"toh-xinyi"},"content":"     * @param task task to be added into the task list","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"toh-xinyi"},"content":"     * @param storage storage location to store new task added","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"toh-xinyi"},"content":"     * @throws IOException if something goes wrong while adding task to task list in storage","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"toh-xinyi"},"content":"    public void addTask(Task task, Storage storage) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"toh-xinyi"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"toh-xinyi"},"content":"        assert !tasks.isEmpty() : \"Something went wrong when adding first task.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"toh-xinyi"},"content":"        storage.updateTaskList(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"toh-xinyi"},"content":"     * Checks if the given task can be added into the task list. If there are clashes in timings with a task currently","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"toh-xinyi"},"content":"     * in the task list, the task is not added. If there are no clashes, the task can be added into the task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"toh-xinyi"},"content":"     * @param task task to be added into the task list","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"toh-xinyi"},"content":"     * @param storage storage location to store new task added","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"toh-xinyi"},"content":"     * @return true if the task can be added as there are no clashes in timing and false if the task cannot be added","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"toh-xinyi"},"content":"     * due to the presence of a clash in timing","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"toh-xinyi"},"content":"     * @throws IOException if something goes wrong while adding task to task list in storage","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"toh-xinyi"},"content":"    public boolean canAddTask(Task task, Storage storage) throws IOException {","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"toh-xinyi"},"content":"        if (haveClashWithCurrentTasks(task)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"toh-xinyi"},"content":"            return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"toh-xinyi"},"content":"        this.addTask(task, storage);","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"toh-xinyi"},"content":"        return true;","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"toh-xinyi"},"content":"     * Checks for the presence of clashes with the tasks currently in the task list and returns true if clashes are","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"toh-xinyi"},"content":"     * found","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"toh-xinyi"},"content":"     * @param currTask task to compare if clashes are present between the tasks in the task list and the current task","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"toh-xinyi"},"content":"     * @return true if there are clashes in timings found and false if no clashes are found","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"toh-xinyi"},"content":"    public boolean haveClashWithCurrentTasks(Task currTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"toh-xinyi"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"toh-xinyi"},"content":"            boolean isEventAndClashWithCurrTask \u003d task.getTaskType().equals(\"E\")","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"toh-xinyi"},"content":"                    \u0026\u0026 task.taskClashWithCurrTask(currTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"toh-xinyi"},"content":"            if (isEventAndClashWithCurrTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"toh-xinyi"},"content":"                return true;","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"toh-xinyi"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"toh-xinyi"},"content":"        return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"toh-xinyi"},"content":"     * Adds given task to the task list","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"toh-xinyi"},"content":"     * @param task task to be added into the task list","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"toh-xinyi"},"content":"    public void addTaskToSearchList(Task task) {","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"toh-xinyi"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"toh-xinyi"},"content":"     * Deletes and returns the task deleted from the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"toh-xinyi"},"content":"     * @param indexOfTask index of task to be deleted","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"toh-xinyi"},"content":"     * @param storage storage location to update the task list of the task deleted","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"toh-xinyi"},"content":"     * @return the task deleted","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"toh-xinyi"},"content":"     * @throws IOException if something goes wrong when updating the deletion to task list","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"toh-xinyi"},"content":"    public Task deleteTask(int indexOfTask, Storage storage) throws IOException{","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"toh-xinyi"},"content":"        Task taskToDelete \u003d this.tasks.remove(indexOfTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"toh-xinyi"},"content":"        storage.updateTaskList(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"toh-xinyi"},"content":"        return taskToDelete;","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"toh-xinyi"},"content":"     * Marks the task given by its index as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"toh-xinyi"},"content":"     * @param indexOfTask index of the task to mark as done","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"toh-xinyi"},"content":"     * @param storage storage location to update the task list after task is mark done","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"toh-xinyi"},"content":"     * @return the task after marking it as done","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"toh-xinyi"},"content":"     * @throws IOException if something goes wrong when updating the marking of the task to the task list","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"toh-xinyi"},"content":"    public Task markTaskAsDone(int indexOfTask, Storage storage) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"toh-xinyi"},"content":"        Task toMarkDone \u003d this.tasks.get(indexOfTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"toh-xinyi"},"content":"        toMarkDone.markDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"toh-xinyi"},"content":"        storage.updateTaskList(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"toh-xinyi"},"content":"        return toMarkDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"toh-xinyi"},"content":"     * Marks the task given by its index as undone.","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"toh-xinyi"},"content":"     * @param indexOfTask index of the task to mark as undone","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"toh-xinyi"},"content":"     * @param storage storage location to update the task list after task is mark undone","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"toh-xinyi"},"content":"     * @return the task after marking it as undone","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"toh-xinyi"},"content":"     * @throws IOException if something goes wrong when updating the unmarking of the task to the task list","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"toh-xinyi"},"content":"    public Task markTaskAsUndone(int indexOfTask, Storage storage) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"toh-xinyi"},"content":"        Task toMarkUndone \u003d this.tasks.get(indexOfTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"toh-xinyi"},"content":"        toMarkUndone.markUndone();","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"toh-xinyi"},"content":"        storage.updateTaskList(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"toh-xinyi"},"content":"        return toMarkUndone;","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"toh-xinyi"},"content":"     * Retrieves the size of the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"toh-xinyi"},"content":"     * @return size of task list","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"toh-xinyi"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"toh-xinyi"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"toh-xinyi"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"toh-xinyi"},"content":"     * Searches the task list for the presence of \u003ccode\u003esearchWord\u003c/code\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":140,"author":{"gitId":"toh-xinyi"},"content":"     * and returns a \u003ccode\u003eTaskList\u003c/code\u003e of tasks that contains","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"toh-xinyi"},"content":"     * \u003ccode\u003esearchWord\u003c/code\u003e.","lastModifiedDate":"2023-02-03"},{"lineNumber":142,"author":{"gitId":"toh-xinyi"},"content":"     * @param searchWord word to search task list for","lastModifiedDate":"2023-02-03"},{"lineNumber":143,"author":{"gitId":"toh-xinyi"},"content":"     * @return a \u003ccode\u003eTaskList\u003c/code\u003e of matching tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":144,"author":{"gitId":"toh-xinyi"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"toh-xinyi"},"content":"    public TaskList makeTaskFinder(String searchWord) {","lastModifiedDate":"2023-02-03"},{"lineNumber":146,"author":{"gitId":"toh-xinyi"},"content":"        TaskList taskFinder \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"toh-xinyi"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":148,"author":{"gitId":"toh-xinyi"},"content":"            String[] taskName \u003d task.getName().split(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":149,"author":{"gitId":"toh-xinyi"},"content":"            for (int i \u003d 0; i \u003c taskName.length; i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"toh-xinyi"},"content":"                if (taskName[i].equals(searchWord) \u0026\u0026 !taskFinder.contains(task)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"toh-xinyi"},"content":"                    taskFinder.addTaskToSearchList(task);","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"toh-xinyi"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":153,"author":{"gitId":"toh-xinyi"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"toh-xinyi"},"content":"        return taskFinder;","lastModifiedDate":"2023-02-03"},{"lineNumber":156,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"toh-xinyi":157}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"    public ToDos(String name) {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"        super(name, \"T\", null, null);","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"    public ToDos(String name, boolean isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"        super(name, \"T\", null, null, isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"toh-xinyi":13}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"    public Ui() {}","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"    public String sayHello() {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"        return \"Hello! How can I help you?\";","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"    public String sayBye() {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"        return \"Goodbye!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"        return \"Currently no task in task list. Creating new task list...\" + askForNextCommand();","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"    public String showDeletingTask(Task task, TaskList taskList) {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"        return String.format(\"Got it! I have removed this task: \\n%s\\n \"","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"                        + \"Now you have %d tasks in the list.%n\", task.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"                taskList.getTaskListSize()) + askForNextCommand();","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"toh-xinyi"},"content":"    public String showAddingNewTask(Task task, TaskList taskList) {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"toh-xinyi"},"content":"        return String.format(\"Got it! I have added a new task: \\n%s\\n\" +","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"toh-xinyi"},"content":"                        \"Now you have %d tasks in the list%n\", task.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"toh-xinyi"},"content":"                taskList.getTaskListSize()) + askForNextCommand();","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"toh-xinyi"},"content":"    public String showFailAddingNewTask(TaskList tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"toh-xinyi"},"content":"        return String.format(\"This task cannot be added as it clashes with another task in the task list: \\n%s\",","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"toh-xinyi"},"content":"                showList(tasks)) + askForNextCommand();","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"toh-xinyi"},"content":"    public String showMarkingTaskDone(Task task) {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"toh-xinyi"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n %s%n\",","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"toh-xinyi"},"content":"                task.getDescription()) + askForNextCommand();","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"toh-xinyi"},"content":"    public String showMarkingTaskUndone(Task task) {","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"toh-xinyi"},"content":"        return String.format(\"Alright! I\u0027ve marked this task as not done yet:\\n %s%n\",","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"toh-xinyi"},"content":"                task.getDescription()) + askForNextCommand();","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"toh-xinyi"},"content":"    public String showTaskList(TaskList tasks) {","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"toh-xinyi"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"toh-xinyi"},"content":"            return \"No tasks in task list.\" + askForNextCommand();","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"toh-xinyi"},"content":"        return String.format(\"Here are the tasks in your list: \\n%s\", showList(tasks) + askForNextCommand());","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"toh-xinyi"},"content":"    public String showFindingTask(TaskList tasks) {","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"toh-xinyi"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"toh-xinyi"},"content":"            return \"No matching tasks found.\" + askForNextCommand();","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"toh-xinyi"},"content":"        return String.format(\"Here are the matching tasks in your list:\\n%s\", showList(tasks))","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"toh-xinyi"},"content":"                + askForNextCommand();","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"toh-xinyi"},"content":"    public static String showList(TaskList tasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"toh-xinyi"},"content":"        String taskList \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"toh-xinyi"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskListSize(); i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"toh-xinyi"},"content":"            Task currTask \u003d tasks.getTaskByIndex(i);","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"toh-xinyi"},"content":"            taskList \u003d String.format(\"%s%d. %s\\n\", taskList, i + 1, currTask.getDescription());","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"toh-xinyi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"toh-xinyi"},"content":"        return taskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"toh-xinyi"},"content":"    public static String askForNextCommand() {","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"toh-xinyi"},"content":"        return \"\\nWhat would you like me to do next?\";","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"toh-xinyi":73}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"            \u003cFont name\u003d\"Constantia\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"toh-xinyi":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"            \u003cFont name\u003d\"Constantia\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"toh-xinyi":23}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"    public void testMakeEvent() {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"        Task expectedTask \u003d new Events(\"japan trip\", \"2022-12-01\", \"2022-12-16\");","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"        String input \u003d \"event japan trip /from 2022-12-01 /to 2022-12-16\";","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"        assertEquals(expectedTask.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"                Parser.makeEventFromCommand(input).getDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"    public void testConvertTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"        Task expectedTask \u003d new Events(\"japan trip\", \"2022-12-01\", \"2022-12-16\");","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"        String input \u003d \"E | 0 | japan trip | 2022-12-01 | 2022-12-16\";","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"        assertEquals(expectedTask.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"                Parser.convertTaskFromLineInTaskList(input).getDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"toh-xinyi":23}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"toh-xinyi"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"toh-xinyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"toh-xinyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"toh-xinyi"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"toh-xinyi"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"toh-xinyi"},"content":"    public void testMarkTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"toh-xinyi"},"content":"        Task expectedTask \u003d new Task(\"finish homework\", \"T\", true);","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"toh-xinyi"},"content":"        Task newTask \u003d new Task(\"finish homework\", \"T\");","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"toh-xinyi"},"content":"        newTask.markDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"toh-xinyi"},"content":"        assertEquals(expectedTask.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"toh-xinyi"},"content":"                newTask.getDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"toh-xinyi"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"toh-xinyi"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"toh-xinyi"},"content":"    public void testFormatDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"toh-xinyi"},"content":"        String expectedOutput \u003d \"T | 1 | eat lunch\";","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"toh-xinyi"},"content":"        Task task \u003d new Task(\"eat lunch\", \"T\", true);","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"toh-xinyi"},"content":"        assertEquals(expectedOutput, task.formatDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"toh-xinyi"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"toh-xinyi"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"toh-xinyi":22}}]
