[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"checkstyle {","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"tricixg":5,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"D | 0 | hello | Dec 10 2019","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"T | 0 | hello","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"E | 0 | read book | now | tomorrow","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"T | 1 | hi","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"tricixg":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":" * The Deadline class extends the Task class and represents a task with a due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":" * @author @tricixg","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":" * @version 1.0","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"    protected String by;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"     * Constructs a new Deadline object with the given task and due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"     * @param by The task\u0027s due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"     * Constructs a new Deadline object with the given task and due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"     * @param by The task\u0027s due date as a LocalDate type","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"        this.by \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"     * Constructs a new Deadline object with the given task and due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"     * @param isDone a boolean indicating whether the task is completed or not.","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"     * @param by The task\u0027s due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"    public Deadline(Boolean isDone, String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"        super(isDone, description);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"     * in the format \"[D][status icon] task description (by: due date)\".","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"    ","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"    public String getDate() {","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"        return by;","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"     * Creates a new Deadline task from a user\u0027s input","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"     * @param array a list of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"     * @param splitInput an array of strings containing the user input.","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"    public static void createDeadlineTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"        if (splitInput.length \u003d\u003d 1 || splitInput[1].equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"                throw new DukeException(\"deadline\");","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"            for (int j\u003d1; j\u003c splitInput.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"                if (splitInput[j].equals(\"/by\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"                    for (int k\u003d1; k\u003c j-1; k++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"                        splitInput[1] \u003d splitInput[1] + \" \" + splitInput[k+1];","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"                    for (int l\u003dsplitInput.length-1; l \u003e j +1; l--) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"                        splitInput[splitInput.length-1] \u003d splitInput[l-1]+\" \"+splitInput[splitInput.length-1];","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"                    splitInput[j] \u003d splitInput[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"               ","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"            String date \u003d splitInput[splitInput.length-1];","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"            String desc \u003d splitInput[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"            if (isDate(date)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"                LocalDate ld \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"                Deadline d \u003d new Deadline(desc, ld);","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"                array.add(d);","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"                Ui.addTask(array, d);","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"                Deadline d \u003d new Deadline(desc, date);","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"tricixg"},"content":"                array.add(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"tricixg"},"content":"                Ui.addTask(array, d);","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"tricixg"},"content":"     * Checks whether a string is an instance of LocalDate","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"tricixg"},"content":"     * in the format \"yyyy-MM-dd\"","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"tricixg"},"content":"     * @param date String to be checked","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"tricixg"},"content":"     * @return True if \"yyyy-MM-dd\"","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"tricixg"},"content":"    public static boolean isDate(String date) {","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"tricixg"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"tricixg"},"content":"        LocalDate ld \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"tricixg"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"tricixg"},"content":"            ld \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"tricixg"},"content":"            System.out.println(ld);","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"tricixg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"tricixg"},"content":"            return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"tricixg"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"tricixg"},"content":"     * Returns a string representation of the task","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"tricixg"},"content":"     * in the format \"D | completion status | task description | due date\".","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"tricixg"},"content":"     * @return String of deadline task in save format","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"tricixg"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"tricixg"},"content":"        String d \u003d \" | \";","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"tricixg"},"content":"        int marked \u003d this.getIsDone() ? 1 : 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"tricixg"},"content":"        return \"D\" + d + marked + d + description + d + by;","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tricixg":149}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":" * The main class of the Duke Task Manager application.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":" * This class is responsible for starting the application, ","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":" * initializing the task list, and handling user inputs.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":" * @author @tricixg","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":" * @version 1.0","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"public class Duke {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":" ","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"     * The main method of the application.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"     * This method initializes the task list, loads tasks from the saved file,","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"     * greets the user, and handles user inputs.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"     * @param args","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"            Storage.loadFile(list);","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"        Ui.greet();","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        ","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        while (true) {","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"            String[] splitInput \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"            Parser.parseInput(splitInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"                Storage.saveToFile(list);","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tricixg":46}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import util.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":" * The Event class extends the Task class and represents a task with a duration.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" * @author @tricixg","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":" * @version 1.0","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    protected String from;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    protected String to;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    static String divider \u003d \"    ═══*.·:·.☽✧    ✦    ✧☾.·:·.*═══\";","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     * Constructs a new Event object with the given task and due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"     * @param from The task\u0027s start date/time.","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"     * @param to The task\u0027s end date/time.","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"     * Constructs a new Event object with the given task and due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"     * @param description The task description.","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"     * @param from The task\u0027s start date/time as a LocalDate type","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"     * @param to The task\u0027s end date/time as a LocalDate type","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"        this.from \u003d from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"        this.to \u003d to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"     * Constructs a new Event object with the given task and due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"     * @param isDone a boolean indicating whether the task is completed or not.","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"     * @param from The task\u0027s start date/time.","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"     * @param to The task\u0027s end date/time.","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"    public Event(Boolean isDone, String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"        super(isDone, description);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     * Returns a string representation of the task","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"     * in the format \"[E][status icon] task description (from: start to: end)\".","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + from + \" to:\" + to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"     * Creates a new Event task from a user\u0027s input","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"     * @param array  a list of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"     * @param splitInput an array of strings containing the user input.","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"    public static void createEventTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"        String combinedString \u003d String.join(\" \", splitInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"        if (splitInput.length \u003d\u003d 1 || splitInput[1].equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"                throw new DukeException(\"event\");","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"            String event \u003d combinedString.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"            String[] eventArr \u003d event.split(\" /from\", 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"            if (eventArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"                String desc \u003d eventArr[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"                String[] periodArr \u003d eventArr[1].split(\" /to\");","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"                if (periodArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"                    String from \u003d periodArr[0].strip();","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"                    String to \u003d periodArr[1].strip();","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"                    if (isDate(from) \u0026\u0026 isDate(to)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"                        LocalDate ldFrom \u003d LocalDate.parse(from, formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"                        LocalDate ldTo \u003d LocalDate.parse(to, formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"                        Event e \u003d new Event(desc, ldFrom, ldTo);","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"                        array.add(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"                        Ui.addTask(array, e);","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"                    } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"                        Event e \u003d new Event(desc, from, to);","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"tricixg"},"content":"                        array.add(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"tricixg"},"content":"                        Ui.addTask(array, e);","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"tricixg"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"tricixg"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"tricixg"},"content":"     * Checks whether a string is an instance of LocalDate","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"tricixg"},"content":"     * in the format \"yyyy-MM-dd\"","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"tricixg"},"content":"     * @param date String to be checked","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"tricixg"},"content":"     * @return True if \"yyyy-MM-dd\"","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"tricixg"},"content":"    public static boolean isDate(String date) {","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"tricixg"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"tricixg"},"content":"        LocalDate ld \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"tricixg"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"tricixg"},"content":"            ld \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"tricixg"},"content":"            System.out.println(ld);","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"tricixg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"tricixg"},"content":"            System.out.println(\"Date \" + date + \" is not a date.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"tricixg"},"content":"            return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"tricixg"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"tricixg"},"content":"     * Joins elements of an array into a string, using a separator and a specified range.","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"tricixg"},"content":"     * @param array The array of elements to join.","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"tricixg"},"content":"     * @param separator The separator to use between elements.","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"tricixg"},"content":"     * @param startIndex The start index of the range.","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"tricixg"},"content":"     * @param endIndex The end index of the range.","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"tricixg"},"content":"     * @return A string that consists of the elements of the array joined with the separator, or null if the array is null.","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"tricixg"},"content":"    public static String join(Object[] array, String separator, int startIndex, int endIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"tricixg"},"content":"        if (array \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"tricixg"},"content":"            return null;","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"tricixg"},"content":"        if (separator \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"tricixg"},"content":"            separator \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"tricixg"},"content":"        int bufSize \u003d (endIndex - startIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"tricixg"},"content":"        if (bufSize \u003c\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"tricixg"},"content":"            return \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"tricixg"},"content":"        bufSize *\u003d ((array[startIndex] \u003d\u003d null ? 16 : array[startIndex].toString().length())","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"tricixg"},"content":"                        + separator.length());","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"tricixg"},"content":"        StringBuffer buf \u003d new StringBuffer(bufSize);","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"tricixg"},"content":"        for (int i \u003d startIndex; i \u003c endIndex; i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"tricixg"},"content":"            if (i \u003e startIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":166,"author":{"gitId":"tricixg"},"content":"                buf.append(separator);","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"tricixg"},"content":"            if (array[i] !\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"tricixg"},"content":"                buf.append(array[i]);","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"tricixg"},"content":"        return buf.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":174,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":175,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":176,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"tricixg"},"content":"     * Returns a string representation of the task","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"tricixg"},"content":"     * in the format \"E | completion status | task description | from | to\".","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"tricixg"},"content":"     * @return String of deadline task in save format","lastModifiedDate":"2023-02-12"},{"lineNumber":181,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":183,"author":{"gitId":"tricixg"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-31"},{"lineNumber":184,"author":{"gitId":"tricixg"},"content":"        String d \u003d \" | \";","lastModifiedDate":"2023-01-31"},{"lineNumber":185,"author":{"gitId":"tricixg"},"content":"        int marked \u003d this.getIsDone() ? 1 : 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":186,"author":{"gitId":"tricixg"},"content":"        String timePeriod \u003d from + d + to;","lastModifiedDate":"2023-01-31"},{"lineNumber":187,"author":{"gitId":"tricixg"},"content":"        return \"E\" + d + marked + d + description + d + timePeriod;","lastModifiedDate":"2023-01-31"},{"lineNumber":188,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":189,"author":{"gitId":"tricixg"},"content":"  }","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"tricixg":190}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":" * Class responsible for executing user\u0027s commands","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"public class Parser {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"     * Takes in user\u0027s input and executes respective command.","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"     * @param splitInput User\u0027s input in the form of a String array","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    public static void parseInput(String[] splitInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"        ArrayList\u003cTask\u003e array \u003d TaskList.getList();","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        String combined \u003d String.join(\" \", splitInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"        if (combined.equals(\"bye\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"            Ui.bye();","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"        //Displays the list of items","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"        else if (combined.equals(\"list\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"            TaskList.displayList(array);","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"        //Mark the task as done","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"        else if (splitInput[0].equals(\"mark\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"            TaskList.markTask(array, splitInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"        //Unmark the task as done","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"        else if (splitInput[0].equals(\"unmark\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"            TaskList.unmarkTask(array, splitInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"        //Creates a Deadline type Task","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        else if (splitInput[0].equals(\"deadline\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"            Deadline.createDeadlineTask(array, splitInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"        //Creates an Event type Task","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"        else if (splitInput[0].equals(\"event\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"            Event.createEventTask(array, splitInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        //Creates a Todo type Task","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"        else if (splitInput[0].equals(\"todo\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"            Todo.createTodoTask(array, splitInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"        //Deletes a Task","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"        else if (splitInput[0].equals(\"delete\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"            TaskList.deleteTask(array, splitInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"        //Finds a Task","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"        else if (splitInput[0].equals(\"find\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"            TaskList.searchTask(array, splitInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"                throw new IllegalArgumentException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"tricixg":58}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":" * The Storage class is responsible for reading and writing tasks from/to a file.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":" * It contains methods for creating a save file if one does not exist,","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" * loading a list of tasks from a file, converting a string to a boolean value,","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":" * saving a list of tasks to a file, and clearing the contents of a file.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"public class Storage {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"     * Creates a directory for storing task data and a new file for storing the tasks if it does not exist.","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    public static void initSaveFile() {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"        File dir \u003d new File(\"src/main/data/\");","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"        dir.mkdirs();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"        // create a file object for the current location","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        File file \u003d new File(dir, \"duke.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"            // create a new file with name specified","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"            // by the file object","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"            boolean value \u003d file.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"            if (value) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"                FileWriter output \u003d new FileWriter(\"duke.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"                output.write(\"---------------LIST OF TASKS--------------------\");","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"                output.append(\u0027\\n\u0027);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"                System.out.println(\"New Save File is created.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"            } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"                System.out.println(\"Save file already exists.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"        } catch(Exception e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"            e.getStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"     * Loads tasks from a file and adds them to a task list.","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"     * @param list a list of tasks","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"     * @throws IOException if there is an error reading from the file","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"     * @throws DukeException if there is an error in the format of the file","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"    public static void loadFile(TaskList list) throws IOException, DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"        File file \u003d new File(System.getProperty(\"user.dir\") + \"/data/duke.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"        File dir \u003d new File(System.getProperty(\"user.dir\") + \"/data\");","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"        // if directory has not been created, make directory","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"            dir.mkdir();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        file.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"        //takes file\u0027s content as input, scans through files and adds items to the list","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"            String[] currLine \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"            if (currLine[0].equalsIgnoreCase(\"T\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"                list.add(new Todo(strToBool(currLine[1]), currLine[2]));","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"            } else if (currLine[0].equalsIgnoreCase(\"D\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"                list.add(new Deadline(strToBool(currLine[1]), currLine[2], currLine[3]));","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"            } else if (currLine[0].equalsIgnoreCase(\"E\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"                list.add(new Event(strToBool(currLine[1]), currLine[2], currLine[3], currLine[4]));","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"                throw new DukeException(\"Read Error\");","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"     * Converts a string representation of a boolean value to a boolean value.","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"     * @param str a string representation of a boolean value","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"     * @return the corresponding boolean value","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"    public static boolean strToBool(String str) {","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"        if (str.equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"            return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"            return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"     * Saves a list of tasks to a file.","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"     * @param list a list of tasks","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"    public static void saveToFile(TaskList list) throws IOException {","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"        FileWriter fw \u003d new FileWriter(System.getProperty(\"user.dir\") + \"/data/duke.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"        ArrayList\u003cTask\u003e tasks \u003d TaskList.getList();","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"            fw.write(t.saveFormat() + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"        fw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"     * Clears the contents of a file.","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"     * @param filename the name of the file to be cleared","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"     * @throws IOException if there is an error clearing the file","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"    public static void clearFile(String filename) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"        FileOutputStream writer \u003d new FileOutputStream(filename);","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"        writer.write((\"\").getBytes());","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"        writer.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"tricixg":111}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":" * @author @tricixg","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"    protected String taskType \u003d \"T\";","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"     * Constructs a Task with a description.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"     * Constructs a Task with a description and a completion status.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    public Task(boolean isDone, String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"     * Returns the format of the task when saved.","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"     * @return The saved format of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    public abstract String saveFormat();","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"     * @return The status icon of the task as a String.","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"     * @return The completion status of the task as a boolean.","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"        return isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"        return \"[\" + getStatusIcon() + \"]\" +  this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"        return description;","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tricixg":89}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":" * The TaskList class provides functionality for managing a list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":" * It includes methods for adding, deleting, and searching for tasks, as well as marking tasks as done or undone.","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":" * @author @tricixg","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":" * @version 1.0","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"public class TaskList {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"    static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"        list.add(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    public void delete(int i) {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"        list.remove(i);","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"        return list.get(i);","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    public int size() {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"        return list.size();","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"    public void markAsDone(int i) {","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"        list.get(i).markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    public void markAsUnDone(int i) {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        list.get(i).markAsUnDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"    public static ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"        return list;","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"     * Unmarks a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"     * @param array The array of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"     * @param splitInput The user\u0027s input for unmarking a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"    public static void unmarkTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"        array.get((Integer.parseInt(splitInput[1])-1)).markAsUnDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"        Ui.unmarkTask(array, splitInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"     * Marks a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"     * @param array The array of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"     * @param splitInput The user\u0027s input for marking a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"    public static void markTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"        array.get((Integer.parseInt(splitInput[1])-1)).markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"        Ui.markTask(array, splitInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"     * Deletes a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"     * @param array The array of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"     * @param splitInput The user\u0027s input for deleting a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"        array.remove((Integer.parseInt(splitInput[1])-1));","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"        Ui.removeTask(array, splitInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"     * Displays list of tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"     * @param array The array of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"    public static void displayList(ArrayList\u003cTask\u003e array) {","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"        Ui.displayList(array);","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"     * Searches for a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"     * @param array The array of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"     * @param splitInput The user\u0027s input for searching for a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"    public static void searchTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"        String searchTerm \u003d splitInput[1].toLowerCase();","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"        ArrayList\u003cTask\u003e searchResults \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"        int resultCount \u003d 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"        for (Task t : array) {","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"            if (t.getDescription().toLowerCase().contains(searchTerm)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"                searchResults.add(t);","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"                resultCount++;","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"        if (resultCount \u003d\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"            System.out.println(\"No tasks found with the keyword \" + searchTerm + \".\");","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"            for (int i \u003d 0; i \u003c searchResults.size(); i++) {","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"                System.out.println((i + 1) + \".\" + searchResults.get(i));","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"tricixg":116}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import util.*;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":" * Class Todo extends the abstract class Task and represents a to-do task.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":" * @author @tricixg","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":" * @version 1.0","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"    static String divider \u003d \"    ═══*.·:·.☽✧    ✦    ✧☾.·:·.*═══\";","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"     * Creates a new Todo task with the given description.","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"        this.taskType \u003d \"T\";","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"     * Creates a new Todo task with the given description and completion status.","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"     * @param isDone  a boolean indicating whether the task is completed or not.","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    public Todo(boolean isDone, String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        super(isDone, description);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"        this.taskType \u003d \"T\";","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"     * Returns a string representation of the task","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"     * in the format \"[T][status icon] task description\".","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"     * @return a string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"     * Adds a new Todo task to the list of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"     * @param array a list of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"     * @param splitInput an array of strings containing the user input.","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"    public static void createTodoTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"        if (splitInput.length \u003d\u003d 1 || splitInput[1].equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"                throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"            for (int j\u003d2; j\u003c splitInput.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"                splitInput[1] \u003d splitInput[1] + \" \" + splitInput[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"            String desc \u003d splitInput[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"            Todo t \u003d new Todo(desc);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"            array.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"            Ui.addTask(array, t);","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"     * Returns a string representation of the task","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"     * in the format \"T | completion status | task description\".","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"     * @return a string representation of the task in the save format.","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"        String divider \u003d \" | \";","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"        int marked \u003d this.getIsDone() ? 1 : 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"        return \"T\" + divider + marked + divider + description;","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tricixg":88}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"public class Ui {","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"    static String divider \u003d \"    ═══*.·:·.☽✧    ✦    ✧☾.·:·.*═══\";","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"    static String line \u003d \"      _____________________________________________________________________\";","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"    public static void greet() {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"  ───── ･ ｡ﾟ☆: *.☽ .* :☆ﾟ. ───── \\n Hello! I\u0027m Broccoli the dinosaur \\n           \u003c|°▿▿▿▿°|/ \\n      What can I do for you? \\n   ──── ･ ｡ﾟ☆: *.☽ .* :☆ﾟ. ────\");","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"    public static void bye() {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"    ──────── ⋅ ∙ ∘ ☽ ༓ ☾ ∘ ⋅ ⋅ ─────────\");","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"      Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"\\n   ‧˚₊꒷꒦︶︶︶︶︶꒷꒦︶︶︶︶︶꒦꒷‧₊˚⊹\");","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"        System.exit(0);","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    public static void displayList(ArrayList\u003cTask\u003e array) {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"        for (int j \u003d 0; j \u003c array.size(); j++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"            System.out.println(\"      \" + (j+1) + \".\" + array.get(j).toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    static void addTask(ArrayList\u003cTask\u003e array, Task t) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"     \" + t.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"     Now you have \" + array.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    static void removeTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"      Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"      \"+ array.get((Integer.parseInt(splitInput[1]) - 1)).toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"      Now you have \" + array.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    static void markTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"      Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"      \" + array.get((Integer.parseInt(splitInput[1]) - 1)).toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"    static void unmarkTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"      OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"        System.out.println(\"      \" + array.get((Integer.parseInt(splitInput[1]) - 1)).toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"tricixg":59}},{"path":"src/main/java/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"    protected String errorMessage \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"    private static final ArrayList\u003cString\u003e taskInput \u003d new ArrayList\u003c\u003e (Arrays.asList(\"todo\", \"list\", \"deadline\", \"event\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"    public DukeException(String inputType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"        if (taskInput.contains(inputType)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"            this.errorMessage \u003d String.format(\"The description of a %s cannot be empty\", inputType);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"            this.errorMessage \u003d inputType;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"    public DukeException() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        return \"    ☹ OOPS!!! \" + errorMessage;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tricixg":24}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"    public void testDeadlineCreation() {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"        LocalDate localDate \u003d LocalDate.of(2019, 12, 10);","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"        String date \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"        Deadline deadline \u003d new Deadline(\"Buy milk\", date);","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"Buy milk\", deadline.getDescription());","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"        assertEquals(date, deadline.getDate());","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    public void testDeadlineCompletion() {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"        LocalDate date \u003d LocalDate.of(2019, 12, 10);","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        Deadline deadline \u003d new Deadline(\"Buy milk\", date);","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"        assertTrue(deadline.getIsDone());","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"tricixg":32}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    public void testTodoCreation() {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"        Todo todo \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"Buy milk\", todo.getDescription());","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"        assertFalse(todo.getIsDone());","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    public void testTodoCompletion() {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"        Todo todo \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"        assertTrue(todo.getIsDone());","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"tricixg":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"todo borrow book","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"bye","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tricixg":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"if ! javac -cp /Users/tricia/Documents/University/Github/ip/src/main/java/duke -Xlint:none -d ../bin /Users/tricia/Documents/University/Github/ip/src/main/java/duke/*.java \\","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"/Users/tricia/Documents/University/Github/ip/src/main/java/util/*.java","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"java -classpath /Users/tricia/Documents/University/Github/ip/bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tricixg":3,"-":36}}]
