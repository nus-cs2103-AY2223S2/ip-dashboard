[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    String javaFxVersion \u003d \u002719\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"    archiveBaseName \u003d \"Broccoli\"","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"checkstyle {","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"javafx {","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"    version \u003d \"19\"","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"tricixg":28,"-":39}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"D | 0 | CS2103T IP submission | Feb 17 2023","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"tricixg":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"# Broccoli Task Manager","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"Welcome to Broccoli, your personal task manager! \u003c|°▿▿▿▿°|/","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"Broccoli is a simple command line chat bot that helps you manage your daily tasks. You can easily add, delete, and update tasks using simple commands, and Broccoli will keep track of everything for you.","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"## Getting Started","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"1. Download the source code from the repository ","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"2. import it into your Java development environment. ","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"You will also need to install JavaFX to run the application.","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"Once you\u0027ve launched Duke, you can enter commands to manage your tasks. Here are some examples:","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"- `list` - Lists all tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"- `todo \u003cdescription\u003e` - Adds a new todo task","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"- `deadline \u003cdescription\u003e /by \u003cdate\u003e` - Adds a new deadline task","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"- `event \u003cdescription\u003e /at \u003cdate\u003e` - Adds a new event task","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"- `done \u003ctask index\u003e` - Marks a task as done","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"- `delete \u003ctask index\u003e` - Deletes a task","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"- `find \u003ckeyword\u003e` - Searches for tasks containing a keyword","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"## Examples","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"### `list`","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"Shows a list of all the tasks currently stored.","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"`list`","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"1. [T][ ] do homework","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"2. [D][ ] submit assignment (by: Sep 15 2022)","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"3. [E][ ] attend meeting (at: Sep 20 2022)","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"### `todo`","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"Adds a new todo task to the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"`todo read a book`","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"1.[T][ ] read a book","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"### `deadline`","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"Adds a new deadline task to the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"`deadline submit report /by 2022-09-30`","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"[D][ ] submit report (by: Sep 30 2022)","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"tricixg":49,"-":21}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":" * The Deadline class extends the Task class and represents a task with a due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":" * @author @tricixg","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":" * @version 1.0","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"    protected String by;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"     * Constructs a new Deadline object with the given task and due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"     * @param by The task\u0027s due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"     * Constructs a new Deadline object with the given task and due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"     * @param by The task\u0027s due date as a LocalDate type","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        this.by \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"     * Constructs a new Deadline object with the given task and due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"     * @param isDone a boolean indicating whether the task is completed or not.","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"     * @param by The task\u0027s due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"    public Deadline(Boolean isDone, String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"        super(isDone, description);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"     * in the format \"[D][status icon] task description (by: due date)\".","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"     * Getter method to access the date of the deadline.","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     * @return date as a String.","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"    public String getDate() {","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"        return by;","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"     * Creates a new Deadline task from a user\u0027s input","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"     * @param array a list of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"     * @param splitInput an array of strings containing the user input.","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"    public static String createDeadlineTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"        if (splitInput.length \u003d\u003d 1 || splitInput[1].equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"                throw new DukeException(\"deadline\");","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"            for (int j \u003d 1; j \u003c splitInput.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"                if (splitInput[j].equals(\"/by\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"                    for (int k \u003d 1; k \u003c j - 1; k++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"                        splitInput[1] \u003d splitInput[1] + \" \" + splitInput[k + 1];","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"                    for (int l \u003d splitInput.length - 1; l \u003e j + 1; l--) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"                        splitInput[splitInput.length - 1] \u003d splitInput[l - 1] + \" \" + splitInput[splitInput.length - 1];","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"                    splitInput[j] \u003d splitInput[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"            String date \u003d splitInput[splitInput.length - 1];","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"            String desc \u003d splitInput[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"            if (isDate(date)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"                LocalDate ld \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"                Deadline d \u003d new Deadline(desc, ld);","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"                array.add(d);","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"                return Ui.addTask(array, d);","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"                Deadline d \u003d new Deadline(desc, date);","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"                array.add(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"                return Ui.addTask(array, d);","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"tricixg"},"content":"        return \"error\";","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"tricixg"},"content":"     * Checks whether a string is an instance of LocalDate","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"tricixg"},"content":"     * in the format \"yyyy-MM-dd\"","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"tricixg"},"content":"     * @param date String to be checked","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"tricixg"},"content":"     * @return True if \"yyyy-MM-dd\"","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"tricixg"},"content":"    public static boolean isDate(String date) {","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"tricixg"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"tricixg"},"content":"        LocalDate ld \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"tricixg"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"tricixg"},"content":"            ld \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"tricixg"},"content":"            System.out.println(ld);","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"tricixg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"tricixg"},"content":"            return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"tricixg"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"tricixg"},"content":"     * Returns a string representation of the task","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"tricixg"},"content":"     * in the format \"D | completion status | task description | due date\".","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"tricixg"},"content":"     * @return String of deadline task in save format","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"tricixg"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"tricixg"},"content":"        String d \u003d \" | \";","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"tricixg"},"content":"        int marked \u003d this.getIsDone() ? 1 : 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"tricixg"},"content":"        return \"D\" + d + marked + d + description + d + by;","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tricixg":147}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" * The DialogBox class handles the UI of the duke bot.","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":" * It includes methods getUser and getDuke dialog which gives different designs.","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    private Label text;","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"     * Creates a dialogbox with Text and Image.","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     * @param l the text to be displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     * @param iv the image to be displayed","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"        final Circle clip \u003d new Circle(25, 25, 25);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        displayPicture.setFitWidth(50.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"        displayPicture.setFitHeight(50.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"        text.setPadding(new Insets(0, 10, 0, 10));","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"        this.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"        this.setSpacing(10);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"    private void flip() {","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"     * Creates a dialogbox with Text and Image for the User.","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"     * @param l the text to be displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"     * @param iv the image to be displayed","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"        Color darkBlueColor \u003d Color.rgb(136, 172, 224);","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"        Color lightBlueColor \u003d Color.rgb(173, 216, 230);","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"        CornerRadii radius \u003d new CornerRadii(20);","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"        Background darkBlueBackground \u003d new Background(new BackgroundFill(darkBlueColor, radius , Insets.EMPTY));","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"        l.setBackground(darkBlueBackground);","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"        l.setBorder(new Border(new BorderStroke(lightBlueColor, BorderStrokeStyle.SOLID, radius, new BorderWidths(1))));","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"        DialogBox user \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"        //user.setBackground(lightBlueBackground);","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"        return user;","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"     * Creates a dialogbox with Text and Image for the bot.","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"     * @param l the text to be displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"     * @param iv the image to be displayed","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"        Color lightBlueColor \u003d Color.rgb(173, 216, 230);","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"        Color darkBlueColor \u003d Color.rgb(136, 172, 224);","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"        CornerRadii radius \u003d new CornerRadii(20);","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"        Background lightBlueBackground \u003d new Background(new BackgroundFill(lightBlueColor, radius , Insets.EMPTY));","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"        l.setBackground(lightBlueBackground);","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"        l.setBorder(new Border(new BorderStroke(darkBlueColor, BorderStrokeStyle.SOLID, radius, new BorderWidths(1))));","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"        db.flip();","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"        //db.setBackground(lightBlueBackground);","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"        return db;","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"tricixg":89}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.awt.*;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":" * The main class of the Duke Task Manager application.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":" * This class is responsible for starting the application,","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":" * initializing the task list, and handling user inputs.","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":" * @author @tricixg","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":" * @version 1.0","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/spot.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/arlo.jpeg\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"        storage \u003d new Storage(System.getProperty(\"user.dir\") + \"/data/duke.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"        Color color \u003d Color.rgb(202, 231, 193);","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"        CornerRadii radius \u003d new CornerRadii(5);","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"        Background greenBackground \u003d new Background(new BackgroundFill(color, radius, Insets.EMPTY));","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"        dialogContainer.setBackground(greenBackground);","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        scrollPane.setBackground(greenBackground);","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"        userInput.setPromptText(\"task Watch The Good Dino /by Tomorrow\"); //to set the hint text","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"        userInput.requestFocus(); //to not setting the focus on that node so that the hint will display immediately","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"        mainLayout.setBackground(greenBackground);","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"        stage.show();","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"        stage.setTitle(\"Broccoli\");","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"        String greet \u003d Ui.getGreeting();","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"        Label greeting \u003d new Label(greet);","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, new ImageView(duke)));","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"                handleUserInput();","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"tricixg"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"tricixg"},"content":"        });","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"tricixg"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"tricixg"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"tricixg"},"content":"                handleUserInput();","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"tricixg"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"tricixg"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":121,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"tricixg"},"content":"        });","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"tricixg"},"content":"     * Iteration 1:","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"tricixg"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"tricixg"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"tricixg"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"tricixg"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"tricixg"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"tricixg"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"tricixg"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"tricixg"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"tricixg"},"content":"     * Iteration 2:","lastModifiedDate":"2023-02-16"},{"lineNumber":139,"author":{"gitId":"tricixg"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"tricixg"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"tricixg"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"tricixg"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-16"},{"lineNumber":144,"author":{"gitId":"tricixg"},"content":"        String[] splitInput \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"tricixg"},"content":"        String response \u003d Parser.parseInput(splitInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"tricixg"},"content":"        Label userText \u003d new Label(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":148,"author":{"gitId":"tricixg"},"content":"        Label dukeText \u003d new Label(response);","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"tricixg"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"tricixg"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-02-16"},{"lineNumber":151,"author":{"gitId":"tricixg"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"tricixg"},"content":"        );","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"tricixg"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"tricixg"},"content":"        if (input.contains(\"bye\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"tricixg"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"tricixg"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-16"},{"lineNumber":157,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tricixg":162}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import util.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":" * The Event class extends the Task class and represents a task with a duration.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":" * @author @tricixg","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" * @version 1.0","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    protected String from;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    protected String to;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"     * Constructs a new Event object with the given task and due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     * @param from The task\u0027s start date/time.","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"     * @param to The task\u0027s end date/time.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"     * Constructs a new Event object with the given task and due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"     * @param description The task description.","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"     * @param from The task\u0027s start date/time as a LocalDate type","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"     * @param to The task\u0027s end date/time as a LocalDate type","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"        this.from \u003d from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        this.to \u003d to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"     * Constructs a new Event object with the given task and due date.","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"     * @param isDone a boolean indicating whether the task is completed or not.","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"     * @param from The task\u0027s start date/time.","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"     * @param to The task\u0027s end date/time.","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"    public Event(Boolean isDone, String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"        super(isDone, description);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"     * Returns a string representation of the task","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"     * in the format \"[E][status icon] task description (from: start to: end)\".","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"     * Creates a new Event task from a user\u0027s input","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"     * @param array  a list of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"     * @param splitInput an array of strings containing the user input.","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"    public static String createEventTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"        String combinedString \u003d String.join(\" \", splitInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"        if (splitInput.length \u003d\u003d 1 || splitInput[1].equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"                throw new DukeException(\"event\");","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"            String event \u003d combinedString.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"            String[] eventArr \u003d event.split(\" /from\", 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"            if (eventArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"                String desc \u003d eventArr[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"                String[] periodArr \u003d eventArr[1].split(\" /to\");","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"                if (periodArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"                    String from \u003d periodArr[0].strip();","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"                    String to \u003d periodArr[1].strip();","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"                    if (isDate(from) \u0026\u0026 isDate(to)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"                        LocalDate ldFrom \u003d LocalDate.parse(from, formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"                        LocalDate ldTo \u003d LocalDate.parse(to, formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"                        Event e \u003d new Event(desc, ldFrom, ldTo);","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"                        array.add(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"                        return Ui.addTask(array, e);","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"                    } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"                        Event e \u003d new Event(desc, from, to);","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"                        array.add(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"                        return Ui.addTask(array, e);","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"tricixg"},"content":"        return \"error\";","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"tricixg"},"content":"     * Checks whether a string is an instance of LocalDate","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"tricixg"},"content":"     * in the format \"yyyy-MM-dd\"","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"tricixg"},"content":"     * @param date String to be checked","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"tricixg"},"content":"     * @return True if \"yyyy-MM-dd\"","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"tricixg"},"content":"    public static boolean isDate(String date) {","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"tricixg"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"tricixg"},"content":"        LocalDate ld \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"tricixg"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"tricixg"},"content":"            ld \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"tricixg"},"content":"            System.out.println(ld);","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"tricixg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"tricixg"},"content":"            System.out.println(\"Date \" + date + \" is not a date.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"tricixg"},"content":"            return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"tricixg"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"tricixg"},"content":"     * Joins elements of an array into a string, using a separator and a specified range.","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"tricixg"},"content":"     * @param array The array of elements to join.","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"tricixg"},"content":"     * @param separator The separator to use between elements.","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"tricixg"},"content":"     * @param startIndex The start index of the range.","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"tricixg"},"content":"     * @param endIndex The end index of the range.","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"tricixg"},"content":"     * @return A string that consists of the elements of the array","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"tricixg"},"content":"     *          joined with the separator, or null if the array is null.","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"tricixg"},"content":"    public static String join(Object[] array, String separator, int startIndex, int endIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"tricixg"},"content":"        if (array \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"tricixg"},"content":"            return null;","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"tricixg"},"content":"        if (separator \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"tricixg"},"content":"            separator \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"tricixg"},"content":"        int bufSize \u003d (endIndex - startIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"tricixg"},"content":"        if (bufSize \u003c\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"tricixg"},"content":"            return \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"tricixg"},"content":"        bufSize *\u003d ((array[startIndex] \u003d\u003d null ? 16 : array[startIndex].toString().length())","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"tricixg"},"content":"                        + separator.length());","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"tricixg"},"content":"        StringBuffer buf \u003d new StringBuffer(bufSize);","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"tricixg"},"content":"        for (int i \u003d startIndex; i \u003c endIndex; i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"tricixg"},"content":"            if (i \u003e startIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"tricixg"},"content":"                buf.append(separator);","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":166,"author":{"gitId":"tricixg"},"content":"            if (array[i] !\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"tricixg"},"content":"                buf.append(array[i]);","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"tricixg"},"content":"        return buf.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":174,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"tricixg"},"content":"     * Returns a string representation of the task","lastModifiedDate":"2023-02-12"},{"lineNumber":176,"author":{"gitId":"tricixg"},"content":"     * in the format \"E | completion status | task description | from | to\".","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"tricixg"},"content":"     * @return String of deadline task in save format","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":181,"author":{"gitId":"tricixg"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-31"},{"lineNumber":182,"author":{"gitId":"tricixg"},"content":"        String d \u003d \" | \";","lastModifiedDate":"2023-01-31"},{"lineNumber":183,"author":{"gitId":"tricixg"},"content":"        int marked \u003d this.getIsDone() ? 1 : 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":184,"author":{"gitId":"tricixg"},"content":"        String timePeriod \u003d from + d + to;","lastModifiedDate":"2023-01-31"},{"lineNumber":185,"author":{"gitId":"tricixg"},"content":"        return \"E\" + d + marked + d + description + d + timePeriod;","lastModifiedDate":"2023-01-31"},{"lineNumber":186,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":187,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":188,"author":{"gitId":"tricixg"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-16"},{"lineNumber":189,"author":{"gitId":"tricixg"},"content":"        return from;","lastModifiedDate":"2023-02-16"},{"lineNumber":190,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":191,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":192,"author":{"gitId":"tricixg"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-16"},{"lineNumber":193,"author":{"gitId":"tricixg"},"content":"        return to;","lastModifiedDate":"2023-02-16"},{"lineNumber":194,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":195,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":196,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":197,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"tricixg":197}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"public class Launcher {","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"tricixg":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":" * Class responsible for executing user\u0027s commands","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"public class Parser {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"     * Takes in user\u0027s input and executes respective command.","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"     * @param splitInput User\u0027s input in the form of a String array","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    public static String parseInput(String[] splitInput) {","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"        ArrayList\u003cTask\u003e array \u003d TaskList.getList();","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        String combined \u003d String.join(\" \", splitInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"        if (combined.equals(\"bye\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"            return \"bye\";","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"        } else if (combined.equals(\"list\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"            //Displays the list of items","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"            return TaskList.displayList(array);","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        } else if (splitInput[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"            //Mark the task as done","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"            return TaskList.markTask(array, splitInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"        } else if (splitInput[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"            //Unmark the task as done","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"            return TaskList.unmarkTask(array, splitInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"        } else if (splitInput[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"            //Creates a Deadline type Task","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"            return Deadline.createDeadlineTask(array, splitInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"        } else if (splitInput[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"            //Creates an Event type Task","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"            return Event.createEventTask(array, splitInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        } else if (splitInput[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"            //Creates a Todo type Task","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"            return Todo.createTodoTask(array, splitInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"        } else if (splitInput[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"            //Deletes a Task","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"            return TaskList.deleteTask(array, splitInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"        } else if (splitInput[0].equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"            //Finds a Task","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"            return TaskList.searchTask(array, splitInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"        } else if (splitInput[0].equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"            //Displays help message","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"            return Ui.helpMessage();","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"                throw new IllegalArgumentException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"        String error \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"        error +\u003d \"Type \u0027help\u0027 to see a list of commands\";","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"        return error;","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"tricixg":58}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.io.File;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":" * The Storage class is responsible for reading and writing tasks from/to a file.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":" * It contains methods for creating a save file if one does not exist,","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":" * loading a list of tasks from a file, converting a string to a boolean value,","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":" * saving a list of tasks to a file, and clearing the contents of a file.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"public class Storage {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"     * The file path of the save file.","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    private String filePath;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"     * Creates a new instance of Storage with the specified file path.","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     * @param s the file path of the save file","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"    public Storage(String s) {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"        this.filePath \u003d s;","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"     * Loads a list of tasks from the save file.","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"     * @return an ArrayList of Task objects loaded from the save file","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"        //assert feature used to ensure that the file path is not empty","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"        assert this.filePath.length() \u003e 0 : \"this file path should not be empty\";","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"        File dir \u003d new File(System.getProperty(\"user.dir\") + \"/data\");","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"            dir.mkdir();","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"            Scanner saveFile \u003d new Scanner(file);","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"            System.out.println(\"Saved data found, welcome back!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"            while (saveFile.hasNextLine()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"                loadFile(saveFile.nextLine(), tasks);","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"        } catch (IOException | DukeException ex) {","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"            System.out.println(\"No saved data found, new file will be created\");","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"                file.createNewFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"        return tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"     * Loads a single line from the save file as a Task object and adds it to the specified ArrayList.","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"     * @param s a single line from the save file","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"     * @param list the ArrayList to which the Task object is added","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"     * @throws IOException if there is an error reading from the file","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"     * @throws DukeException if there is an error in the format of the file","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"    public static void loadFile(String s, ArrayList\u003cTask\u003e list) throws IOException, DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"        String[] currLine \u003d s.split(\" \\\\| \");","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"        if (currLine[0].equalsIgnoreCase(\"T\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"            list.add(new Todo(strToBool(currLine[1]), currLine[2]));","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"        } else if (currLine[0].equalsIgnoreCase(\"D\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"            list.add(new Deadline(strToBool(currLine[1]), currLine[2], currLine[3]));","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"        } else if (currLine[0].equalsIgnoreCase(\"E\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"            list.add(new Event(strToBool(currLine[1]), currLine[2], currLine[3], currLine[4]));","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"            throw new DukeException(\"Read Error\");","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"     * Converts a string representation of a boolean value to a boolean value.","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"     * @param str a string representation of a boolean value","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"     * @return the corresponding boolean value","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"    public static boolean strToBool(String str) {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"        return str.equalsIgnoreCase(\"1\");","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"     * Saves a list of tasks to a file.","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"     * @param list a list of tasks","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"    public static void saveToFile(TaskList list) throws IOException {","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"        FileWriter fw \u003d new FileWriter(System.getProperty(\"user.dir\") + \"/data/duke.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"        ArrayList\u003cTask\u003e tasks \u003d TaskList.getList();","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"            fw.write(t.saveFormat() + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"        fw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"     * Clears the contents of a file.","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"     * @param filename the name of the file to be cleared","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"     * @throws IOException if there is an error clearing the file","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"    public static void clearFile(String filename) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"        FileOutputStream writer \u003d new FileOutputStream(filename);","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"        writer.write((\"\").getBytes());","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"        writer.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"tricixg":110}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":" * @author @tricixg","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"    protected String taskType \u003d \"T\";","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"     * Constructs a Task with a description.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"     * Constructs a Task with a description and a completion status.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    public Task(boolean isDone, String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"     * Returns the format of the task when saved.","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"     * @return The saved format of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    public abstract String saveFormat();","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"     * @return The status icon of the task as a String.","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"     * @return The completion status of the task as a boolean.","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"        return isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"        return description;","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tricixg":89}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":" * The TaskList class provides functionality for managing a list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":" * It includes methods for adding, deleting, and searching for tasks, as well as marking tasks as done or undone.","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":" * @author @tricixg","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":" * @version 1.0","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"public class TaskList {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"    private static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"    public TaskList(ArrayList\u003cTask\u003e t) {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        this.list \u003d t;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        list.add(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"    public void delete(int i) {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        list.remove(i);","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        return list.get(i);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    public int size() {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        return list.size();","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    public void markAsDone(int i) {","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"        list.get(i).markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"    public void markAsUnDone(int i) {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"        list.get(i).markAsUnDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    public static ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        return list;","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"     * Unmarks a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"     * @param array The array of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"     * @param splitInput The user\u0027s input for unmarking a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"    public static String unmarkTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"        if (Integer.parseInt(splitInput[1]) \u003e array.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"            return \"Task \" + splitInput[1] + \" does not exist :(\";","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        array.get((Integer.parseInt(splitInput[1]) - 1)).markAsUnDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"        return Ui.unmarkTask(array, splitInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"     * Marks a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"     * @param array The array of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     * @param splitInput The user\u0027s input for marking a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"    public static String markTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"        if (Integer.parseInt(splitInput[1]) \u003e array.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"            return \"Task \" + splitInput[1] + \" does not exist :(\";","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"        array.get((Integer.parseInt(splitInput[1]) - 1)).markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"        return Ui.markTask(array, splitInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"     * Deletes a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"     * @param array The array of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"     * @param splitInput The user\u0027s input for deleting a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"    public static String deleteTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"        if (Integer.parseInt(splitInput[1]) \u003e array.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"            return \"Task \" + splitInput[1] + \" does not exist :(\";","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"      \" + array.get((Integer.parseInt(splitInput[1]) - 1)).toString() + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"        array.remove((Integer.parseInt(splitInput[1]) - 1));","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"Now you have \" + array.size() + \" tasks in the list.\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"        return output;","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"     * Displays list of tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"     * @param array The array of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"    public static String displayList(ArrayList\u003cTask\u003e array) {","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"        if (array.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"            return \"You have no tasks in your list.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"tricixg"},"content":"        return Ui.displayList(array);","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"tricixg"},"content":"     * Searches for a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"tricixg"},"content":"     * @param array The array of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"tricixg"},"content":"     * @param splitInput The user\u0027s input for searching for a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"tricixg"},"content":"    public static String searchTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"tricixg"},"content":"        String searchTerm \u003d splitInput[1].toLowerCase();","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"tricixg"},"content":"        ArrayList\u003cTask\u003e searchResults \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"tricixg"},"content":"        int resultCount \u003d 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"tricixg"},"content":"        for (Task t : array) {","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"tricixg"},"content":"            if (t.getDescription().toLowerCase().contains(searchTerm)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"tricixg"},"content":"                searchResults.add(t);","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"tricixg"},"content":"                resultCount++;","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"tricixg"},"content":"        if (resultCount \u003d\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"tricixg"},"content":"            return \"No tasks found with the keyword \" + searchTerm + \".\";","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"tricixg"},"content":"            String list \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"tricixg"},"content":"            list +\u003d \"Here are the matching tasks in your list:\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"tricixg"},"content":"            for (int i \u003d 0; i \u003c searchResults.size(); i++) {","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"tricixg"},"content":"                list +\u003d (i + 1) + \".\" + searchResults.get(i) + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"tricixg"},"content":"            return list;","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"tricixg":137}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import util.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":" * Class Todo extends the abstract class Task and represents a to-do task.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":" * @author @tricixg","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":" * @version 1.0","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"     * Creates a new Todo task with the given description.","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"        this.taskType \u003d \"T\";","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     * Creates a new Todo task with the given description and completion status.","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"     * @param isDone  a boolean indicating whether the task is completed or not.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"     * @param description a string description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    public Todo(boolean isDone, String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"        super(isDone, description);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        this.taskType \u003d \"T\";","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"     * Returns a string representation of the task","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"     * in the format \"[T][status icon] task description\".","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"     * @return a string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"     * Adds a new Todo task to the list of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"     * @param array a list of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"     * @param splitInput an array of strings containing the user input.","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"    public static String createTodoTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"        if (splitInput.length \u003d\u003d 1 || splitInput[1].equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"                throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"            for (int j \u003d 2; j \u003c splitInput.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"                splitInput[1] \u003d splitInput[1] + \" \" + splitInput[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"            String desc \u003d splitInput[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"            Todo t \u003d new Todo(desc);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"            array.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"            return Ui.addTask(array, t);","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"        return \"error\";","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"     * Returns a string representation of the task","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"     * in the format \"T | completion status | task description\".","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"     * @return a string representation of the task in the save format.","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"        String divider \u003d \" | \";","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"        int marked \u003d this.getIsDone() ? 1 : 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"        return \"T\" + divider + marked + divider + description;","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tricixg":84}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":" * The Ui class handles the user interface and printing of messages to the console.","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"public class Ui {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"     * Displays the initial greeting when duke is launched.","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"     * @return The greeting","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    public static String getGreeting() {","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"        //Initial greeting","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        String greet \u003d \"Hello! I\u0027m Broccoli the dinosaur \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"        greet +\u003d \"                      \u003c|°▿▿▿▿°|/ \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"        greet +\u003d \"      What can I do for you?\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"        greet +\u003d \" ‧˚₊•-----------୨୧-----------•‧₊˚⊹\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"        greet +\u003d \" input \u0027help\u0027 for a list of commands\";","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"        return greet;","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"     * Displays the list of tasks in a formatted string.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"     * @param array The ArrayList of tasks to be displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"     * @return The formatted string of the list of tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    public static String displayList(ArrayList\u003cTask\u003e array) {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        String list \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"        for (int j \u003d 0; j \u003c array.size(); j++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"            list +\u003d \"      \" + (j + 1) + \".\" + array.get(j).toString() + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"        return list;","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"     * A formatted string confirming the addition of a Task.","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"     * @param array The ArrayList of tasks to which the task will be added.","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"     * @param t The task to be added to the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"     * @return A formatted string confirming the addition of the task to the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"    static String addTask(ArrayList\u003cTask\u003e array, Task t) {","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"Got it. I\u0027ve added this task:\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"     \" + t.toString() + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"Now you have \" + array.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"        return output;","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"tricixg"},"content":"     * A formatted string confirming the task is marked as done.","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"tricixg"},"content":"     * @param array The ArrayList of tasks to which the task will be marked as done.","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"tricixg"},"content":"     * @param splitInput The user\u0027s input for marking a task as done.","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"tricixg"},"content":"     * @return A formatted string confirming the task has been marked as done.","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"tricixg"},"content":"    static String markTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"tricixg"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"Nice! I\u0027ve marked this task as done:\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"      \" + array.get((Integer.parseInt(splitInput[1]) - 1)).toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"tricixg"},"content":"        return output;","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"tricixg"},"content":"     * A formatted string confirming the task is marked as not done.","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"tricixg"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"tricixg"},"content":"     * @param array The ArrayList of tasks to which the task will be marked as not done.","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"tricixg"},"content":"     * @param splitInput The user\u0027s input for marking a task as not done.","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"tricixg"},"content":"     * @return A formatted string confirming the task has been marked as not done.","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"tricixg"},"content":"    static String unmarkTask(ArrayList\u003cTask\u003e array, String[] splitInput) {","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"tricixg"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"      \" + array.get((Integer.parseInt(splitInput[1]) - 1)).toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"tricixg"},"content":"        return output;","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"tricixg"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"tricixg"},"content":"     * @return help message","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"tricixg"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"tricixg"},"content":"    public static String helpMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"tricixg"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"•────────•°•❀•°•────────•\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"Hello! Looks like you need help.\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"Here\u0027s a list of my commands\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"✤ todo \u003ctask\u003e - Adds a todo task to the list\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"✤ deadline \u003ctask\u003e /by \u003cdate\u003e - Adds a deadline task to the list\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"✤ event \u003ctask\u003e /at \u003cdate\u003e - Adds an event task to the list\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"✤ list - Displays the list of tasks\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"✤ mark \u003ctask number\u003e - Marks a task as done\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"✤ unmark \u003ctask number\u003e - Marks a task as not done\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"✤ delete \u003ctask number\u003e - Deletes a task from the list\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"✤ find \u003ckeyword\u003e - Finds tasks with the keyword\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"✤ bye - Exits the program\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"✤ help - Displays this message\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"•────────•°•❀•°•────────•\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"Cool fact!\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"if your \u003cdate\u003e is in the format YYYY-MM-DD it will be saved in MMM d yyyy format\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"Your tasks list will be saved even if you exit the program\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"tricixg"},"content":"        output +\u003d \"Hope this helps! Try it now!!!!!\" + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"tricixg"},"content":"        return output;","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"tricixg":102}},{"path":"src/main/java/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"    protected String errorMessage \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"    private static final ArrayList\u003cString\u003e taskInput \u003d new ArrayList\u003c\u003e (Arrays.asList(\"todo\", \"list\", \"deadline\", \"event\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"    public DukeException(String inputType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"        if (taskInput.contains(inputType)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"            this.errorMessage \u003d String.format(\"The description of a %s cannot be empty\", inputType);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"            this.errorMessage \u003d inputType;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"    public DukeException() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        return \"    ☹ OOPS!!! \" + errorMessage;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tricixg":24}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"    public void testDeadlineCreation() {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        LocalDate localDate \u003d LocalDate.of(2019, 12, 10);","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"        String date \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"        Deadline deadline \u003d new Deadline(\"Buy milk\", date);","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"Buy milk\", deadline.getDescription());","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"        assertEquals(date, deadline.getDate());","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    public void testDeadlineCompletion() {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"        LocalDate date \u003d LocalDate.of(2019, 12, 10);","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"        Deadline deadline \u003d new Deadline(\"Buy milk\", date);","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"        assertTrue(deadline.getIsDone());","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    public void testDeadlineToString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"        LocalDate date \u003d LocalDate.of(2019, 12, 10);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"        Deadline deadline \u003d new Deadline(\"Buy milk\", date);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"[D][ ] Buy milk (by: Dec 10 2019)\", deadline.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    public void testDeadlineToStringCompletion() {","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"        LocalDate date \u003d LocalDate.of(2019, 12, 10);","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"        Deadline deadline \u003d new Deadline(\"Buy milk\", date);","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"[D][X] Buy milk (by: Dec 10 2019)\", deadline.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"    ","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"tricixg":47}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"public class EventTest {","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"    public void testEventCreation() {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        LocalDate from \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"        LocalDate to \u003d LocalDate.of(2020, 1, 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"        Event event \u003d new Event(\"Buy milk\", from, to);","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"Buy milk\", event.getDescription());","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"Jan 1 2020\", event.getFrom());","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"Jan 2 2020\", event.getTo());    ","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    public void testEventCompletion() {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"        LocalDate from \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"        LocalDate to \u003d LocalDate.of(2020, 1, 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"        Event event \u003d new Event(\"Buy milk\", from, to);","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"        event.markAsDone();","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        assertTrue(event.getIsDone());","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"    ","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    public void testEventToString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        LocalDate from \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"        LocalDate to \u003d LocalDate.of(2020, 1, 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"        Event event \u003d new Event(\"Buy milk\", from, to);","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"[E][ ] Buy milk (from: Jan 1 2020 to: Jan 2 2020)\", event.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"tricixg"},"content":"    public void testEventToStringCompletion() {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"tricixg"},"content":"        LocalDate from \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"tricixg"},"content":"        LocalDate to \u003d LocalDate.of(2020, 1, 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"tricixg"},"content":"        Event event \u003d new Event(\"Buy milk\", from, to);","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"tricixg"},"content":"        event.markAsDone();","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"[E][X] Buy milk (from: Jan 1 2020 to: Jan 2 2020)\", event.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"tricixg":48}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"tricixg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"tricixg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"tricixg"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"tricixg"},"content":"    public void testTodoCreation() {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"tricixg"},"content":"        Todo todo \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"Buy milk\", todo.getDescription());","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"        assertFalse(todo.getIsDone());","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"tricixg"},"content":"    public void testTodoCompletion() {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"tricixg"},"content":"        Todo todo \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"tricixg"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"tricixg"},"content":"        assertTrue(todo.getIsDone());","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"tricixg"},"content":"    public void testTodoToString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"tricixg"},"content":"        Todo todo \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"[T][ ] Buy milk\", todo.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"tricixg"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"tricixg"},"content":"    public void testTodoToStringCompletion() {","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"tricixg"},"content":"        Todo todo \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"tricixg"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"tricixg"},"content":"        assertEquals(\"[T][X] Buy milk\", todo.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"tricixg"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"tricixg"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"tricixg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"tricixg":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tricixg"},"content":"todo borrow book","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"tricixg"},"content":"bye","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tricixg":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"tricixg"},"content":"if ! javac -cp /Users/tricia/Documents/University/Github/ip/src/main/java/duke -Xlint:none -d ../bin /Users/tricia/Documents/University/Github/ip/src/main/java/duke/*.java \\","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"tricixg"},"content":"/Users/tricia/Documents/University/Github/ip/src/main/java/util/*.java","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"tricixg"},"content":"java -classpath /Users/tricia/Documents/University/Github/ip/bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tricixg":3,"-":36}}]
