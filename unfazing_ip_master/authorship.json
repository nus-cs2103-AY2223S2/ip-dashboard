[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"unfazing"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"unfazing"},"content":"    private String by;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"unfazing"},"content":"    public Deadline(String taskName, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"unfazing"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"unfazing"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"unfazing"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"unfazing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"unfazing"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"unfazing"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"unfazing":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"unfazing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"unfazing"},"content":"    private enum Commands {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"unfazing"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"unfazing"},"content":"    private static Enum getCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"unfazing"},"content":"        String strCommand \u003d userInput.split(\" \", 2)[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"unfazing"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"unfazing"},"content":"            Enum command \u003d Commands.valueOf(strCommand.toUpperCase());","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"unfazing"},"content":"            return command;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"unfazing"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"unfazing"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"unfazing"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"unfazing"},"content":"            throw new DukeException(\"No command given\");","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"unfazing"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"unfazing"},"content":"    private static int parseMarkOrDeleteCommands(String userInput) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"unfazing"},"content":"        String[] splitStr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"unfazing"},"content":"        if (splitStr.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"unfazing"},"content":"            throw new DukeException(\"Mark / Unmark / Delete commands require an integer argument referring to task number\");","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"unfazing"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"unfazing"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"unfazing"},"content":"                int taskNumber \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"unfazing"},"content":"                return taskNumber;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"unfazing"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"unfazing"},"content":"                throw new DukeException(\"Format of argument cannot be parsed as an integer\");","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"unfazing"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"unfazing"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"unfazing"},"content":"    private static String parseTodoCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"unfazing"},"content":"        String[] splitStr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"unfazing"},"content":"        if (splitStr.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"unfazing"},"content":"            throw new DukeException(\"Todo command requires a task description\");","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"unfazing"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"unfazing"},"content":"            return splitStr[1];","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"unfazing"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"unfazing"},"content":"    private static String[] parseDeadlineCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"unfazing"},"content":"        String[] splitStr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"unfazing"},"content":"        if (splitStr.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"unfazing"},"content":"            throw new DukeException(\"Deadline command requires task description and /by argument\");","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"unfazing"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"unfazing"},"content":"            String[] output \u003d splitStr[1].split(\" /by \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"unfazing"},"content":"            if (output.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"unfazing"},"content":"                throw new DukeException(\"Deadline command requires task description and /by argument\");","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"unfazing"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"unfazing"},"content":"                return output;","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"unfazing"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"unfazing"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"unfazing"},"content":"    private static String[] parseEventCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"unfazing"},"content":"        String[] splitStr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"unfazing"},"content":"        if (splitStr.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"unfazing"},"content":"            throw new DukeException(\"Event command requires task description, /from argument and /to argument\");","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"unfazing"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"unfazing"},"content":"            String[] splitFrom \u003d splitStr[1].split(\" /from \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"unfazing"},"content":"            if (splitFrom.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"unfazing"},"content":"                throw new DukeException(\"Event command requires task description, /from argument and /to argument\");","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"unfazing"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"unfazing"},"content":"                String[] splitTo \u003d splitFrom[1].split(\" /to \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"unfazing"},"content":"                if (splitTo.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"unfazing"},"content":"                    throw new DukeException(\"Event command requires task description, /from argument and /to argument\");","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"unfazing"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"unfazing"},"content":"                    return new String[] {splitFrom[0], splitTo[0], splitTo[1]};  // [0] is description of task; [1] is from; [2] is to","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"unfazing"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"unfazing"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"unfazing"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"unfazing"},"content":"        Printer p \u003d new Printer();","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"unfazing"},"content":"        String text;","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"unfazing"},"content":"        Enum command;","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"unfazing"},"content":"        Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"unfazing"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"unfazing"},"content":"        boolean flag \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"unfazing"},"content":"        p.printWelcome();","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"unfazing"},"content":"        while (flag) {","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"unfazing"},"content":"            text \u003d s.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"unfazing"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"unfazing"},"content":"                command \u003d Duke.getCommand(text); // will catch any invalid command alrdy","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"unfazing"},"content":"                if (command.equals(Commands.BYE)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"unfazing"},"content":"                    p.printExit();","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"unfazing"},"content":"                    flag \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"unfazing"},"content":"                } else if (command.equals(Commands.LIST)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"unfazing"},"content":"                    p.print(taskList.listTasks());","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"unfazing"},"content":"                } else if (command.equals(Commands.MARK)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"unfazing"},"content":"                    p.print(taskList.markTask(parseMarkOrDeleteCommands(text)));","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"unfazing"},"content":"                } else if (command.equals(Commands.UNMARK)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"unfazing"},"content":"                    p.print(taskList.unmarkTask(parseMarkOrDeleteCommands(text)));","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"unfazing"},"content":"                } else if (command.equals(Commands.DELETE)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"unfazing"},"content":"                    p.print(taskList.deleteTask(parseMarkOrDeleteCommands(text)));","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"unfazing"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"unfazing"},"content":"                    if (command.equals(Commands.TODO)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"unfazing"},"content":"                        p.print(taskList.addTask(parseTodoCommand(text)));","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"unfazing"},"content":"                    } else if (command.equals(Commands.DEADLINE)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"unfazing"},"content":"                        String[] parsed \u003d parseDeadlineCommand(text); // parsed[0] is description of task; parsed[1] is by","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"unfazing"},"content":"                        p.print(taskList.addTask(parsed[0], parsed[1]));","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"unfazing"},"content":"                    } else if (command.equals(Commands.EVENT)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"unfazing"},"content":"                        String[] parsed \u003d parseEventCommand(text); // parsed[0] is description of task; parsed[1] is from; parsed[2] is to","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"unfazing"},"content":"                        p.print(taskList.addTask(parsed[0], parsed[1], parsed[2]));","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"unfazing"},"content":"                    } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"unfazing"},"content":"                        p.print(\"MISSED AN EXCEPTION: Somehow ended up at the end of the if-else blocks\"); //should be unnecessary","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"unfazing"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"unfazing"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"unfazing"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"unfazing"},"content":"                p.print(e.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"unfazing"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"unfazing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"unfazing":116,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"unfazing"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"unfazing"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"unfazing"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"unfazing"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"unfazing":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"unfazing"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"unfazing"},"content":"    private String from;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"unfazing"},"content":"    private String to;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"unfazing"},"content":"    public Event(String taskName, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"unfazing"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"unfazing"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"unfazing"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"unfazing"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"unfazing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"unfazing"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"unfazing"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"unfazing":14}},{"path":"src/main/java/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"unfazing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"unfazing"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"unfazing"},"content":"public class Printer {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"unfazing"},"content":"    private String str;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"unfazing"},"content":"    private int maxCharPerLine \u003d 100;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"unfazing"},"content":"    private int maxLines \u003d 500;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"unfazing"},"content":"    private String horizontal;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"unfazing"},"content":"    public Printer() {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"unfazing"},"content":"        this.horizontal \u003d \"_\".repeat(this.maxCharPerLine + 4);","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"unfazing"},"content":"    public Printer(int maxCharPerLine, int maxLines) {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"unfazing"},"content":"        this.maxLines \u003d maxLines;","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"unfazing"},"content":"        this.maxCharPerLine \u003d maxCharPerLine;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"unfazing"},"content":"        this.horizontal \u003d \"_\".repeat(maxCharPerLine + 4);","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"unfazing"},"content":"    public void print(String str) {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"unfazing"},"content":"        String[] lines \u003d str.split(\"\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"unfazing"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"unfazing"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"unfazing"},"content":"            if (line.length() \u003e maxCharPerLine) {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"unfazing"},"content":"                int numNewLines \u003d (int) Math.ceil(line.length() / maxCharPerLine);","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"unfazing"},"content":"                String[] newLines \u003d new String[numNewLines];","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"unfazing"},"content":"                for (int i\u003d0; i \u003c numNewLines; i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"unfazing"},"content":"                    if (i \u003c numNewLines - 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"unfazing"},"content":"                        newLines[i] \u003d line.substring(100 * i, 100 * i + 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"unfazing"},"content":"                    } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"unfazing"},"content":"                        newLines[i] \u003d line.substring(100 * i);","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"unfazing"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"unfazing"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"unfazing"},"content":"                result.addAll(Arrays.asList(newLines));","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"unfazing"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"unfazing"},"content":"                int padCount \u003d maxCharPerLine - line.length();","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"unfazing"},"content":"                String padding \u003d \" \".repeat(padCount);","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"unfazing"},"content":"                result.add(line + padding);","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"unfazing"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"unfazing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"unfazing"},"content":"        System.out.println(horizontal);","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"unfazing"},"content":"        result.stream().map(x -\u003e \"| \" + x + \" |\").forEach(x -\u003e System.out.println(x));","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"unfazing"},"content":"        System.out.println(horizontal);","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"unfazing"},"content":"    public void printExit() {","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"unfazing"},"content":"        String exitMessage \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"unfazing"},"content":"        print(exitMessage);","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"unfazing"},"content":"    public void printWelcome() {","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"unfazing"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m Duke \\nWhat can I do for you\";","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"unfazing"},"content":"        print(welcomeMessage);","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"unfazing"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"unfazing":55}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"unfazing"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"unfazing"},"content":"    private String taskName;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"unfazing"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"unfazing"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"unfazing"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"unfazing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"unfazing"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"unfazing"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"unfazing"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"unfazing"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"unfazing"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"unfazing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"unfazing"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"unfazing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"unfazing"},"content":"        return String.format(\"%s %s\", this.isDone ? \"[X]\" : \"[ ]\", this.taskName);","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"unfazing"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"unfazing":26}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"unfazing"},"content":"//import java.util.HashMap;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"unfazing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"unfazing"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"unfazing"},"content":"public class TaskList {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"unfazing"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"unfazing"},"content":"    private int taskCount;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"unfazing"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"unfazing"},"content":"        this.taskCount \u003d 0;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"unfazing"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"unfazing"},"content":"    public int getCount() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"unfazing"},"content":"        return taskCount;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"unfazing"},"content":"    private String addTaskMessage(Task task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"unfazing"},"content":"        return \"Got it. I\u0027ve added this task:\\n     \" + task + \"\\nNow you have \" + this.taskCount + \" tasks in the list\";","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"unfazing"},"content":"    //\u003d\u003d\u003d\u003d OVERLOADED METHOD addTask \u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"unfazing"},"content":"    public String addTask(String str) {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"unfazing"},"content":"        taskCount++;","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"unfazing"},"content":"        Task newTask \u003d new ToDo(str);","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"unfazing"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"unfazing"},"content":"        return addTaskMessage(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"unfazing"},"content":"    public String addTask(String task, String deadline) {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"unfazing"},"content":"        taskCount++;","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"unfazing"},"content":"        Task newTask \u003d new Deadline(task, deadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"unfazing"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"unfazing"},"content":"        return addTaskMessage(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"unfazing"},"content":"    public String addTask(String task, String from, String to) {","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"unfazing"},"content":"        taskCount++;","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"unfazing"},"content":"        Task newTask \u003d new Event(task, from, to);","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"unfazing"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"unfazing"},"content":"        return addTaskMessage(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"unfazing"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"unfazing"},"content":"    private String deleteTaskMessage(Task task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"unfazing"},"content":"        return \"Noted. I\u0027ve removed this task:\\n     \" + task + \"\\nNow you have \" + this.taskCount + \" tasks in the list\";","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"unfazing"},"content":"    public String deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"unfazing"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"unfazing"},"content":"            Task deletedTask \u003d this.taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"unfazing"},"content":"            this.taskList.remove(taskNumber - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"unfazing"},"content":"            taskCount--;","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"unfazing"},"content":"            return deleteTaskMessage(deletedTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"unfazing"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"unfazing"},"content":"            throw new DukeException(\"No task with given task number of \" + taskNumber);","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"unfazing"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"unfazing"},"content":"    public String markTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"unfazing"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"unfazing"},"content":"            Task task \u003d this.taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"unfazing"},"content":"            task.markDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"unfazing"},"content":"            return \"Nice! I\u0027ve marked this task as done: \\n\" + task;","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"unfazing"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"unfazing"},"content":"            throw new DukeException(\"No task with given task number of \" + taskNumber);","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"unfazing"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"unfazing"},"content":"    public String unmarkTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"unfazing"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"unfazing"},"content":"            Task task \u003d this.taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"unfazing"},"content":"            task.unmarkDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"unfazing"},"content":"            return \"OK, I\u0027ve marked this task as not done yet: \\n\" + task;","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"unfazing"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"unfazing"},"content":"            throw new DukeException(\"No task with given task number of \" + taskNumber);","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"unfazing"},"content":"}","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"unfazing"},"content":"    public String listTasks() {","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"unfazing"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"unfazing"},"content":"        result +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"unfazing"},"content":"        for (int i \u003d 0; i \u003c this.taskCount; i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"unfazing"},"content":"            result +\u003d String.format(\"%d. %s \\n\", i + 1, this.taskList.get(i));","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"unfazing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"unfazing"},"content":"        return result;","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"unfazing"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"unfazing":88}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"unfazing"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"unfazing"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"unfazing"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"unfazing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"unfazing"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"unfazing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"unfazing"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"unfazing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"unfazing"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"unfazing":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"unfazing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"unfazing"},"content":"todo test1","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"unfazing"},"content":"deadline test2 /by test2","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"unfazing"},"content":"event test3 /from test3 /to test3","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"unfazing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"unfazing"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"unfazing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"unfazing"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"unfazing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"unfazing"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"unfazing"},"content":"unmark","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"unfazing"},"content":"mark abc","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"unfazing"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"unfazing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"unfazing"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"unfazing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"unfazing"},"content":"event","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"unfazing"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"unfazing"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"unfazing"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"unfazing":20}}]
