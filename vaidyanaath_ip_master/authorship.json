[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"checkstyle {","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"vaidyanaath":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"    public Duke() {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"        tasks \u003d new TaskList(storage.loadTaskList());","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"        String formattedInput \u003d input.trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"        if (formattedInput.equals(\"bye\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"            return \"bye\";","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"            return Parser.processCommand(input, storage, tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"vaidyanaath":26,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"public class Launcher {","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"vaidyanaath":9}},{"path":"src/main/java/duke/MainApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"public class MainApp extends Application {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainApp.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"            stage.show();","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"vaidyanaath":28}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import duke.ui.components.DialogBox;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"        );","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"vaidyanaath":54}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"vaidyanaath":7}},{"path":"src/main/java/duke/exception/DukeInvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"public class DukeInvalidArgumentException extends DukeException{","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"    public DukeInvalidArgumentException(String errorMessage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"vaidyanaath":7}},{"path":"src/main/java/duke/exception/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"public class DukeInvalidCommandException extends DukeException{","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"    public DukeInvalidCommandException(String errorMessage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"vaidyanaath":7}},{"path":"src/main/java/duke/exception/DukeStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"public class DukeStorageException extends DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"    public DukeStorageException(String errorMessage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"vaidyanaath":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import duke.exception.DukeInvalidArgumentException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"import duke.exception.DukeInvalidCommandException;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":" * Represents a parser that reads in user commands/ input and processes them.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"     * Returns a LocalDateTime object representing the date and time specified.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"     * @param dateTime The string containing the date and time.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"     * @return A LocalDateTime object.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"     * @throws DukeException If the given date and time are in an invalid format","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"     * according to the specified patter.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"            return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Please enter a valid datetime: dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"     * Processes the given user command and performs actions on the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"     * @param userCommand The user command.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"     * @param storage The storage object to store the updated TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"     * @param tasks The TaskList to perform actions on.","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"     * @throws DukeException If the user\u0027s command is invalid or an error occurs","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"     * while processing the task list","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"    public static String processCommand(String userCommand, Storage storage, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"        if (userCommand.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidCommandException(\"Please enter a command\");","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"        String command \u003d userCommand.split(\" \", 2)[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"        String response;","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"vaidyanaath"},"content":"        // Single word commands","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"vaidyanaath"},"content":"        if (userCommand.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"vaidyanaath"},"content":"            return tasks.printTaskList();","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"vaidyanaath"},"content":"        // Multi-word commands","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"vaidyanaath"},"content":"        switch (command) {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"vaidyanaath"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"vaidyanaath"},"content":"                response \u003d tasks.addToDo(userCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"vaidyanaath"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"vaidyanaath"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"vaidyanaath"},"content":"                response \u003d tasks.addDeadline(userCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"vaidyanaath"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"vaidyanaath"},"content":"            case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"vaidyanaath"},"content":"                response \u003d tasks.addEvent(userCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"vaidyanaath"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"vaidyanaath"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"vaidyanaath"},"content":"                response \u003d tasks.markTask(userCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"vaidyanaath"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"vaidyanaath"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"vaidyanaath"},"content":"                response \u003d tasks.unmarkTask(userCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"vaidyanaath"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"vaidyanaath"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"vaidyanaath"},"content":"                response \u003d tasks.deleteTask(userCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"vaidyanaath"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"vaidyanaath"},"content":"            case \"find\":","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"vaidyanaath"},"content":"                response \u003d tasks.findTask(userCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"vaidyanaath"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"vaidyanaath"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"vaidyanaath"},"content":"                throw new DukeInvalidCommandException(\"beep...boop... unrecognized command!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"vaidyanaath"},"content":"        storage.storeTaskList(tasks.getTaskList());","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"vaidyanaath"},"content":"        return response;","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"vaidyanaath":90}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"import java.util.List;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":" * Provides functionality to store and load tasks from \"/data/duke.txt\"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"    private static final Path DATA_PATH \u003d Paths.get(\"data\");","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"    private static final Path TASK_LIST_PATH \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"    public ArrayList\u003cTask\u003e loadTaskList() {","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"            if (!Files.exists(DATA_PATH)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"                Files.createDirectories(DATA_PATH);","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"            if (!Files.exists(TASK_LIST_PATH)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"                Files.createFile(TASK_LIST_PATH);","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"            return parseTaskList();","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"    private ArrayList\u003cTask\u003e parseTaskList() throws IOException {","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(TASK_LIST_PATH);","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"            for (String line : lines) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"                taskList.add(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"            return taskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"        } catch (DukeStorageException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"vaidyanaath"},"content":"            clearDataFile();","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"vaidyanaath"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"vaidyanaath"},"content":"    private Task parseTask(String line) throws DukeStorageException {","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"vaidyanaath"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"vaidyanaath"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"vaidyanaath"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"vaidyanaath"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"vaidyanaath"},"content":"        Task task;","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"vaidyanaath"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"vaidyanaath"},"content":"        case \"T\":","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"vaidyanaath"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"vaidyanaath"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"vaidyanaath"},"content":"        case \"D\":","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"vaidyanaath"},"content":"            LocalDateTime dueDate \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"vaidyanaath"},"content":"            task \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"vaidyanaath"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"vaidyanaath"},"content":"        case \"E\":","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"vaidyanaath"},"content":"            LocalDateTime fromDate \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"vaidyanaath"},"content":"            LocalDateTime toDate \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"vaidyanaath"},"content":"            task \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"vaidyanaath"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"vaidyanaath"},"content":"        default:","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeStorageException(\"Oops, something is wrong with the data file! :(\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"vaidyanaath"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"vaidyanaath"},"content":"            task.setDone();","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"vaidyanaath"},"content":"       return task;","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"vaidyanaath"},"content":"    private void clearDataFile() throws IOException {","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"vaidyanaath"},"content":"        BufferedWriter bufferedWriter \u003d Files.newBufferedWriter(TASK_LIST_PATH);","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"vaidyanaath"},"content":"        bufferedWriter.write(\"\");","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"vaidyanaath"},"content":"        bufferedWriter.close();","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"vaidyanaath"},"content":"    public void storeTaskList(ArrayList\u003cTask\u003e taskList) throws DukeStorageException {","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"vaidyanaath"},"content":"            if (!Files.exists(TASK_LIST_PATH)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"vaidyanaath"},"content":"                throw new DukeStorageException(\"File error: The data file does not exist!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"vaidyanaath"},"content":"            BufferedWriter bufferedWriter \u003d Files.newBufferedWriter(TASK_LIST_PATH);","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"vaidyanaath"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"vaidyanaath"},"content":"                String line \u003d task.getTaskState();","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"vaidyanaath"},"content":"                bufferedWriter.write(line);","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"vaidyanaath"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"vaidyanaath"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"vaidyanaath"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeStorageException(\"File error: could not store tasks in data file!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"vaidyanaath":113}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":" * Represents a deadline that has a due-date.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"    private final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"EEE, d LLL uuuu, hh:mm a\");","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"     * Creates a deadline object with the given task description and due-date.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"     * @param dueDate The due-date of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"     * @return A string representation of the deadline task,","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"     * with the format \"[D][X] \u003cTask description\u003e\" if it is done,","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"     * and \"[D][ ] \u003cTask description\u003e otherwise\".","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"                + \" (by: \" + dueDate.format(FORMATTER) + \")\";","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"    public String getTaskState() {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"        return \"D | \" + super.getTaskString()","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"                + \" | \" + dueDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"vaidyanaath":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":" * Represents an event that has a description,","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":" * start date-time and end date-time.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"    private final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"EEE, d LLL uuuu, hh:mm a\");","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"     * Creates an event object with the given task description,","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"     * start date-time and end date-time.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"     * @param startDateTime The starting date-time of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"     * @param endDateTime The ending date-time of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"     * @return A string representation of the event task,","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"     * with the format \"[E][X] \u003cTask description\u003e\" if it is done,","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"     * and \"[E][ ] \u003cTask description\u003e otherwise\".","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"                + \" (from: \" + startDateTime.format(FORMATTER)","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"                + \" to: \" + endDateTime.format(FORMATTER) + \")\";","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"    public String getTaskState() {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"        return \"E | \" + super.getTaskString()","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"                + \" | \" + startDateTime + \" | \" + endDateTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"vaidyanaath":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":" * Represents a task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"    private String description;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"    protected Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"    public String getTaskString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"        return (isDone ? 1 : 0) + \" | \" + description;","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"        return description;","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"    public abstract String getTaskState();","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"vaidyanaath":41}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import duke.exception.DukeInvalidArgumentException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":" * Represents a TaskList that can hold {@link Task} objects.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"public class TaskList {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"    private final ArrayList\u003cTask\u003e TASKS;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"     * Creates a task-list object with the given list of Task objects.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"     * @param taskList The list of Task objects to be contained in the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"        TASKS \u003d taskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"     * Adds a to-do task from the given user command to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"     * @param userCommand The user command that contains the task description.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"     * @throws DukeException If the task description is missing.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"    public String addToDo(String userCommand) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"        String[] userCommandParts \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"        if (userCommandParts.length \u003c 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Please enter task description\");","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"        String taskDescription \u003d userCommandParts[1].trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"        ToDo toDo \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"        TASKS.add(toDo);","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\\t\" + toDo","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"                + \"\\nNow you have \" + TASKS.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"     * Adds a deadline task from the given user command to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"     * @param userCommand The user command that contains the task description","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"     *                    and the due-date.","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"     * @throws DukeException If the command has an invalid format.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"    public String addDeadline(String userCommand) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"vaidyanaath"},"content":"        String[] userCommandParts \u003d userCommand.split(\" /by\", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"vaidyanaath"},"content":"        String description \u003d userCommandParts[0].replace(\"deadline\", \"\").trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"vaidyanaath"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Please enter task description!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"vaidyanaath"},"content":"        if (userCommandParts.length \u003c 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Invalid format!\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"vaidyanaath"},"content":"                    + \"Use `deadline {description} /by {due date}`\");","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"vaidyanaath"},"content":"        if (userCommandParts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Please provide due date after `/by` parameter\");","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"vaidyanaath"},"content":"        LocalDateTime dueDate \u003d Parser.parseDateTime(userCommandParts[1].trim()) ;","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"vaidyanaath"},"content":"        Deadline deadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"vaidyanaath"},"content":"        TASKS.add(deadline);","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"vaidyanaath"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\\t\" + deadline","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"vaidyanaath"},"content":"                + \"\\nNow you have \" + TASKS.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"vaidyanaath"},"content":"     * Adds an event task from the given user command to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"vaidyanaath"},"content":"     * @param userCommand The user command that contains the task description,","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"vaidyanaath"},"content":"     *                    the start date-time, and the end date-time.","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"vaidyanaath"},"content":"     * @throws DukeException If the command has an invalid format.","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"vaidyanaath"},"content":"    public String addEvent(String userCommand) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"vaidyanaath"},"content":"        String[] userCommandParts \u003d userCommand.split(\" /from\", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"vaidyanaath"},"content":"        String description \u003d userCommandParts[0].replace(\"event\", \"\").trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"vaidyanaath"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Please enter task description!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"vaidyanaath"},"content":"        if (userCommandParts.length \u003c 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Invalid format!\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"vaidyanaath"},"content":"                    + \"Use `event {description} /from {start date/time} /to {end date/time}`\");","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"vaidyanaath"},"content":"        String[] timeParts \u003d userCommandParts[1].split(\" /to\", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"vaidyanaath"},"content":"        boolean isEmptyStartDateTime \u003d timeParts.length \u003c 1 || timeParts[0].trim().isEmpty();","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"vaidyanaath"},"content":"        if (isEmptyStartDateTime) {","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Please provide start date/time after `/from` parameter\");","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"vaidyanaath"},"content":"        boolean isEmptyEndDateTime \u003d timeParts.length \u003c 2 || timeParts[1].trim().isEmpty();","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"vaidyanaath"},"content":"        if (isEmptyEndDateTime) {","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Please provide end date/time after `/to` parameter\");","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"vaidyanaath"},"content":"        LocalDateTime startDateTime \u003d Parser.parseDateTime(timeParts[0].trim());","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"vaidyanaath"},"content":"        LocalDateTime endDateTime \u003d Parser.parseDateTime(timeParts[1].trim());","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"vaidyanaath"},"content":"        if (!endDateTime.isAfter(startDateTime)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"The end date/time should be after the start date/time\");","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"vaidyanaath"},"content":"        Event event \u003d new Event(description, startDateTime, endDateTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"vaidyanaath"},"content":"        TASKS.add(event);","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"vaidyanaath"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\\t\" + event","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"vaidyanaath"},"content":"                + \"\\nNow you have \" + TASKS.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"vaidyanaath"},"content":"     * Prints the tasks in the TaskList according to","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"vaidyanaath"},"content":"     * their string representation in an ordered list.","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"vaidyanaath"},"content":"    public String printTaskList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"vaidyanaath"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"vaidyanaath"},"content":"        if (TASKS.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"vaidyanaath"},"content":"            result.append(\"There are no tasks in your Task List!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"vaidyanaath"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"vaidyanaath"},"content":"            result.append(\"Your Tasks:\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"vaidyanaath"},"content":"            for (int i \u003d 0; i \u003c TASKS.size(); i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"vaidyanaath"},"content":"                result.append(i + 1)","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"vaidyanaath"},"content":"                        .append(\". \")","lastModifiedDate":"2023-02-11"},{"lineNumber":140,"author":{"gitId":"vaidyanaath"},"content":"                        .append(TASKS.get(i))","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"vaidyanaath"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":142,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":145,"author":{"gitId":"vaidyanaath"},"content":"        return result.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":146,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"vaidyanaath"},"content":"     * Marks the task specified in the user command as done in the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"vaidyanaath"},"content":"     * @param userCommand The user command that contains the index (1-indexed)","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"vaidyanaath"},"content":"     *                    of the task in the TaskList to be marked as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"vaidyanaath"},"content":"     * @throws DukeException If the given index is out of bounds or invalid.","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"vaidyanaath"},"content":"    public String markTask(String userCommand) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"vaidyanaath"},"content":"            String[] userCommandParts \u003d userCommand.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"vaidyanaath"},"content":"            if (userCommandParts.length !\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"vaidyanaath"},"content":"                throw new DukeInvalidArgumentException(\"Use format: mark {task no.}\");","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"vaidyanaath"},"content":"            String taskNumber \u003d userCommandParts[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"vaidyanaath"},"content":"            int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"vaidyanaath"},"content":"            if (TASKS.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":166,"author":{"gitId":"vaidyanaath"},"content":"                return \"There are no tasks in your Task List!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":167,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"vaidyanaath"},"content":"            } else if (0 \u003c\u003d taskIndex \u0026\u0026 taskIndex \u003c TASKS.size()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":169,"author":{"gitId":"vaidyanaath"},"content":"                Task task \u003d TASKS.get(taskIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":170,"author":{"gitId":"vaidyanaath"},"content":"                task.setDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"vaidyanaath"},"content":"                return (\"Task marked as completed\\n\" + task);","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"vaidyanaath"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":174,"author":{"gitId":"vaidyanaath"},"content":"                throw new DukeInvalidArgumentException(\"Please provide a valid Task number\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":175,"author":{"gitId":"vaidyanaath"},"content":"                        + \"You have \" + TASKS.size() + \" task(s) in your Task List\");","lastModifiedDate":"2023-02-02"},{"lineNumber":176,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":177,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":178,"author":{"gitId":"vaidyanaath"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2023-01-31"},{"lineNumber":179,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Please provide a valid Task number\");","lastModifiedDate":"2023-01-31"},{"lineNumber":180,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":181,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":182,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":183,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":184,"author":{"gitId":"vaidyanaath"},"content":"     * Marks the task specified in the user command as not done in the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":185,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":186,"author":{"gitId":"vaidyanaath"},"content":"     * @param userCommand The user command that contains the index (1-indexed)","lastModifiedDate":"2023-02-01"},{"lineNumber":187,"author":{"gitId":"vaidyanaath"},"content":"     *                    of the task in the TaskList to be marked as not done.","lastModifiedDate":"2023-02-01"},{"lineNumber":188,"author":{"gitId":"vaidyanaath"},"content":"     * @throws DukeException If the given index is out of bounds or invalid.","lastModifiedDate":"2023-02-01"},{"lineNumber":189,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":190,"author":{"gitId":"vaidyanaath"},"content":"    public String unmarkTask(String userCommand) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":191,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":192,"author":{"gitId":"vaidyanaath"},"content":"            String[] userCommandParts \u003d userCommand.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":193,"author":{"gitId":"vaidyanaath"},"content":"            if (userCommandParts.length !\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":194,"author":{"gitId":"vaidyanaath"},"content":"                throw new DukeInvalidArgumentException(\"Use format: unmark {task no.}\");","lastModifiedDate":"2023-01-31"},{"lineNumber":195,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":196,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":197,"author":{"gitId":"vaidyanaath"},"content":"            String taskNumber \u003d userCommandParts[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":198,"author":{"gitId":"vaidyanaath"},"content":"            int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":199,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":200,"author":{"gitId":"vaidyanaath"},"content":"            if (TASKS.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":201,"author":{"gitId":"vaidyanaath"},"content":"                return \"There are no tasks in your Task List!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":202,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":203,"author":{"gitId":"vaidyanaath"},"content":"            } else if (0 \u003c\u003d taskIndex \u0026\u0026 taskIndex \u003c TASKS.size()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":204,"author":{"gitId":"vaidyanaath"},"content":"                Task task \u003d TASKS.get(taskIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":205,"author":{"gitId":"vaidyanaath"},"content":"                task.setNotDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":206,"author":{"gitId":"vaidyanaath"},"content":"                return (\"Task marked as not completed\\n\" + task);","lastModifiedDate":"2023-02-11"},{"lineNumber":207,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":208,"author":{"gitId":"vaidyanaath"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":209,"author":{"gitId":"vaidyanaath"},"content":"                throw new DukeInvalidArgumentException(\"Please provide a valid Task number\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":210,"author":{"gitId":"vaidyanaath"},"content":"                        + \"You have \" + TASKS.size() + \" task(s) in your Task List\");","lastModifiedDate":"2023-02-02"},{"lineNumber":211,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":212,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":213,"author":{"gitId":"vaidyanaath"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2023-01-31"},{"lineNumber":214,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Please provide a valid Task number\");","lastModifiedDate":"2023-01-31"},{"lineNumber":215,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":216,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":217,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":218,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":219,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":220,"author":{"gitId":"vaidyanaath"},"content":"     * Deletes the task specified in the user command from the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":221,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":222,"author":{"gitId":"vaidyanaath"},"content":"     * @param userCommand The user command that contains the index (1-indexed)","lastModifiedDate":"2023-02-01"},{"lineNumber":223,"author":{"gitId":"vaidyanaath"},"content":"     *                    of the task in the TaskList to be deleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":224,"author":{"gitId":"vaidyanaath"},"content":"     * @throws DukeException If the given index is out of bounds or invalid.","lastModifiedDate":"2023-02-01"},{"lineNumber":225,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":226,"author":{"gitId":"vaidyanaath"},"content":"    public String deleteTask(String userCommand) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":227,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":228,"author":{"gitId":"vaidyanaath"},"content":"            String[] userCommandParts \u003d userCommand.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":229,"author":{"gitId":"vaidyanaath"},"content":"            if (userCommandParts.length !\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":230,"author":{"gitId":"vaidyanaath"},"content":"                throw new DukeInvalidArgumentException(\"Use format: delete {task no.}\");","lastModifiedDate":"2023-01-31"},{"lineNumber":231,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":232,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":233,"author":{"gitId":"vaidyanaath"},"content":"            String taskNumber \u003d userCommandParts[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":234,"author":{"gitId":"vaidyanaath"},"content":"            int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":235,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":236,"author":{"gitId":"vaidyanaath"},"content":"            if (TASKS.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":237,"author":{"gitId":"vaidyanaath"},"content":"                return \"There are no tasks in your Task List!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":238,"author":{"gitId":"vaidyanaath"},"content":"            } else if (0 \u003c\u003d taskIndex \u0026\u0026 taskIndex \u003c TASKS.size()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":239,"author":{"gitId":"vaidyanaath"},"content":"                Task task \u003d TASKS.get(taskIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":240,"author":{"gitId":"vaidyanaath"},"content":"                TASKS.remove(taskIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":241,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":242,"author":{"gitId":"vaidyanaath"},"content":"                return (\"Noted. I\u0027ve deleted this task:\\n\\t\" + task","lastModifiedDate":"2023-02-11"},{"lineNumber":243,"author":{"gitId":"vaidyanaath"},"content":"                        + \"\\nNow you have \" + TASKS.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":244,"author":{"gitId":"vaidyanaath"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":245,"author":{"gitId":"vaidyanaath"},"content":"                throw new DukeInvalidArgumentException(\"Please provide a valid Task number\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":246,"author":{"gitId":"vaidyanaath"},"content":"                        + \"You have \" + TASKS.size() + \" task(s) in your Task List\");","lastModifiedDate":"2023-02-02"},{"lineNumber":247,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":248,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":249,"author":{"gitId":"vaidyanaath"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2023-01-31"},{"lineNumber":250,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Please provide a valid Task number\");","lastModifiedDate":"2023-01-31"},{"lineNumber":251,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":252,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":253,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":254,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":255,"author":{"gitId":"vaidyanaath"},"content":"     * Returns the TaskList in its current state.","lastModifiedDate":"2023-02-01"},{"lineNumber":256,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":257,"author":{"gitId":"vaidyanaath"},"content":"     * @return The TaskList containing the Task objects","lastModifiedDate":"2023-02-01"},{"lineNumber":258,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":259,"author":{"gitId":"vaidyanaath"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":260,"author":{"gitId":"vaidyanaath"},"content":"        return TASKS;","lastModifiedDate":"2023-02-02"},{"lineNumber":261,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":262,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":263,"author":{"gitId":"vaidyanaath"},"content":"    public String findTask(String userCommand) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":264,"author":{"gitId":"vaidyanaath"},"content":"        String[] userCommandParts \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2023-02-02"},{"lineNumber":265,"author":{"gitId":"vaidyanaath"},"content":"        if (userCommandParts.length !\u003d 2) {","lastModifiedDate":"2023-02-02"},{"lineNumber":266,"author":{"gitId":"vaidyanaath"},"content":"            throw new DukeInvalidArgumentException(\"Please enter search keyword\");","lastModifiedDate":"2023-02-02"},{"lineNumber":267,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":268,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":269,"author":{"gitId":"vaidyanaath"},"content":"        String keyword \u003d userCommandParts[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":270,"author":{"gitId":"vaidyanaath"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-02"},{"lineNumber":271,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":272,"author":{"gitId":"vaidyanaath"},"content":"        for (Task task : TASKS) {","lastModifiedDate":"2023-02-02"},{"lineNumber":273,"author":{"gitId":"vaidyanaath"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":274,"author":{"gitId":"vaidyanaath"},"content":"                results.add(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":275,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":276,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":277,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":278,"author":{"gitId":"vaidyanaath"},"content":"        if (results.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":279,"author":{"gitId":"vaidyanaath"},"content":"            return (\"No search results for \\\"\" + keyword + \"\\\" :(\");","lastModifiedDate":"2023-02-11"},{"lineNumber":280,"author":{"gitId":"vaidyanaath"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":281,"author":{"gitId":"vaidyanaath"},"content":"            StringBuilder result \u003d new StringBuilder(\"Search results for \\\"\" + keyword + \"\\\":\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":282,"author":{"gitId":"vaidyanaath"},"content":"            for (int i \u003d 0; i \u003c results.size(); i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":283,"author":{"gitId":"vaidyanaath"},"content":"                result.append(i + 1)","lastModifiedDate":"2023-02-11"},{"lineNumber":284,"author":{"gitId":"vaidyanaath"},"content":"                        .append(\". \")","lastModifiedDate":"2023-02-11"},{"lineNumber":285,"author":{"gitId":"vaidyanaath"},"content":"                        .append(results.get(i))","lastModifiedDate":"2023-02-11"},{"lineNumber":286,"author":{"gitId":"vaidyanaath"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":287,"author":{"gitId":"vaidyanaath"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":288,"author":{"gitId":"vaidyanaath"},"content":"            return result.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":289,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":290,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":291,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"vaidyanaath":291}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":" * Represents a to-do task that has a description.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"     * Creates a to-do object with the given task description.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"     * Returns a string representation of the to-do task","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"     * @return A string representation of the to-do task,","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"     * with the format \"[T][X] \u003cTask description\u003e\" if it is done,","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"     * and \"[T][ ] \u003cTask description\u003e otherwise\".","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"    public String getTaskState() {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"        return \"T | \" + super.getTaskString();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"vaidyanaath":32}},{"path":"src/main/java/duke/ui/components/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.ui.components;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import duke.MainApp;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainApp.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"vaidyanaath"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"vaidyanaath"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"vaidyanaath"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"vaidyanaath"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"vaidyanaath"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"vaidyanaath"},"content":"    private void flip() {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"vaidyanaath"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"vaidyanaath"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"vaidyanaath"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"vaidyanaath"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"vaidyanaath"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"vaidyanaath"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"vaidyanaath"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"vaidyanaath"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"vaidyanaath"},"content":"        db.flip();","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"vaidyanaath"},"content":"        return db;","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"vaidyanaath":62}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"vaidyanaath":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"vaidyanaath":19}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"public class EventTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"    void toString_normalInput_success() {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.of(2023, 1, 30, 17, 30);","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.of(2023, 1, 30, 18, 30);","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"        Event event \u003d new Event(\"CS2103T Meeting\", startDateTime, endDateTime);","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"        String expectedResult \u003d \"[E][ ] CS2103T Meeting (from: Mon, 30 Jan 2023, 05:30 PM to: Mon, 30 Jan 2023, 06:30 PM)\";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"        String actualResult \u003d event.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"    void getTaskState_normalInput_success() {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.of(2023, 1, 30, 17, 30);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.of(2023, 1, 30, 18, 30);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"        Event event \u003d new Event(\"CS2103T Meeting\", startDateTime, endDateTime);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"        String expectedResult \u003d \"E | 0 | CS2103T Meeting | 2023-01-30T17:30 | 2023-01-30T18:30\";","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"        String actualResult \u003d event.getTaskState();","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"vaidyanaath":31}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"vaidyanaath"},"content":"    public void addToDo_normalInput_() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"vaidyanaath"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"vaidyanaath"},"content":"            taskList.addToDo(\"todo go shopping\");","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"vaidyanaath"},"content":"            assertEquals(1, taskList.getTaskList().size());","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"vaidyanaath"},"content":"            Task task \u003d taskList.getTaskList().get(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"vaidyanaath"},"content":"            String expectedResult \u003d \"[T][ ] go shopping\";","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"vaidyanaath"},"content":"            String actualResult \u003d task.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"vaidyanaath"},"content":"            assertEquals(expectedResult, actualResult);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"vaidyanaath"},"content":"            ","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"vaidyanaath"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"vaidyanaath"},"content":"            fail();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"vaidyanaath"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"vaidyanaath"},"content":"    public void addToDo_emptyInput_exceptionThrown() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"vaidyanaath"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"vaidyanaath"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"vaidyanaath"},"content":"            taskList.addToDo(\"todo\");","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"vaidyanaath"},"content":"            fail();","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"vaidyanaath"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"vaidyanaath"},"content":"            assertEquals(e.getMessage(), \"Please enter task description\");","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"vaidyanaath"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"vaidyanaath"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"vaidyanaath"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"vaidyanaath"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"vaidyanaath":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vaidyanaath"},"content":"todo buy milk","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"vaidyanaath"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"vaidyanaath"},"content":"deadline CS2103T quiz /by Monday","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"vaidyanaath"},"content":"event project meeting /from Wed 10am /to 12pm","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"vaidyanaath"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"vaidyanaath"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"vaidyanaath"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"vaidyanaath"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"vaidyanaath"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"vaidyanaath"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"vaidyanaath":10}}]
