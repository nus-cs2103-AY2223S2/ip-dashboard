[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"valerietanhx":6,"-":40}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":" * The main class of the program.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"     * Creates a new Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"     * @param dirPath Directory path.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"    public Duke(String dirPath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"        this.storage \u003d new Storage(dirPath);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"            ui.setFirstTime(true);","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"     * Runs the Duke program.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"    public void run() {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"        while (!isBye) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"                String line \u003d ui.readCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"                Command c \u003d Parser.parse(line);","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"                isBye \u003d c.isBye();","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"            } catch (Exception err) {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"                ui.showBunny();","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"                ui.showError(err);","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"        new Duke(\"./data/\").run();","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"valerietanhx":51,"-":4}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":" * A command to add a Deadline to the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    private final String desc;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"    private final String date;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"    private final String time;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    AddDeadlineCommand(String desc, String date, String time) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"     * @param ui UI handler.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"     * @param storage Storage to save and load list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"        Deadline t \u003d new Deadline(desc, date, time);","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"        ui.showBunny();","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"        ui.add(t, tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":40}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":" * A command to add an Event to the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    private final String desc;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"    private final String dateFrom;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"    private final String timeFrom;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    private final String dateTo;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"    private final String timeTo;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    AddEventCommand(String desc, String dateFrom, String timeFrom, String dateTo, String timeTo) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"        this.dateFrom \u003d dateFrom;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"        this.timeFrom \u003d timeFrom;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"        this.dateTo \u003d dateTo;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"        this.timeTo \u003d timeTo;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"     * @param ui UI handler.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"     * @param storage Storage to save and load list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"        Event t \u003d new Event(desc, dateFrom, timeFrom, dateTo, timeTo);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"        ui.showBunny();","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"        ui.add(t, tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":44}},{"path":"src/main/java/duke/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":" * A command to add a ToDo to the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    private final String desc;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"    AddToDoCommand(String desc) {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"     * @param ui UI handler.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"     * @param storage Storage to save and load list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"        ToDo t \u003d new ToDo(desc);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"        ui.showBunny();","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"        ui.add(t, tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":35}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":" * A command to quit the Duke program.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"    public boolean isBye() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"        return true;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"     * @param ui UI handler.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"     * @param storage Storage to save and load list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"        ui.sayBye();","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":32}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":" * An abstract class to represent the Commands Duke can execute.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":" * The execution of a Command is displayed to the user with the UI handler,","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":" * and any changes made to the TaskList as a result of the Command is saved.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"    public boolean isBye() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":20}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import duke.exception.DukeInvalidArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":" * A command to delete a task from the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"    private final int num;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    DeleteCommand(int num) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"     * @param ui UI handler.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"     * @param storage Storage to save and load list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"        if (num \u003c\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"            throw new DukeInvalidArgumentException(\"Huh? Your task number needs to be greater than zero!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"        } else if (num \u003e tasks.size()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"            throw new DukeInvalidArgumentException(\"Huh? You don\u0027t even have that many items on your list!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"            Task t \u003d tasks.delete(num - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"            ui.showBunny();","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"            ui.delete(t, tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":43}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":" * A command that finds tasks containing a given keword.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    private final String keyword;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"    FindCommand(String keyword) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"     * Executes the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"     * @param ui UI handler.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"     * @param storage Storage to save and load list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"        ui.showBunny();","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"        ui.find(keyword, tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"valerietanhx":28}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":" * A command that lists the tasks in the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"     * @param ui UI handler.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"     * @param storage Storage to save and load list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"        ui.showBunny();","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"        ui.list(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":23}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import duke.exception.DukeInvalidArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":" * A command that marks a task as completed.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"    private final int num;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    MarkCommand(int num) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"     * @param ui UI handler.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"     * @param storage Storage to save and load list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"        if (num \u003c\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"            throw new DukeInvalidArgumentException(\"Huh? Your task number needs to be greater than zero!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"        } else if (num \u003e tasks.size()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"            throw new DukeInvalidArgumentException(\"Huh? You don\u0027t even have that many items on your list!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"            Task t \u003d tasks.mark(num - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"            ui.showBunny();","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"            ui.mark(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":43}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import duke.exception.DukeInvalidCommandException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":" * A class that deals with making sense of user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":" * It creates the appropriate Command object accordingly.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    public static Command parse(String line) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"        String[] chunked \u003d line.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"        String command \u003d chunked[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"            if (chunked.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"                throw new DukeInvalidCommandException();","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"                return new MarkCommand(Integer.parseInt(chunked[1]));","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"            if (chunked.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"                throw new DukeInvalidCommandException();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"                return new UnmarkCommand(Integer.parseInt(chunked[1]));","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"            if (chunked.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"                throw new DukeInvalidCommandException();","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"                return new DeleteCommand(Integer.parseInt(chunked[1]));","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"            if (chunked.length !\u003d 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"                throw new DukeInvalidCommandException();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"                return new FindCommand(chunked[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"            String rest \u003d line.substring(4).trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"            if (rest.isBlank()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"                throw new DukeInvalidCommandException();","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"                return new AddToDoCommand(rest);","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"            String rest \u003d line.substring(8).trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"            String pattern \u003d \".+ /by [0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9] [0-9][0-9][0-9][0-9]\";","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"            if (!rest.matches(pattern)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"                throw new DukeInvalidCommandException();","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"valerietanhx"},"content":"            String desc \u003d rest.substring(0, rest.indexOf(\" /by\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"valerietanhx"},"content":"            String[] by \u003d rest.substring(rest.indexOf(\"/by\")).split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"valerietanhx"},"content":"            String date \u003d by[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"valerietanhx"},"content":"            String time \u003d by[2];","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"valerietanhx"},"content":"            return new AddDeadlineCommand(desc, date, time);","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"valerietanhx"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"valerietanhx"},"content":"            String rest \u003d line.substring(5).trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"valerietanhx"},"content":"            String pattern \u003d \".+ /from [0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9] [0-9][0-9][0-9][0-9]\"","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"valerietanhx"},"content":"                    + \" /to [0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9] [0-9][0-9][0-9][0-9]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"valerietanhx"},"content":"            if (!rest.matches(pattern)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"valerietanhx"},"content":"                throw new DukeInvalidCommandException();","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"valerietanhx"},"content":"            String desc \u003d rest.substring(0, rest.indexOf(\" /from\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"valerietanhx"},"content":"            String[] fromTo \u003d rest.substring(rest.indexOf(\"/from\")).split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"valerietanhx"},"content":"            String dateFrom \u003d fromTo[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"valerietanhx"},"content":"            String timeFrom \u003d fromTo[2];","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"valerietanhx"},"content":"            String dateTo \u003d fromTo[4];","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"valerietanhx"},"content":"            String timeTo \u003d fromTo[5];","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"valerietanhx"},"content":"            return new AddEventCommand(desc, dateFrom, timeFrom, dateTo, timeTo);","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"valerietanhx"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"valerietanhx"},"content":"            throw new DukeInvalidCommandException(\"Huh? Sorry I don\u0027t know what this means :(\");","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":87}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import duke.exception.DukeInvalidArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":" * A command that unmarks a task as completed,","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":" * i.e. it is marked as uncompleted.","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    private final int num;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"    UnmarkCommand(int num) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"     * @param ui UI handler.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"     * @param storage Storage to save and load list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"        if (num \u003c\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"            throw new DukeInvalidArgumentException(\"Huh? Your task number needs to be greater than zero!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"        } else if (num \u003e tasks.size()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"            throw new DukeInvalidArgumentException(\"Huh? You don\u0027t even have that many items on your list!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"            Task t \u003d tasks.unmark(num - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"            ui.showBunny();","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"            ui.unmark(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":44}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.exception;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":" * A custom exception for the Duke program.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"valerietanhx":10}},{"path":"src/main/java/duke/exception/DukeInvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.exception;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":" * A custom exception for the Duke program.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":" * It denotes an invalid argument from the user,","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":" * e.g. a date or task number that does not exist.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"public class DukeInvalidArgumentException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"    public DukeInvalidArgumentException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"valerietanhx":14}},{"path":"src/main/java/duke/exception/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.exception;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":" * A custom exception for the Duke program.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":" * It denotes an invalid command from the user,","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":" * e.g. wrong format, invalid keyword.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"public class DukeInvalidCommandException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"    public DukeInvalidCommandException() {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"        super(\"Hmm, your command format\u0027s a little off!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"    public DukeInvalidCommandException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"valerietanhx":17}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":" * A class that deals with loading from and saving tasks to the user\u0027s hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":" * If the directory data/tasks.txt does not exist, it automatically creates it.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":" * The task list is saved into the directory after every change.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":" * When Duke is started up again, it reads from the directory.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"    private final String dirPath;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"     * Creates a new Storage object.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"     * @param dirPath Directory path.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"    public Storage(String dirPath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"        this.dirPath \u003d dirPath;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"        this.filePath \u003d dirPath + \"tasks.txt\";","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"     * Loads tasks.txt when Duke is started up if the file exists.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"     * @return A list of tasks to be converted into a TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"            String[] line \u003d sc.nextLine().split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"            if (line[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"                ToDo t \u003d new ToDo(sc.nextLine());","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"                if (line[1].equals(\"true\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"                    t.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"                tasks.add(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"            } else if (line[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"                Deadline d \u003d new Deadline(sc.nextLine(), line[2], line[3]);","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"valerietanhx"},"content":"                if (line[1].equals(\"true\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"valerietanhx"},"content":"                    d.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"valerietanhx"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"valerietanhx"},"content":"                tasks.add(d);","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"valerietanhx"},"content":"            } else { // event","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"valerietanhx"},"content":"                Event e \u003d new Event(sc.nextLine(), line[2], line[3], line[4], line[5]);","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"valerietanhx"},"content":"                if (line[1].equals(\"true\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"valerietanhx"},"content":"                    e.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"valerietanhx"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"valerietanhx"},"content":"                tasks.add(e);","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"valerietanhx"},"content":"        return tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"valerietanhx"},"content":"    void writeToFile(String text) throws IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"valerietanhx"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"valerietanhx"},"content":"        fw.write(text);","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"valerietanhx"},"content":"        fw.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"valerietanhx"},"content":"     * Saves the list of tasks into the data/tasks.txt directory.","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"valerietanhx"},"content":"     * Creates data/tasks.txt if it does not exist.","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"valerietanhx"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"valerietanhx"},"content":"    public void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"valerietanhx"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"valerietanhx"},"content":"        File dir \u003d new File(dirPath);","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"valerietanhx"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"valerietanhx"},"content":"            dir.mkdir();","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"valerietanhx"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"valerietanhx"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"valerietanhx"},"content":"        writeToFile(tasks.generateTaskDetails());","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":97}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":" * A task with a deadline (date and time).","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"    protected String ddmmyyyy;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"    protected String hhmm;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    protected LocalDateTime datetime;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"     * Creates a new Deadline object.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"     * @param desc A description of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"     * @param ddmmyyyy The date the task is due.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"     * @param hhmm The time the task is due.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    public Deadline(String desc, String ddmmyyyy, String hhmm) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"        super(desc);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"        this.ddmmyyyy \u003d ddmmyyyy;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"        this.hhmm \u003d hhmm;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"        String[] date \u003d ddmmyyyy.split(\"/\");","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"        this.datetime \u003d LocalDateTime.of(Integer.parseInt(date[2]),","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"                Integer.parseInt(date[1]), Integer.parseInt(date[0]),","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"                Integer.parseInt(hhmm.substring(0, 2)), Integer.parseInt(hhmm.substring(2)));","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s %s)\", dateFormatter.format(datetime), timeFormatter.format(datetime));","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"     * Gets the deadline details to save in data/tasks.txt.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"     * @return Deadline details.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"    public String getDetailsToSave() {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"        return String.format(\"deadline %s %s %s\\n%s\", isDone, ddmmyyyy, hhmm, desc);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"valerietanhx":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":" * A task with start and end dates and times.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"    protected String ddmmyyyyFrom;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"    protected String hhmmFrom;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    protected LocalDateTime datetimeFrom;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    protected String ddmmyyyyTo;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    protected String hhmmTo;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"    protected LocalDateTime datetimeTo;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"     * Creates a new Event object.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"     * @param desc A description of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"     * @param ddmmyyyyFrom The date the event starts.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"     * @param hhmmFrom The time the event starts.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"     * @param ddmmyyyyTo The date the event ends.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"     * @param hhmmTo The time the event ends.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"    public Event(String desc, String ddmmyyyyFrom, String hhmmFrom, String ddmmyyyyTo, String hhmmTo) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"        super(desc);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"        this.ddmmyyyyFrom \u003d ddmmyyyyFrom;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"        this.hhmmFrom \u003d hhmmFrom;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"        this.ddmmyyyyTo \u003d ddmmyyyyTo;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"        this.hhmmTo \u003d hhmmTo;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"        String[] dateFrom \u003d ddmmyyyyFrom.split(\"/\");","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"        String[] dateTo \u003d ddmmyyyyTo.split(\"/\");","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"        this.datetimeFrom \u003d LocalDateTime.of(Integer.parseInt(dateFrom[2]),","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"                Integer.parseInt(dateFrom[1]), Integer.parseInt(dateFrom[0]),","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"                Integer.parseInt(hhmmFrom.substring(0, 2)), Integer.parseInt(hhmmFrom.substring(2)));","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"        this.datetimeTo \u003d LocalDateTime.of(Integer.parseInt(dateTo[2]),","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"                Integer.parseInt(dateTo[1]), Integer.parseInt(dateTo[0]),","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"                Integer.parseInt(hhmmTo.substring(0, 2)), Integer.parseInt(hhmmTo.substring(2)));","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s %s to: %s %s)\",","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"                dateFormatter.format(datetimeFrom), timeFormatter.format(datetimeFrom),","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"                dateFormatter.format(datetimeTo), timeFormatter.format(datetimeTo));","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"     * Gets the event details to save in data/tasks.txt.","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"     * @return Event details.","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"    public String getDetailsToSave() {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"        return String.format(\"event %s %s %s %s %s\\n%s\", isDone, ddmmyyyyFrom, hhmmFrom, ddmmyyyyTo, hhmmTo, desc);","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"valerietanhx":57}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":" * A generic task object.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"    protected String desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"    protected DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    protected DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"     * Creates a new Task object.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"     * @param desc A description of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"    public String getDesc() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"        return desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"        return isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), desc);","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"     * Gets the task details to save in data/tasks.txt.","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"     * @return Task details.","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"    public String getDetailsToSave() { // dummy","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"        return String.format(\"task %s\", desc);","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"valerietanhx":53}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import duke.exception.DukeInvalidArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":" * A list that stores Tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"public class TaskList {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"     * Generates the details of all tasks in the list to save in data/tasks.txt.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"     * @return Details of all tasks in the list.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"    public String generateTaskDetails() {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"            str +\u003d t.getDetailsToSave();","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"            if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"                str +\u003d \u0027\\n\u0027;","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"        return str;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"    public Task get(int num) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"        return tasks.get(num);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"    public int size() {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"     * @param num The task number.","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"     * @return The task that has been marked as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"    public Task mark(int num) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"        Task t \u003d tasks.get(num);","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"        if (t.isDone()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"            throw new DukeInvalidArgumentException(\"Huh? You\u0027ve already done this task!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"valerietanhx"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"valerietanhx"},"content":"            t.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"valerietanhx"},"content":"        return t;","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"valerietanhx"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"valerietanhx"},"content":"     * @param num The task number.","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"valerietanhx"},"content":"     * @return The task that has been marked as undone.","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"valerietanhx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"valerietanhx"},"content":"    public Task unmark(int num) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"valerietanhx"},"content":"        Task t \u003d tasks.get(num);","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"valerietanhx"},"content":"        if (!t.isDone()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"valerietanhx"},"content":"            throw new DukeInvalidArgumentException(\"Huh? You haven\u0027t even done this task!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"valerietanhx"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"valerietanhx"},"content":"            t.unmark();","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"valerietanhx"},"content":"        return t;","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"valerietanhx"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"valerietanhx"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"valerietanhx"},"content":"     * Deletes a task.","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"valerietanhx"},"content":"     * @param num The task number.","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"valerietanhx"},"content":"     * @return The task that has been deleted.","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"valerietanhx"},"content":"    public Task delete(int num) {","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"valerietanhx"},"content":"        Task t \u003d tasks.get(num - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"valerietanhx"},"content":"        tasks.remove(num - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"valerietanhx"},"content":"        return t;","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"valerietanhx"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"valerietanhx"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":97}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":" * A thing to do.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"        super(desc);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"     * Gets the ToDo details to save in data/tasks.txt.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"     * @return ToDo details.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    public String getDetailsToSave() {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"        return String.format(\"todo %s\\n%s\", isDone, desc);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"valerietanhx":24}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":" * A class that deals with interactions with the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":" * It accepts user input and displays text on the screen.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"public class Ui {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    private boolean firstTime \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"    public void setFirstTime(boolean b) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"        firstTime \u003d b;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(\"૮₍ ˃ ᵕ ˂ ₎ა\");","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(\"Hello! I\u0027m Duke, your favourite pink bunny.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"        if (firstTime) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"I don\u0027t seem to know anything about you! First time meeting? :D\");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"I\u0027m so happy we\u0027re meeting again!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"     * Displays a bunny divider.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"    public void showBunny() {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(\"(\\\\ (\\\\\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"                + \"(„• ֊ •„) ♡\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"                + \"━O━O━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\");","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"     * Displays the error message.","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"     * @param err Error.","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"    public void showError(Exception err) {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"        String msg \u003d err.getMessage();","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"        if (msg.equals(\"Hmm, your command format\u0027s a little off!\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"Here are the appropriate formats to use:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"todo DESC\");","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"deadline DESC /by DD/MM/YYYY HHMM\");","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"event DESC /from DD/MM/YYYY HHMM /to DD/MM/YYYY HHMM\");","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"list\");","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"find KEYWORD\");","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"mark TASK_NUM\");","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"unmark TASK_NUM\");","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"delete TASK_NUM\");","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"bye\");","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"valerietanhx"},"content":"    public void sayBye() {","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(\"Bye bye :( Hope to see you again soon!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"valerietanhx"},"content":"     * Tells the user that a task has been marked done.","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"valerietanhx"},"content":"     * @param t The task that has been marked done.","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"valerietanhx"},"content":"    public void mark(Task t) {","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(\"Okie! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"valerietanhx"},"content":"     * Tells the user that a task has been marked undone.","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"valerietanhx"},"content":"     * @param t The task that has been marked done.","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"valerietanhx"},"content":"    public void unmark(Task t) {","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(\"Okie! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"valerietanhx"},"content":"     * Tells the user that a task has been added.","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"valerietanhx"},"content":"     * @param t The task that has been added.","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"valerietanhx"},"content":"    public void add(Task t, TaskList tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(\"Alright! I\u0027ve added this task:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"valerietanhx"},"content":"        showTaskListStatus(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"valerietanhx"},"content":"     * Tells the user that a task has been deleted.","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"valerietanhx"},"content":"     * @param t The task that has been deleted.","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"valerietanhx"},"content":"    public void delete(Task t, TaskList tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(\"Okie! I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"valerietanhx"},"content":"        showTaskListStatus(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"valerietanhx"},"content":"    void showTaskListStatus(TaskList tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"valerietanhx"},"content":"        if (tasks.size() \u003d\u003d 1) { // grammar","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"Now you have 1 task on your list.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"valerietanhx"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(String.format(\"Now you have %s tasks on your list.\", tasks.size()));","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"valerietanhx"},"content":"     * Lists the tasks in the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"valerietanhx"},"content":"    public void list(TaskList tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"valerietanhx"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"Your list is currently empty!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"valerietanhx"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"valerietanhx"},"content":"            System.out.println(\"Here are all the things on your list!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"valerietanhx"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"valerietanhx"},"content":"                Task t \u003d tasks.get(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"valerietanhx"},"content":"                System.out.println(String.format(\"%s. %s\", i + 1, t));","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"valerietanhx"},"content":"     * Finds tasks in the list of tasks that contain the given keyword.","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"valerietanhx"},"content":"     * @param keyword Keyword to find in list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"valerietanhx"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"valerietanhx"},"content":"    public void find(String keyword, TaskList tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"valerietanhx"},"content":"        System.out.println(\"Here are all the things on your list with this keyword!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"valerietanhx"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"valerietanhx"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"valerietanhx"},"content":"            if (t.getDesc().contains(keyword)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"valerietanhx"},"content":"                System.out.println(String.format(\"%s. %s\", i + 1, t));","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"valerietanhx":147}},{"path":"src/test/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"    private Deadline deadline \u003d new Deadline(\"return book\", \"29/01/2023\", \"2300\");","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"    public void addDeadline(){","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"        assertEquals(\"[D][ ] return book (by: 29 January 2023 23:00)\", deadline.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    public void markDeadline(){","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"        deadline.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"        assertEquals(\"[D][X] return book (by: 29 January 2023 23:00)\", deadline.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"    public void unmarkDeadline(){","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"        deadline.unmark();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"        assertEquals(\"[D][ ] return book (by: 29 January 2023 23:00)\", deadline.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"    public void saveDeadline(){","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"        assertEquals(\"deadline false 29/01/2023 2300\\nreturn book\", deadline.getDetailsToSave());","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"valerietanhx":30}},{"path":"src/test/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"public class EventTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"    private Event event \u003d new Event(\"project meeting\", \"29/01/2023\", \"1800\", \"29/01/2023\", \"1900\");","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"    public void addEvent(){","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"        assertEquals(\"[E][ ] project meeting (from: 29 January 2023 18:00 to: 29 January 2023 19:00)\", event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    public void markEvent(){","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"        event.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"        assertEquals(\"[E][X] project meeting (from: 29 January 2023 18:00 to: 29 January 2023 19:00)\", event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"    public void unmarkEvent(){","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"        event.unmark();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"        assertEquals(\"[E][ ] project meeting (from: 29 January 2023 18:00 to: 29 January 2023 19:00)\", event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"    public void saveEvent(){","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"        assertEquals(\"event false 29/01/2023 1800 29/01/2023 1900\\nproject meeting\", event.getDetailsToSave());","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"valerietanhx":30}},{"path":"src/test/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"    private ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"    public void addToDo(){","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    public void markToDo(){","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"        todo.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"        assertEquals(\"[T][X] read book\", todo.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"    public void unmarkToDo(){","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"        todo.unmark();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"    public void saveToDo(){","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"        assertEquals(\"todo false\\nread book\", todo.getDetailsToSave());","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"valerietanhx":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"deadline return book /by 25/01/2023 1800","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"event project meeting /from 25/01/2023 1700 /to 25/01/2023 1800","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"event presentation /from 14/02/2023 1200","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"event presentation /from 14022023 1200 /to 14022023 1400","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"valerietanhx":8}}]
