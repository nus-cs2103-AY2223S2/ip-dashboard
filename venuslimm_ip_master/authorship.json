[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":" * Represents a Deadline, which is a type of Task that has to be done before s specific date/time.","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"    protected String deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"        super(description.split(\"/by\")[0]);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"            this.deadline \u003d description.split(\"/by\")[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"â˜¹ I\u0027m sorry, but Fake Duke doesn\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"     * Returns the String representation of a Deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"     * @return  String representation of a Deadline in this format: [type][\u003cstatus\u003e] \u003cdescription\u003e (by: \u003cdeadline\u003e).","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"[D][%c] %s(by:%s)\", this.getStatusIcon(), this.description, this.deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"import java.util.*;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":" * Represents the main program for Fake Duke the chat bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"    private static String horizontalLine \u003d \"________________________________________________________________\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    private static enum Action {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"        todo,","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"        deadline,","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"        event,","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"        list,","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"        mark,","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"        unmark,","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        delete,","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"        bye;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        greeting();","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        while(true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"                if (printMenu(input)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"            } catch (DukeException | NoSuchElementException | IllegalArgumentException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"     * Prints out the greeting for Fake Duke.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"    private static void greeting() {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"        String logo \u003d \"  _____     _       _  __  U _____ u      ____     _   _    _  __  U _____ u \\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"                + \" |\\\" ___|U  /\\\"\\\\  u  |\\\"|/ /  \\\\| ___\\\"|/     |  _\\\"\\\\ U |\\\"|u| |  |\\\"|/ /  \\\\| ___\\\"|/ \\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"                + \"U| |_  u \\\\/ _ \\\\/   | \u0027 /    |  _|\\\"      /| | | | \\\\| |\\\\| |  | \u0027 /    |  _|\\\"   \\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"                + \"\\\\|  _|/  / ___ \\\\ U/| . \\\\\\\\u  | |___      U| |_| |\\\\ | |_| |U/| . \\\\\\\\u  | |___   \\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"                + \" |_|    /_/   \\\\_\\\\  |_|\\\\_\\\\   |_____|      |____/ u\u003c\u003c\\\\___/   |_|\\\\_\\\\   |_____|  \\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"                + \" )(\\\\\\\\,-  \\\\\\\\    \u003e\u003e,-,\u003e\u003e \\\\\\\\,-.\u003c\u003c   \u003e\u003e       |||_  (__) )(  ,-,\u003e\u003e \\\\\\\\,-.\u003c\u003c   \u003e\u003e  \\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"                + \"(__)(_/ (__)  (__)\\\\.)   (_/(__) (__)     (__)_)     (__)  \\\\.)   (_/(__) (__) \\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"        System.out.println(horizontalLine","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"                + \"Hello!~ I\u0027m the one and only\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"                + logo","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"                + horizontalLine);","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"     * Prints a menu that consists of these features:","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"     * - \"todo\": Adds todo task,","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"     * - \"deadline\": Adds deadline task,","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"     * - \"event\": Adds event task,","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"     * - \"list\": Displays the list of text entered by user,","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"     * - \"mark\": Marks a task as done,","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"     * - \"unmark\": Unmarks a task as undone,","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"     * - \"delete\": Deletes indicated task,","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"     * - \"bye\": Exits program,","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"     * - Enters any other String of invalid syntax: Rejected.","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"     * @param   input   User input for the program menu.","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"     * @return  Status whether the program should exit or not.","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"    private static boolean printMenu(String input) throws DukeException, NoSuchElementException {","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"        boolean exitStatus \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"            Action action \u003d Action.valueOf(splitInput[0]);","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"            switch (action) {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"            case todo:","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"                if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"venuslimm"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"venuslimm"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"venuslimm"},"content":"                addTodo(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"venuslimm"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"venuslimm"},"content":"            case deadline:","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"venuslimm"},"content":"                if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"venuslimm"},"content":"                    throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"venuslimm"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"venuslimm"},"content":"                addDeadline(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"venuslimm"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"venuslimm"},"content":"            case event:","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"venuslimm"},"content":"                if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"venuslimm"},"content":"                    throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"venuslimm"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"venuslimm"},"content":"                addEvent(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"venuslimm"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"venuslimm"},"content":"            case list:","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"venuslimm"},"content":"                list();","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"venuslimm"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"venuslimm"},"content":"            case mark:","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"venuslimm"},"content":"                if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"venuslimm"},"content":"                    throw new DukeException(\"The task index cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"venuslimm"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"venuslimm"},"content":"                markTask(splitInput[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"venuslimm"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"venuslimm"},"content":"            case unmark:","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"venuslimm"},"content":"                if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"venuslimm"},"content":"                    throw new DukeException(\"The task index cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"venuslimm"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"venuslimm"},"content":"                unmarkTask(splitInput[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"venuslimm"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"venuslimm"},"content":"            case delete:","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"venuslimm"},"content":"                if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"venuslimm"},"content":"                    throw new DukeException(\"The task index cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"venuslimm"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"venuslimm"},"content":"                deleteTask(splitInput[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"venuslimm"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"venuslimm"},"content":"            case bye:","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"venuslimm"},"content":"                exit();","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"venuslimm"},"content":"                exitStatus \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"venuslimm"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"venuslimm"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"â˜¹ I\u0027m sorry, but Fake Duke doesn\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"venuslimm"},"content":"        return exitStatus;","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"venuslimm"},"content":"     * Handles the adding of todo tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"venuslimm"},"content":"     * @param   taskDesc    Description of task.","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"venuslimm"},"content":"    private static void addTodo(String taskDesc) {","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"venuslimm"},"content":"        Todo todo \u003d new Todo(taskDesc);","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"venuslimm"},"content":"        addTask(todo);","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"venuslimm"},"content":"     * Handles the adding of deadline tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"venuslimm"},"content":"     * @param   taskDesc    Description of task.","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"venuslimm"},"content":"    private static void addDeadline(String taskDesc) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"venuslimm"},"content":"        Deadline deadline \u003d new Deadline(taskDesc);","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"venuslimm"},"content":"        addTask(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"venuslimm"},"content":"     * Handles the adding of event tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"venuslimm"},"content":"     * @param   taskDesc    Description of task.","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"venuslimm"},"content":"    private static void addEvent(String taskDesc) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"venuslimm"},"content":"        Event event \u003d new Event(taskDesc);","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"venuslimm"},"content":"        addTask(event);","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"venuslimm"},"content":"     * Handles the adding of any tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"venuslimm"},"content":"     * @param   task    Task to be added.","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"venuslimm"},"content":"    private static void addTask(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"venuslimm"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"venuslimm"},"content":"        System.out.println(horizontalLine","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"venuslimm"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"venuslimm"},"content":"                + task.toString()","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"venuslimm"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"venuslimm"},"content":"                + taskList.size()","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"venuslimm"},"content":"                + \" tasks in the list.\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"venuslimm"},"content":"                + horizontalLine);","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":175,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":176,"author":{"gitId":"venuslimm"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":178,"author":{"gitId":"venuslimm"},"content":"    private static void list() {","lastModifiedDate":"2023-01-18"},{"lineNumber":179,"author":{"gitId":"venuslimm"},"content":"        System.out.println(horizontalLine","lastModifiedDate":"2023-01-18"},{"lineNumber":180,"author":{"gitId":"venuslimm"},"content":"                + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":181,"author":{"gitId":"venuslimm"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":182,"author":{"gitId":"venuslimm"},"content":"            System.out.println(i + \".\" + taskList.get(i - 1).toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":184,"author":{"gitId":"venuslimm"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-18"},{"lineNumber":185,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":187,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":188,"author":{"gitId":"venuslimm"},"content":"     * Marks task as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":189,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"venuslimm"},"content":"     * @param   strIdx  Index of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":191,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":192,"author":{"gitId":"venuslimm"},"content":"    private static void markTask(String strIdx) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":193,"author":{"gitId":"venuslimm"},"content":"        int idx \u003d Integer.parseInt(strIdx);","lastModifiedDate":"2023-01-18"},{"lineNumber":194,"author":{"gitId":"venuslimm"},"content":"        checkIdx(idx);","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"venuslimm"},"content":"        Task task \u003d taskList.get(idx - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":196,"author":{"gitId":"venuslimm"},"content":"        task.mark();","lastModifiedDate":"2023-01-25"},{"lineNumber":197,"author":{"gitId":"venuslimm"},"content":"        System.out.println(horizontalLine","lastModifiedDate":"2023-01-19"},{"lineNumber":198,"author":{"gitId":"venuslimm"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":199,"author":{"gitId":"venuslimm"},"content":"                + task.toString()","lastModifiedDate":"2023-01-25"},{"lineNumber":200,"author":{"gitId":"venuslimm"},"content":"                + \"\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":201,"author":{"gitId":"venuslimm"},"content":"                + horizontalLine);","lastModifiedDate":"2023-01-25"},{"lineNumber":202,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":203,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":204,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":205,"author":{"gitId":"venuslimm"},"content":"     * Unmarks task as undone.","lastModifiedDate":"2023-01-25"},{"lineNumber":206,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":207,"author":{"gitId":"venuslimm"},"content":"     * @param   strIdx  Index of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":208,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":209,"author":{"gitId":"venuslimm"},"content":"    private static void unmarkTask(String strIdx) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":210,"author":{"gitId":"venuslimm"},"content":"        int idx \u003d Integer.parseInt(strIdx);","lastModifiedDate":"2023-01-18"},{"lineNumber":211,"author":{"gitId":"venuslimm"},"content":"        checkIdx(idx);","lastModifiedDate":"2023-01-19"},{"lineNumber":212,"author":{"gitId":"venuslimm"},"content":"        Task task \u003d taskList.get(idx - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":213,"author":{"gitId":"venuslimm"},"content":"        task.unmark();","lastModifiedDate":"2023-01-25"},{"lineNumber":214,"author":{"gitId":"venuslimm"},"content":"        System.out.println(horizontalLine","lastModifiedDate":"2023-01-19"},{"lineNumber":215,"author":{"gitId":"venuslimm"},"content":"                + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":216,"author":{"gitId":"venuslimm"},"content":"                + task.toString()","lastModifiedDate":"2023-01-25"},{"lineNumber":217,"author":{"gitId":"venuslimm"},"content":"                + \"\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":218,"author":{"gitId":"venuslimm"},"content":"                + horizontalLine);","lastModifiedDate":"2023-01-25"},{"lineNumber":219,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":220,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":221,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":222,"author":{"gitId":"venuslimm"},"content":"     * Deletes task given its index.","lastModifiedDate":"2023-01-25"},{"lineNumber":223,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":224,"author":{"gitId":"venuslimm"},"content":"     * @param   strIdx  Index of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":225,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":226,"author":{"gitId":"venuslimm"},"content":"    private static void deleteTask(String strIdx) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":227,"author":{"gitId":"venuslimm"},"content":"        int idx \u003d Integer.parseInt(strIdx);","lastModifiedDate":"2023-01-19"},{"lineNumber":228,"author":{"gitId":"venuslimm"},"content":"        checkIdx(idx);","lastModifiedDate":"2023-01-19"},{"lineNumber":229,"author":{"gitId":"venuslimm"},"content":"        System.out.println(horizontalLine","lastModifiedDate":"2023-01-19"},{"lineNumber":230,"author":{"gitId":"venuslimm"},"content":"                + \"Noted. I\u0027ve removed this task:\"","lastModifiedDate":"2023-01-25"},{"lineNumber":231,"author":{"gitId":"venuslimm"},"content":"                + taskList.get(idx - 1).toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":232,"author":{"gitId":"venuslimm"},"content":"        taskList.remove(idx - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":233,"author":{"gitId":"venuslimm"},"content":"        System.out.println(\"Now you have \"","lastModifiedDate":"2023-01-25"},{"lineNumber":234,"author":{"gitId":"venuslimm"},"content":"                + taskList.size()","lastModifiedDate":"2023-01-25"},{"lineNumber":235,"author":{"gitId":"venuslimm"},"content":"                + \" tasks in the list.\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":236,"author":{"gitId":"venuslimm"},"content":"                + horizontalLine);","lastModifiedDate":"2023-01-19"},{"lineNumber":237,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":238,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":239,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":240,"author":{"gitId":"venuslimm"},"content":"     * Checks the task index given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":241,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":242,"author":{"gitId":"venuslimm"},"content":"     * @param   idx     Index of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":243,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":244,"author":{"gitId":"venuslimm"},"content":"    private static void checkIdx(int idx) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":245,"author":{"gitId":"venuslimm"},"content":"        if (idx - 1 \u003e taskList.size() || idx - 1 \u003c 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":246,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"Task index given is invalid :( Try again.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":247,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":248,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":249,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":250,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":251,"author":{"gitId":"venuslimm"},"content":"     * Prints out an exit message and exits the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":252,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":253,"author":{"gitId":"venuslimm"},"content":"    private static void exit() {","lastModifiedDate":"2023-01-19"},{"lineNumber":254,"author":{"gitId":"venuslimm"},"content":"        System.out.println(horizontalLine","lastModifiedDate":"2023-01-18"},{"lineNumber":255,"author":{"gitId":"venuslimm"},"content":"                + \"Hope I have been useful to you.\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":256,"author":{"gitId":"venuslimm"},"content":"                + \"See you again soon. Bye!~\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":257,"author":{"gitId":"venuslimm"},"content":"                + horizontalLine);","lastModifiedDate":"2023-01-18"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"venuslimm":254,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":" * Provides Duke class an Exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"    private static String horizontalLine \u003d \"________________________________________________________________\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"    public DukeException(String errMsg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"        super(horizontalLine + \"â˜¹ OOPS!!! \" + errMsg + \"\\n\" + horizontalLine);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":" * Represents an Event, which is a type of Task that starts at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"    protected String startDatetime;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"    protected String endDatetime;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"        super(description.split(\"/from\")[0]);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"            String datetimes \u003d description.split(\"/from\")[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"            this.startDatetime \u003d datetimes.split(\"/to\")[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"            this.endDatetime \u003d datetimes.split(\"/to\")[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"â˜¹ I\u0027m sorry, but Fake Duke doesn\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     * Returns the String representation of an Event.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     * @return  String representation of an Event in this format: [E][\u003cstatus\u003e] \u003cdescription\u003e (from: \u003cstart date/time\u003e","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"     * to: \u003cend date/time\u003e).","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"[E][%c] %s(from:%sto:%s)\", this.getStatusIcon(), this.description","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"                , this.startDatetime, this.endDatetime);","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":30}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":" * Represents a Task added by the user. It has a description attached to it and a isDone status.","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"     * Marks task as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    public void mark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"     * Unmarks task as undone.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"     * Marks done task with X.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    public char getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"        return (isDone ? \u0027X\u0027 : \u0027 \u0027);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"     * Returns the String representation of a Task.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"     * @return  String representation of a Task in this format: [\u003cstatus\u003e] \u003cdescription\u003e.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"[%c] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"venuslimm":43}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":" * Represents a Todo, which is a type of Task that has no date/time attached to it.","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"     * Returns the String representation of a Todo.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"     * @return  String representation of a Todo in this format: [T][status] description date/time.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"[T][%c] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"test","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":10}}]
