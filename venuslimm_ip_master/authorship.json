[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"# duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"venuslimm":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"            ui.showError(String.format(\"%sWill be creating a new task list instead~\\n\", e.getMessage()));","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"            } finally {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"venuslimm":45,"-":2}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"    private Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"        ui.showAdd(this.task, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":22}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"public class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    protected boolean isExit;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"        // Do nothing","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"        return this.isExit;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":18}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    private int idx;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    public DeleteCommand(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"        String taskString \u003d tasks.deleteTask(this.idx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"        ui.showDelete(taskString, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":21}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"        super.isExit \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"        ui.showExit();","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":14}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"        ui.showList(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":13}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    private int idx;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    public MarkCommand(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"        String taskString \u003d tasks.markTask(this.idx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"        ui.showMark(taskString, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":21}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    private int idx;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    public UnmarkCommand(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"        String taskString \u003d tasks.unmarkTask(this.idx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"        ui.showUnmark(taskString, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":21}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":" * Provides duke.duke class an Exception.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"    public DukeException(String errMsg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"        super(\"☹ OOPS!!! \" + errMsg + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.command.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    private enum Action {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"        todo,","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        deadline,","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"        event,","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"        list,","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"        mark,","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"        unmark,","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        delete,","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        bye","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    private enum TaskType {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"        T,","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        D,","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        E","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"     * Parses input data entered by user.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"     * @param   input   User input for the program menu.","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"     * @return  Status whether the program should exit or not.","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"    public static Command parse(String input) throws DukeException, NoSuchElementException {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"        Command c;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"            Action action \u003d Action.valueOf(splitInput[0]);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"            switch (action) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"                case todo:","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"                    if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"                        throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"                    Todo todo \u003d addTodo(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"                    c \u003d new AddCommand(todo);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"                case deadline:","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"                    if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"                        throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"                    Deadline deadline \u003d addDeadline(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"                    c \u003d new AddCommand(deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"                case event:","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"                    if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"                        throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"                    Event event \u003d addEvent(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"                    c \u003d new AddCommand(event);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"                case list:","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"                    c \u003d new ListCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"                case mark:","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"                    if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"                        throw new DukeException(\"The task index cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"                    int markIdx \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"                    c \u003d new MarkCommand(markIdx);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"                case unmark:","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"venuslimm"},"content":"                    if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"venuslimm"},"content":"                        throw new DukeException(\"The task index cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"venuslimm"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"venuslimm"},"content":"                    int unmarkIdx \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"venuslimm"},"content":"                    c \u003d new UnmarkCommand(unmarkIdx);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"venuslimm"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"venuslimm"},"content":"                case delete:","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"venuslimm"},"content":"                    if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"venuslimm"},"content":"                        throw new DukeException(\"The task index cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"venuslimm"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"venuslimm"},"content":"                    c \u003d new DeleteCommand(Integer.parseInt(splitInput[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"venuslimm"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"venuslimm"},"content":"                case bye:","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"venuslimm"},"content":"                    c \u003d new ExitCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"venuslimm"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"venuslimm"},"content":"                default:","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"venuslimm"},"content":"                    c \u003d new Command();","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"venuslimm"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"☹ I\u0027m sorry, but Fake duke.duke doesn\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"venuslimm"},"content":"        return c;","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"venuslimm"},"content":"     * Processes tasks from the list of tasks in file in the hard disk.","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"venuslimm"},"content":"     * @param input One task.","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"venuslimm"},"content":"     * @throws NoSuchElementException","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"venuslimm"},"content":"    public Task processTask(String input, int idx) throws DukeException, NoSuchElementException {","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"venuslimm"},"content":"        String[] splitInput \u003d input.split(\" ~ \");","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"venuslimm"},"content":"            TaskType taskType \u003d TaskType.valueOf(splitInput[0]);","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"venuslimm"},"content":"            switch (taskType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"venuslimm"},"content":"                case T:","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"venuslimm"},"content":"                    if (splitInput.length !\u003d 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"venuslimm"},"content":"                        throw new DukeException(\"duke.Todo task is of invalid format in the file.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"venuslimm"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"venuslimm"},"content":"                    Todo todo \u003d addTodo(splitInput[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"venuslimm"},"content":"                    return todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"venuslimm"},"content":"                case D:","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"venuslimm"},"content":"                    if (splitInput.length !\u003d 4) {","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"venuslimm"},"content":"                        throw new DukeException(\"duke.Deadline task is of invalid format in the file.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"venuslimm"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"venuslimm"},"content":"                    Deadline deadline \u003d addDeadline(String.format(\"%s /by %s\"","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"venuslimm"},"content":"                            , splitInput[2]","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"venuslimm"},"content":"                            , splitInput[3]));","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"venuslimm"},"content":"                    return deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"venuslimm"},"content":"                case E:","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"venuslimm"},"content":"                    if (splitInput.length !\u003d 5) {","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"venuslimm"},"content":"                        throw new DukeException(\"duke.Event task is of invalid format in the file.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"venuslimm"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"venuslimm"},"content":"                    Event event \u003d addEvent(String.format(\"%s /from %s /to %s\"","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"venuslimm"},"content":"                            , splitInput[2]","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"venuslimm"},"content":"                            , splitInput[3]","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"venuslimm"},"content":"                            , splitInput[4]));","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"venuslimm"},"content":"                    return event;","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"venuslimm"},"content":"            if (splitInput[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"venuslimm"},"content":"                new MarkCommand(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"venuslimm"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"☹ I\u0027m sorry, but Fake duke.duke doesn\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"venuslimm"},"content":"        return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"venuslimm"},"content":"     * Handles the adding of todo tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"venuslimm"},"content":"     * @param   taskDesc    Description of task.","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"venuslimm"},"content":"    private static Todo addTodo(String taskDesc) {","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"venuslimm"},"content":"        Todo todo \u003d new Todo(taskDesc);","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"venuslimm"},"content":"        return todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"venuslimm"},"content":"     * Handles the adding of deadline tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"venuslimm"},"content":"     * @param   taskDesc    Description of task.","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"venuslimm"},"content":"    private static Deadline addDeadline(String taskDesc) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"venuslimm"},"content":"        Deadline deadline \u003d new Deadline(taskDesc);","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"venuslimm"},"content":"        return deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"venuslimm"},"content":"     * Handles the adding of event tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"venuslimm"},"content":"     * @param   taskDesc    Description of task.","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"venuslimm"},"content":"    private static Event addEvent(String taskDesc) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"venuslimm"},"content":"        Event event \u003d new Event(taskDesc);","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"venuslimm"},"content":"        return event;","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":181}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"     * Reads file if exists. Create directory (if necessary) and file if the file do not exist.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"            int idx \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"                idx++;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"                Task task \u003d parser.processTask(s.nextLine(), idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"                tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"                throw new DukeException(\"Fake duke.duke can\u0027t create the file.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(String.format(\"Fake duke.duke can\u0027t find the file. I will create the file (%s) :D\", this.filePath));","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"    public void saveTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"                fw.write(tasks.getTask(i).getRawTask());","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":63}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":" * Represents a duke.Deadline, which is a type of duke.Task that has to be done before s specific date/time.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"        super(description.split(\" /by \")[0]);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"            this.deadline \u003d this.parseDatetime(description.split(\" /by \")[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"☹ I\u0027m sorry, but Fake duke.duke doesn\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"Invalid datetime format. Please use yyyy-mm-dd HH:mm (E.g. 2019-10-15 18:00).\");","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"     * Returns the String representation of a duke.Deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"     * @return  String representation of a duke.Deadline in this format: [type][\u003cstatus\u003e] \u003cdescription\u003e (by: \u003cdeadline\u003e).","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"[D][%c] %s (by: %s)\", this.getStatusIcon(), this.description, this.getStringDatetime(this.deadline));","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"    public String getRawTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"D ~ %d ~ %s ~ %s\\n\", isDone ? 1 : 0, this.description, dtf.format(this.deadline));","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":" * Represents an duke.Event, which is a type of duke.Task that starts at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    protected LocalDateTime startDatetime;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    protected LocalDateTime endDatetime;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"        super(description.split(\" /from \")[0]);","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"            String datetimes \u003d description.split(\" /from \")[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"            this.startDatetime \u003d parseDatetime(datetimes.split(\" /to \")[0]);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"            this.endDatetime \u003d parseDatetime(datetimes.split(\" /to \")[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"☹ I\u0027m sorry, but Fake duke.duke doesn\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"Invalid datetime format. Please use yyyy-mm-dd HH:mm (E.g. 2019-10-15 18:00).\");","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"     * Returns the String representation of an duke.Event.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"     * @return  String representation of an duke.Event in this format: [E][\u003cstatus\u003e] \u003cdescription\u003e (from: \u003cstart date/time\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"     * to: \u003cend date/time\u003e).","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"[E][%c] %s (from: %s to: %s)\", this.getStatusIcon(), this.description","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"                , this.getStringDatetime(this.startDatetime), this.getStringDatetime(this.endDatetime));","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"    public String getRawTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"E ~ %d ~ %s ~ %s ~ %s\\n\", isDone ? 1 : 0, this.description,","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"                dtf.format(this.startDatetime), dtf.format(this.endDatetime));","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":" * Represents a duke.Task added by the user. It has a description attached to it and a isDone status.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     * Marks task as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"    public void mark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"     * Unmarks task as undone.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"     * Marks done task with X.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"    public char getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"        return (isDone ? \u0027X\u0027 : \u0027 \u0027);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"     * Returns the String representation of a duke.Task.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"     * @return  String representation of a duke.Task in this format: [\u003cstatus\u003e] \u003cdescription\u003e.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"[%c] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"    public String getRawTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"T ~ %d ~ %s\\n\", isDone ? 1 : 0, this.description);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"    public LocalDateTime parseDatetime(String input) throws DateTimeParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"        LocalDateTime datetime \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"        return datetime;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"    public String getStringDatetime(LocalDateTime datetime) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"E dd-MM-yyyy HH:mma\");","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"        return datetime.format(formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"venuslimm":64}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":" * Contains the task list and the operations that can be performed on the tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    public Task getTask(int idx) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"            return taskList.get(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"Unable to get task.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"    public String deleteTask(int idx) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"            return this.taskList.remove(idx).toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"duke.Task index given is invalid :( Unable to delete.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"    public String markTask(int idx) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"        Task task \u003d this.getTask(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"        task.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"        return task.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"    public String unmarkTask(int idx) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"        Task task \u003d this.getTask(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"        task.unmark();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"        return task.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":52}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":" * Represents a duke.Todo, which is a type of duke.Task that has no date/time attached to it.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"     * Returns the String representation of a duke.Todo.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"     * @return  String representation of a duke.Todo in this format: [T][status] description date/time.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"[T][%c] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":20}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    public String showLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"        return \"________________________________________________________________\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"//            throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"        String command \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"//        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"//        } catch (NoSuchElementException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"//            throw new DukeException(\"No such element.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"//        }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"        return command;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"     * Prints out the greeting for Fake duke.duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        String logo \u003d \"  _____     _       _  __  U _____ u      ____     _   _    _  __  U _____ u \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"                + \" |\\\" ___|U  /\\\"\\\\  u  |\\\"|/ /  \\\\| ___\\\"|/     |  _\\\"\\\\ U |\\\"|u| |  |\\\"|/ /  \\\\| ___\\\"|/ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"                + \"U| |_  u \\\\/ _ \\\\/   | \u0027 /    |  _|\\\"      /| | | | \\\\| |\\\\| |  | \u0027 /    |  _|\\\"   \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"                + \"\\\\|  _|/  / ___ \\\\ U/| . \\\\\\\\u  | |___      U| |_| |\\\\ | |_| |U/| . \\\\\\\\u  | |___   \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"                + \" |_|    /_/   \\\\_\\\\  |_|\\\\_\\\\   |_____|      |____/ u\u003c\u003c\\\\___/   |_|\\\\_\\\\   |_____|  \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"                + \" )(\\\\\\\\,-  \\\\\\\\    \u003e\u003e,-,\u003e\u003e \\\\\\\\,-.\u003c\u003c   \u003e\u003e       |||_  (__) )(  ,-,\u003e\u003e \\\\\\\\,-.\u003c\u003c   \u003e\u003e  \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"                + \"(__)(_/ (__)  (__)\\\\.)   (_/(__) (__)     (__)_)     (__)  \\\\.)   (_/(__) (__) \\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"        System.out.println(this.showLine()","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"                + \"Hello!~ I\u0027m the one and only\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"                + logo","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"                + this.showLine());","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"    public void showAdd(Task task, TaskList taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"        System.out.println(this.showLine()","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"                + task.toString()","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"                + taskList.getSize()","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"                + \" tasks in the list.\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"                + this.showLine());","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"    public void showDelete(String taskString, TaskList taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"        System.out.println(this.showLine()","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"                + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"                + taskString","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"                + taskList.getSize()","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"                + \" tasks in the list.\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"                + this.showLine());","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"    public void showMark(String taskString, TaskList taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"        System.out.println(this.showLine()","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"                + taskString","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"                + \"\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"                + this.showLine());","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"    public void showUnmark(String taskString, TaskList taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"        System.out.println(this.showLine()","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"                + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"                + taskString","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"venuslimm"},"content":"                + \"\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"venuslimm"},"content":"                + this.showLine());","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"venuslimm"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"venuslimm"},"content":"    public void showList(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"venuslimm"},"content":"        System.out.println(this.showLine()","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"venuslimm"},"content":"                + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"venuslimm"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"venuslimm"},"content":"            System.out.println(i + \".\" + taskList.getTask(i - 1).toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"venuslimm"},"content":"        System.out.println(this.showLine());","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"venuslimm"},"content":"     * Prints out an exit message and exits the program.","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"venuslimm"},"content":"    public void showExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"venuslimm"},"content":"        System.out.println(this.showLine()","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"venuslimm"},"content":"                + \"Hope I have been useful to you.\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"venuslimm"},"content":"                + \"See you again soon. Bye!~\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"venuslimm"},"content":"                + this.showLine());","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"venuslimm"},"content":"    public void showError(String error) {","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"venuslimm"},"content":"        System.out.println(this.showLine() + error + this.showLine());","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":109}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"T ~ 0 ~ read book","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"T ~ 0 ~ read book","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"T ~ 0 ~ read book","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"D ~ 0 ~ return book ~ 2019-09-02 12:22","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"D ~ 0 ~ return book ~ 2019-09-02 12:22","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"D ~ 0 ~ return book ~ 2019-09-02 12:22","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"D ~ 0 ~ return book ~ 2019-09-02 12:22","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"deadline return book /by 2019-09-02 12:22","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"event project meeting /from 2019-09-02 12:22 /to 2019-09-02 12:22","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"mark 2","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"unmark 3","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"test","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"venuslimm":2,"-":19}}]
