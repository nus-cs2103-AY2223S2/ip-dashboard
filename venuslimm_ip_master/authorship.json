[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"# duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"venuslimm":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    String javaFxVersion \u003d \u002719\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"checkstyle {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"venuslimm":21,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":" * Main class for Fake Duke the chat bot.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"     * Constructor for Duke class","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"     * @param filePath File path of the local file for tasks storage.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"            System.out.println(e.getMessage() + \" Will be creating a new task list instead~\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    public Storage getStorage() {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"        return storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"        return tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"    public Ui getUi() {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"        return ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"venuslimm":41,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"public class Launcher {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"venuslimm":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"            stage.setTitle(\"Fake Duke\");","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"            stage.show();","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"venuslimm":34}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":" * Adds task when user input indicates add.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    private final Task TASK;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"        this.TASK \u003d task;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     * Adds task and updates the task list in the local storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"     * @param ui Ui object that handles all Ui actions.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"     * @param storage Storage object that handles all Storage actions.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception from the methods called in this method.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        tasks.addTask(this.TASK);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"        return ui.getAddOutput(this.TASK, tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":33}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":" * Skeleton class for all Commands.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"public class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    protected boolean isExit;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"        return \"You did not specify your command.\";","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"        return this.isExit;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":21}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":" * Deletes task from list of tasks when user input indicates delete.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    private final int TASK_INDEX;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"        this.TASK_INDEX \u003d taskIndex;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"     * Deletes task and updates the task list in the local storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     * @param ui Ui object that handles all Ui actions.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"     * @param storage Storage object that handles all Storage actions.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception from the methods called in this method.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"        String taskString \u003d tasks.deleteTask(this.TASK_INDEX - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        return ui.getDeleteOutput(taskString, tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":32}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":" * Exits duke main program when user input indicates bye.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"     * Exits from main program.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"     * @param ui Ui object that handles all Ui actions.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"     * @param storage Storage object that handles all Storage actions.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"        super.isExit \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"        return ui.getExitOutput();","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":23}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":" * Finds task when user input indicates find.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    private final String KEYWORD;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"        this.KEYWORD \u003d keyword;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"     * Finds task from the list of tasks using the keyword provided.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"     * @param ui Ui object that handles all Ui actions.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"     * @param storage Storage object that handles all Storage actions.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTask(this.KEYWORD);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        return ui.getFindOutput(foundTasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"venuslimm":32}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":" * Lists all the tasks when user input indicates list.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"     * Lists all the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"     * @param ui Ui object that handles all Ui actions.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"     * @param storage Storage object that handles all Storage actions.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception from the methods called in this method.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"        return ui.getListOutput(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":24}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":" * Marks task when user input indicates mark.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    private final int TASK_INDEX;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"        this.TASK_INDEX \u003d taskIndex;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"     * Marks task and updates the task list in the local storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     * @param ui Ui object that handles all Ui actions.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"     * @param storage Storage object that handles all Storage actions.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception from the methods called in this method.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"        String taskString \u003d tasks.markTask(this.TASK_INDEX - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        return ui.getMarkOutput(taskString);","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":32}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":" * Unmarks task when user input indicates unmark.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    private final int TASK_INDEX;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"        this.TASK_INDEX \u003d taskIndex;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"     * Unmarks task and updates the task list in the local storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     * @param ui Ui object that handles all Ui actions.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"     * @param storage Storage object that handles all Storage actions.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception from the methods called in this method.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"        String taskString \u003d tasks.unmarkTask(this.TASK_INDEX - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        return ui.getUnmarkOutput(taskString);","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":32}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.controller;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"    private void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"    public DialogBox getUserDialog() {","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"        return this;","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"    public DialogBox getDukeDialog() {","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"        this.flip();","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"        dialog.setStyle(\"-fx-border-color: black; -fx-border-radius: 5; -fx-label-padding: 5; -fx-background-color: D4C5E2;\");","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"        return this;","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"venuslimm":61}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.controller;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    private Button enterButton;","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/FakeDuke.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"                new DialogBox(new Ui().getWelcome(), dukeImage).getDukeDialog()","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"        );","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"     * Processes user input and prints out Duke response.","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"    private void processUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"            String response \u003d getResponse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"                    new DialogBox(input, userImage).getUserDialog(),","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"                    new DialogBox(response, dukeImage).getDukeDialog()","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"            );","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"                    new DialogBox(input, userImage).getUserDialog(),","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"                    new DialogBox(e.getMessage(), dukeImage).getDukeDialog()","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"            );","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"     * Generates Fake Duke\u0027s response for user.","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"     * @param input User input to Fake Duke.","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Exception thrown from Duke package methods.","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"    private String getResponse(String input) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"        String fullCommand \u003d duke.getUi().readCommand(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"        Command c \u003d new Parser().parse(fullCommand);","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"        if (c instanceof ExitCommand) {","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"venuslimm"},"content":"            Stage stage \u003d (Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"venuslimm"},"content":"            stage.close();","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"venuslimm"},"content":"        return c.execute(duke.getTasks(), duke.getUi(), duke.getStorage());","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"venuslimm":85}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":" * Provides duke class an Exception.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"    public DukeException(String errMsg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"        super(\"OOPS!!! \" + errMsg + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":" * Makes sense of the user command entered into Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    private enum Action {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        todo,","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"        deadline,","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"        event,","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        list,","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        mark,","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"        unmark,","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"        delete,","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"        find,","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        bye","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"    private enum TaskType {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"        T,","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"        D,","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"        E","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"     * Parses input data entered by user.","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"     * @param input User input for the program menu.","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"     * @return Command that user entered.","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if input format is invalid.","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"        String[] splitInputs \u003d input.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"        checkInputFormat(splitInputs.length, 0,","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"                \"Sorry, Fake Duke wants you to enter something.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"        Command c;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"        Action action;","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"            action \u003d Action.valueOf(splitInputs[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"//            return new ListCommand();","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"I\u0027m sorry, but Fake Duke doesn\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"        switch (action) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"        case todo:","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"            checkInputFormat(splitInputs.length, 2,","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"                    \"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"            Todo todo \u003d new Todo(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"            c \u003d new AddCommand(todo);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"        case deadline:","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"            checkInputFormat(splitInputs.length, 5,","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"                    \"Deadline must follow this format: deadline {description} /by {YYYY-MM-DD} {HH:MM}\");","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"            Deadline deadline \u003d new Deadline(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"            c \u003d new AddCommand(deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"        case event:","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"            checkInputFormat(splitInputs.length, 8,","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"                    \"Event must follow this format: event {description} /from {YYYY-MM-DD} {HH:MM} \"","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"venuslimm"},"content":"                    + \"/to {YYYY-MM-DD} {HH:MM}\");","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"venuslimm"},"content":"            Event event \u003d new Event(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"venuslimm"},"content":"            c \u003d new AddCommand(event);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"venuslimm"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"venuslimm"},"content":"        case list:","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"venuslimm"},"content":"            c \u003d new ListCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"venuslimm"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"venuslimm"},"content":"        case mark:","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"venuslimm"},"content":"            checkInputFormat(splitInputs.length, 2,","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"venuslimm"},"content":"                    \"The task index cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"venuslimm"},"content":"            int markIndex \u003d Integer.parseInt(splitInputs[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"venuslimm"},"content":"            c \u003d new MarkCommand(markIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"venuslimm"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"venuslimm"},"content":"        case unmark:","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"venuslimm"},"content":"            checkInputFormat(splitInputs.length, 2,","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"venuslimm"},"content":"                    \"The task index cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"venuslimm"},"content":"            int unmarkIndex \u003d Integer.parseInt(splitInputs[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"venuslimm"},"content":"            c \u003d new UnmarkCommand(unmarkIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"venuslimm"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"venuslimm"},"content":"        case delete:","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"venuslimm"},"content":"            checkInputFormat(splitInputs.length, 2, \"The task index cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"venuslimm"},"content":"            c \u003d new DeleteCommand(Integer.parseInt(splitInputs[1]));","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"venuslimm"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"venuslimm"},"content":"        case bye:","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"venuslimm"},"content":"            c \u003d new ExitCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"venuslimm"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"venuslimm"},"content":"        case find:","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"venuslimm"},"content":"            checkInputFormat(splitInputs.length, 2,","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"venuslimm"},"content":"                    \"You must include the keyword you wish to search.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"venuslimm"},"content":"            c \u003d new FindCommand(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"venuslimm"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"venuslimm"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"venuslimm"},"content":"            c \u003d new Command();","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"venuslimm"},"content":"        return c;","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"venuslimm"},"content":"     * Processes one task from the list of tasks in file in the local storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"venuslimm"},"content":"     * @param input One task to be processed.","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if input format is invalid.","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"venuslimm"},"content":"    public Task processTask(String input) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"venuslimm"},"content":"        String[] splitInputs \u003d input.split(\" ~ \");","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"venuslimm"},"content":"        TaskType taskType;","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"venuslimm"},"content":"            taskType \u003d TaskType.valueOf(splitInputs[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"venuslimm"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"I\u0027m sorry, but Fake Duke doesn\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"venuslimm"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"venuslimm"},"content":"        case T:","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"venuslimm"},"content":"            checkInputFormat(splitInputs.length, 3,","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"venuslimm"},"content":"                    \"Todo task is of invalid format in the file.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"venuslimm"},"content":"            return new Todo(splitInputs[2], splitInputs[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"venuslimm"},"content":"        case D:","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"venuslimm"},"content":"            checkInputFormat(splitInputs.length, 4,","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"venuslimm"},"content":"                    \"Deadline task is of invalid format in the file.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"venuslimm"},"content":"            return new Deadline(String.format(\"%s /by %s\", splitInputs[2], splitInputs[3]), splitInputs[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"venuslimm"},"content":"        case E:","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"venuslimm"},"content":"            checkInputFormat(splitInputs.length, 5,","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"venuslimm"},"content":"                    \"Event task is of invalid format in the file.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"venuslimm"},"content":"            return new Event(String.format(\"%s /from %s /to %s\", splitInputs[2], splitInputs[3],","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"venuslimm"},"content":"                    splitInputs[4]), splitInputs[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"venuslimm"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"venuslimm"},"content":"            return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"venuslimm"},"content":"     * Checks the format of the input entered by user or task in the local file.","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"venuslimm"},"content":"     * @param inputLength Length of the input entered by the user or task in the local file.","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"venuslimm"},"content":"     * @param minimumLength Valid minimum length of the input.","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"venuslimm"},"content":"     * @param errorMessage Error message to be printed on the program.","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if input length does not meet minimum length.","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"venuslimm"},"content":"    public static void checkInputFormat(int inputLength, int minimumLength, String errorMessage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"venuslimm"},"content":"        if (inputLength \u003c minimumLength) {","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"venuslimm"},"content":"     * Returns the valid format of the datetime of the Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"venuslimm"},"content":"     * Valid format: {yyyy-MM-dd HH:mm}","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"venuslimm"},"content":"     * @param input Datetime input provided by user.","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"venuslimm"},"content":"     * @return Datetime of Task in valid format.","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"venuslimm"},"content":"    public LocalDateTime parseDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2023-01-31"},{"lineNumber":175,"author":{"gitId":"venuslimm"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":176,"author":{"gitId":"venuslimm"},"content":"        return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":177,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":178}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    private final String FILEPATH;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    private final Parser PARSER \u003d new Parser();","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"    public Storage(String FILEPATH) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        this.FILEPATH \u003d FILEPATH;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"     * Reads file if exists.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"     * Create directory (if necessary) and file if the file do not exist.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"     * @return List of tasks that are loaded from local storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if file cannot be found locally or created.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        File f \u003d new File(this.FILEPATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"                Task task \u003d PARSER.processTask(s.nextLine());","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"                tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"                throw new DukeException(\"Fake Duke can\u0027t create the file.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(String.format(\"Fake Duke can\u0027t find the file. I have created the file (%s) :D\",","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"                    this.FILEPATH));","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"     * Saves tasks to local storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"     * @param tasks All the tasks that should be saved to local storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if task cannot be obtained to save to file.","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"    public void saveTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"            FileWriter fw \u003d new FileWriter(this.FILEPATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"                fw.write(tasks.getTask(i).getRawTask());","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":72}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":" * Represents a Deadline, which is a type of Task that has to be done before a specific datetime.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"     * Constructor for Deadline class that sets the description and deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if unable to set deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        super(description.split(\" /by \")[0]);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"        this.setDeadline(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"     * Constructor for Deadline class that sets the description, deadline, and status of deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if unable to set deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"    public Deadline(String description, String taskStatus) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"        super(description.split(\" /by \")[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"        this.setDeadline(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"        if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"            this.mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"     * Returns the String representation of a Deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"     * @return String representation of a Deadline in this format:","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"     *     [D][{status}] {description} (by: {deadline}).","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"[D][%c] %s (by: %s) %s\", this.getStatusIcon(), this.description,","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"                new Ui().getStringDateTime(this.deadline), super.urgentMessage(this.deadline));","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"    private void setDeadline(String description) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"            this.deadline \u003d new Parser().parseDateTime(description.split(\" /by \")[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"☹ I\u0027m sorry, but Fake Duke doesn\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"Invalid datetime format. Please use yyyy-mm-dd HH:mm (E.g. 2019-10-15 18:00).\");","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"     * Returns the raw String representation of a Deadline to be stored in the local file for storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"     * @return Raw String representation of a Task in this format: D ~ {status} ~ {description} ~ {deadline}.","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"    public String getRawTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"D ~ %d ~ %s ~ %s\\n\", isDone ? 1 : 0, this.description, dtf.format(this.deadline));","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":74}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":" * Represents an Event, which is a type of Task that starts at a specific datetime and ends at a specific datetime.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    protected LocalDateTime startDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    protected LocalDateTime endDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"     * Constructor for Event class that sets the description and event start and end date times.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if unable to set date times.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"        super(description.split(\" /from \")[0]);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        setEventDateTimes(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"     * Constructor for Event class that sets the description, event start and end date times, and event status.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if unable to set date times.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"    public Event(String description, String taskStatus) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"        super(description.split(\" /from \")[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"        setEventDateTimes(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"        if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"            this.mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"     * Returns the String representation of an Event.","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"     * @return String representation of an Event in this format:","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"     *     [E][{status}] {description} (from: {start datetime} to: {end datetime}).","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"[E][%c] %s (from: %s to: %s) %s\", this.getStatusIcon(), this.description,","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"                ui.getStringDateTime(this.startDateTime), ui.getStringDateTime(this.endDateTime),","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"                super.urgentMessage(this.startDateTime));","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"    private void setEventDateTimes(String description) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"            String dateTimes \u003d description.split(\" /from \")[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"            this.startDateTime \u003d parser.parseDateTime(dateTimes.split(\" /to \")[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"            this.endDateTime \u003d parser.parseDateTime(dateTimes.split(\" /to \")[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"☹ I\u0027m sorry, but Fake Duke doesn\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"Invalid datetime format. Please use yyyy-mm-dd HH:mm (E.g. 2019-10-15 18:00).\");","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"     * Returns the raw String representation of an Event to be stored in the local file for storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"     * @return Raw String representation of a Task in this format:","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"     *     E ~ {status} ~ {description} ~ {start datetime} ~ {end datetime}.","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"    public String getRawTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"E ~ %d ~ %s ~ %s ~ %s\\n\", isDone ? 1 : 0, this.description,","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"venuslimm"},"content":"                dtf.format(this.startDateTime), dtf.format(this.endDateTime));","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":83}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":" * Represents a task added by the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":" * It has a description attached to it and a isDone status.","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"     * Constructor for Task class, used to set description and status of task.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"     * Marks task as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    public void mark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"     * Unmarks task as undone.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"     * Returns X if task is marked done.","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"     * If task is unmarked, a space is returned.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"     * @return Character to indicate the status of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"    public char getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"        return (isDone) ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"        return this.description;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"     * Returns the String representation of a Task.","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"     * @return String representation of a Task in this format: [{status}] {description}.","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"[%c] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"     * Returns the raw String representation of a Task to be stored in the local file for storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"     * @return Raw String representation of a Task in this format: T ~ {status} ~ {description}.","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"    public String getRawTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"T ~ %d ~ %s\\n\", isDone ? 1 : 0, this.description);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"     * Returns warning message if the date time of the task is expired or expiring soon.","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"     * @param dateTime Date time of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"     * @return Warning message to be printed to user.","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"    public String urgentMessage(LocalDateTime dateTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"        int diff \u003d currentDateTime.compareTo(dateTime);","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"        if (diff \u003e 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"venuslimm"},"content":"            return \"!! TASK EXPIRED! !!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"venuslimm"},"content":"        } else if (diff \u003d\u003d -1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"venuslimm"},"content":"            return \"!! TASK EXPIRING SOON! !!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"venuslimm"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"venuslimm"},"content":"            return \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"venuslimm":87}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":" * Contains the task list and the operations that can be performed on the tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    private final ArrayList\u003cTask\u003e TASK_LIST;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"        this.TASK_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        this.TASK_LIST \u003d taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"        return this.TASK_LIST.size();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    public Task getTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"            return this.TASK_LIST.get(taskIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"Unable to get task.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"     * Adds given task into TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"     * @param task Task added by user.","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"        this.TASK_LIST.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"     * Deletes task from TaskList given index.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"     * @param taskIndex Index of task to be deleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"     * @return String representation of the deleted task.","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if the given task index is invalid.","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"    public String deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"            return this.TASK_LIST.remove(taskIndex).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"Task index given is invalid :( Unable to delete.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"     * Marks task as done given its index.","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"     * @param taskIndex Index of task that is to be marked as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"     * @return String representation of the task that is marked done.","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if the given task index is invalid.","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"    public String markTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"        Task task \u003d this.getTask(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"        task.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"        return task.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"     * Unmarks task as undone given its index.","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"     * @param taskIndex Index of task that is to be marked as undone.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"     * @return String representation of the task that is marked undone.","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if the given task index is invalid.","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"    public String unmarkTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"        Task task \u003d this.getTask(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"        task.unmark();","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"venuslimm"},"content":"        return task.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"venuslimm"},"content":"     * Returns a list of tasks that has the given keyword in their descriptions.","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"venuslimm"},"content":"     * @param keyword Keyword to filter the list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"venuslimm"},"content":"     * @return A list of tasks that have the keyword in their descriptions.","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"venuslimm"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"venuslimm"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"venuslimm"},"content":"        for (Task task : this.TASK_LIST) {","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"venuslimm"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"venuslimm"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"venuslimm"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"venuslimm"},"content":"        return foundTasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":98}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":" * Represents a Todo, which is a type of Task that has no datetime attached to it.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"     * Constructor for Todo class, which sets its description and status.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"     * @param description Description of Todo task.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"     * @param taskStatus Status of Todo task.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    public Todo(String description, String taskStatus) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"        if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"            this.mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"     * Returns the String representation of a Todo.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"     * @return String representation of a Todo in this format: [T] [{status}] {description}.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"[T][%c] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":34}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":" * Handles interactions with the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    private final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    private final String SEPARATOR \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     * Reads command from scanner object.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     * @return Command that was read.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if command is invalid.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    public String readCommand(String command) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        if (command.contains(\"~\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"            throw new DukeException(\"Fake Duke doesn\u0027t like it when the input has the symbol ~.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        return command;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"     * Prints out the greeting for Fake Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"    public String getWelcome() {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"       return \"Hello!~ I\u0027m the one and only ! FAKE DUKE !\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"     * Prints message when task is added into task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"     * @param task Task that is added into the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"    public String getAddOutput(Task task, TaskList taskList) {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"                task.toString(), taskList.getSize());","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"     * Prints message when task is deleted from the list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"     * @param taskString Description of task that has been deleted from the list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"    public String getDeleteOutput(String taskString, TaskList taskList) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n%sNow you have %d tasks in the list.\",","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"                taskString, taskList.getSize());","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"     * Prints message when task is marked as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"     * @param taskString Task in String that has been marked as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"    public String getMarkOutput(String taskString) {","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", taskString);","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"     * Prints message when task is marked as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"     * @param taskString Task in String that has been unmarked as undone.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"    public String getUnmarkOutput(String taskString) {","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n%s\", taskString);","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"venuslimm"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"venuslimm"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"venuslimm"},"content":"     * @throws DukeException Throws exception if unable to get task.","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"venuslimm"},"content":"    public String getListOutput(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"venuslimm"},"content":"        String str \u003d String.format(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"venuslimm"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"venuslimm"},"content":"            str \u003d String.format(\"%s%s%d.%s\\n\", str, SEPARATOR, i, taskList.getTask(i - 1).toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"venuslimm"},"content":"        return str;","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"venuslimm"},"content":"     * Prints an exit message.","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"venuslimm"},"content":"    public String getExitOutput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"venuslimm"},"content":"        return \"Hope I have been useful to you.\\nSee you again soon. Bye!~\";","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"venuslimm"},"content":"     * Prints the subset list of tasks that matches the keyword provided by the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"venuslimm"},"content":"     * @param foundTasks Subset list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"venuslimm"},"content":"    public String getFindOutput(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"venuslimm"},"content":"        String str \u003d String.format(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"venuslimm"},"content":"        for (int i \u003d 1; i \u003c\u003d foundTasks.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"venuslimm"},"content":"            str \u003d String.format(\"%s%d.%s\\n\", str, i, foundTasks.get(i - 1));","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"venuslimm"},"content":"        return str;","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"venuslimm"},"content":"     * Returns datetime in String for printing.","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"venuslimm"},"content":"     * @param dateTime Datetime of Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"venuslimm"},"content":"     * @return String representation of datetime.","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"venuslimm"},"content":"    public String getStringDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"venuslimm"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"E dd-MM-yyyy HH:mma\");","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"venuslimm"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":124}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"335.0\" style\u003d\"-fx-border-color: black; -fx-border-radius: 5; -fx-label-padding: 5; -fx-background-color: C9D7F8;\" text\u003d\"Label\" textFill\u003d\"#493657\" textOverrun\u003d\"WORD_ELLIPSIS\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"            \u003cFont name\u003d\"Berlin Sans FB\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"85.0\" fitWidth\u003d\"85.0\" opacity\u003d\"0.69\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"venuslimm":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#processUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"            \u003cFont name\u003d\"Berlin Sans FB\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#processUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Enter\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"            \u003cFont name\u003d\"Berlin Sans FB\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"venuslimm":26}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import java.time.Month;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    public void parseDateTime_validTestInput_success() {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"        assertEquals(LocalDateTime.of(2023, Month.JANUARY, 31, 12, 22, 0),","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"                new Parser().parseDateTime(\"2023-01-31 12:22\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"        assertEquals(LocalDateTime.of(2024, Month.JANUARY, 31, 12, 23, 0),","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"                new Parser().parseDateTime(\"2024-01-31 12:23\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    public void parseDateTime_invalidTestInput_failure() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"        assertNotEquals(LocalDateTime.of(2023, Month.JANUARY, 31, 12, 22, 30),","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"                new Parser().parseDateTime(\"2023-01-31 12:22\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        assertNotEquals(LocalDateTime.of(2023, Month.MARCH, 31, 12, 22, 30),","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"                new Parser().parseDateTime(\"2023-01-31 12:22\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"venuslimm":26}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    public void toString_validDateTime_success() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"        assertEquals(\"[D][ ] return book (by: Mon 02-09-2019 12:22PM) ⚠ TASK EXPIRED! ⚠\",","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"                new Deadline(\"return book /by 2019-09-02 12:22\").toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    public void toString_invalidDateTime_DukeExceptionThrown() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"            assertEquals(\"[D][ ] return book (by: Mon 02-09-2019 12:22PM) ⚠ TASK EXPIRED! ⚠\",","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"                    new Deadline(\"return book /by 2019-09-02 12:22:33\").toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"            assertEquals(\"☹ OOPS!!! Invalid datetime format. Please use yyyy-mm-dd HH:mm (E.g. 2019-10-15 18:00).\\n\",","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"                    e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    public void getRawTask_noTestInput_success() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"        assertEquals(\"D ~ 0 ~ return book ~ 2019-09-02 12:22\\n\",","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"                new Deadline(\"return book /by 2019-09-02 12:22\").getRawTask());","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":34}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"        assertEquals(\"[ ] read book\", new Task(\"read book\").toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    public void testGetRawTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"        assertEquals(\"T ~ 0 ~ read book\\n\", new Task(\"read book\").getRawTask());","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"venuslimm":17}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"D ~ 0 ~ return book ~ 2019-09-02 12:22","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"E ~ 1 ~ project meeting ~ 2019-09-02 12:22 ~ 2019-09-02 12:22","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"T ~ 0 ~ read book","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"venuslimm":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"deadline return book /by 2019-09-02 12:22","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"event project meeting /from 2019-09-02 12:22 /to 2019-09-02 12:22","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"mark 2","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"unmark 3","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"test","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"venuslimm":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"venuslimm":2,"-":19}}]
