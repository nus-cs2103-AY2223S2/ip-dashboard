[{"path":"src/main/java/skittles/Data.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"public class Data {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"    public static final File info \u003d new File(\"./data/data.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"     * Loads the Tasks stored in the form of an ArrayList\u003cTask\u003e.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"     * @return An ArrayList of type Task with all Tasks previously stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"    public static ArrayList\u003cTask\u003e loadUpInfo() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"            Scanner userTyped \u003d new Scanner(info);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"            ArrayList\u003cTask\u003e addedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"            while (userTyped.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"                try {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"                    addedTasks.add(convertTextToTasks(userTyped.nextLine()));","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"                } catch (IllegalStateException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"                    System.err.println(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"            return addedTasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"            produceNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"     * Writes the Task to the current text file.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"    public static void addInsideFile(Task taskToWrite) throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"        if (!info.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"            produceNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"            FileWriter updater \u003d new FileWriter(\"./data/data.txt\", true);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"            updater.write(taskToWrite.convertToText() + System.lineSeparator());","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"            updater.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey I can\u0027t seem to update your tasks!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"     * Updates the Tasks stored in the txt file.","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"    public static void updateTaskInTxt (ArrayList\u003cTask\u003e skittlesList) throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"            FileWriter updater \u003d new FileWriter(\"./data/data.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"            for (Task task : skittlesList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"                updater.write(task.convertToText());","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"            updater.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey I\u0027m unable to update your tasks!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"     * Converts text String into a Task object.","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"verydaftpunk"},"content":"     * @param text i.e. the String that is read from the txt file.","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"verydaftpunk"},"content":"     * @return a new Task interpreted from the text file.","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"verydaftpunk"},"content":"    public static Task convertTextToTasks(String txt) {","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"verydaftpunk"},"content":"        String[] words \u003d txt.split(\" \\\\| \");","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"verydaftpunk"},"content":"        //read[0] will be like T, or E, or D","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"verydaftpunk"},"content":"        String taskType \u003d words[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"verydaftpunk"},"content":"        Task itemToAdd;","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"verydaftpunk"},"content":"        switch(taskType) {","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"verydaftpunk"},"content":"        case \"D\":","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"verydaftpunk"},"content":"            itemToAdd \u003d new Deadline(words[2], words[3]);","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"verydaftpunk"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"verydaftpunk"},"content":"        case \"E\":","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"verydaftpunk"},"content":"            itemToAdd \u003d new Event(words[2], words[3], words[4]);","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"verydaftpunk"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"verydaftpunk"},"content":"        case \"T\":","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"verydaftpunk"},"content":"            itemToAdd \u003d new ToDo(words[2]);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"verydaftpunk"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"verydaftpunk"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"verydaftpunk"},"content":"            throw new IllegalStateException(\"Hey I\u0027m not sure what category this task is!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"verydaftpunk"},"content":"        if (words[1].equals(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"verydaftpunk"},"content":"            itemToAdd.strike();","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"verydaftpunk"},"content":"        return itemToAdd;","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"verydaftpunk"},"content":"     * Creates a new txt file if there currently is nothing stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"verydaftpunk"},"content":"    public static void produceNewFile() {","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"verydaftpunk"},"content":"            info.getParentFile().mkdirs();","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"verydaftpunk"},"content":"            info.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"verydaftpunk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"verydaftpunk"},"content":"            System.err.println(\"Hey we\u0027re unable to create a new file for you. Your tasks won\u0027t be saved!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"verydaftpunk":112}},{"path":"src/main/java/skittles/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"//Deadline is one of 3 types of Task, so it must be a child of Task","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"    private final Date byWhen;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"    private final String dateline;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    public Deadline(String name, String dateline) {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"        super(name);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"        this.dateline \u003d dateline;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"        this.byWhen \u003d convertStringIntoDateFormat(dateline);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"     * Converts a String input given by the user into a Date of a given format.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"     * @param dateline String of date of deadline given by user.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"     * @return A Date object with the same details as what the user has given.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"    public Date convertStringIntoDateFormat(String dateline) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"        Date date;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"        DateFormat rightFormat;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"        if (dateline.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"            rightFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd hhmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"            rightFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"            date \u003d rightFormat.parse(dateline);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"            return null;","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"        return date;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"     * Converts a Date deadline into a String","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"     * @return A String object of the Date","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"    public String convertDateIntoStringFormat() {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"        if (byWhen \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"            return dateline;","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"        DateFormat stringFormat;","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"        if (this.dateline.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"            stringFormat \u003d  new SimpleDateFormat(\"MMM dd yyyy h.mm aa\");","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"            stringFormat \u003d new SimpleDateFormat(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"        return stringFormat.format(this.byWhen);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"     * Converts the given Deadline into an appropriate format for txt file.","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"     * @return a String of the Deadline for input into a txt file.","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"    public String convertToText() {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"verydaftpunk"},"content":"        return String.format(\"D | %d | %s | %s\", super.getDoneOrNot() ? 1 : 0, super.getName(),","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"                        this.byWhen);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"verydaftpunk"},"content":"        //making sure printing matches the expected format","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"verydaftpunk"},"content":"        return \"[D]\" + super.toString() + \" \" + \"(by: \" + convertDateIntoStringFormat() + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"verydaftpunk":74}},{"path":"src/main/java/skittles/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    public Duke() {}","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"    private static final Scanner takingInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    private static String greetingsFromSkittles \u003d \"Hello I\u0027m Skittles\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    private static String adiosFromSkittles \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"    private static String gotItMessage \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"    //keeping track of number of things in list","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    //static int numOfThings \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"    private static final ListOfStuff lstOfTasks \u003d new ListOfStuff(Data.loadUpInfo());","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"    //method to greet","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"    public void hello() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"        System.out.print(greetingsFromSkittles);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"    public static void adios() {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"        System.out.print(adiosFromSkittles);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"     * Interpret what the user has entered as an input and categorises it into a Command.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"     * @return The correct command that is interpreted from the user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"    public static Instruction inputToInstruction(String userTyped) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"        String[] typed \u003d userTyped.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"        return Instruction.scanUserTyped(typed[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"            public static void addStufftoLst(String xx) {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"                lstOfTasks.add(new Task(xx));","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"                numOfThings +\u003d 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"                System.out.println(\"added: \" + xx);","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"    */","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"/*","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"        //basically print out the list. must be numbered.","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"        public static void displayLst() {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"            boolean isItMT \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"            StringBuilder txtToDisplay \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"            String nothingMessage \u003d \"Nothing in your list man!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"            for (Task thingInList : lstOfTasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"                if (thingInList !\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"                    isItMT \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"                    txtToDisplay.append(\"\\n\").append(thingInList.getRank()).append(\".\")","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"                            .append(thingInList.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"            if (!isItMT) {","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"                System.out.println(nothingMessage);","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"                System.out.println(txtToDisplay);","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"*/","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"/*","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"        public static void completeTask(String xx) {","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"            int taskNum \u003d Integer.parseInt(xx);","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"            String txt \u003d \"Try again! You don\u0027t have that task in your list!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"verydaftpunk"},"content":"            for (Task thingInList : lstOfTasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"verydaftpunk"},"content":"                if (thingInList !\u003d null \u0026\u0026 (thingInList.getRank() \u003d\u003d taskNum)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"verydaftpunk"},"content":"                    thingInList.strike();","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"verydaftpunk"},"content":"                    txt \u003d (\"Nice! I\u0027ve marked this task as done:\\n\" + thingInList.isCompleted()","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"verydaftpunk"},"content":"                            + thingInList.getName());","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"verydaftpunk"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(txt);","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"verydaftpunk"},"content":"        public static void undoCompleteTask(String xx) {","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"verydaftpunk"},"content":"            int taskNum \u003d Integer.parseInt(xx);","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"verydaftpunk"},"content":"            String txt \u003d \"Try again!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"verydaftpunk"},"content":"            for (Task thingInList : lstOfTasks) {","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"verydaftpunk"},"content":"                if (thingInList !\u003d null \u0026\u0026 (thingInList.getRank() \u003d\u003d taskNum)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"verydaftpunk"},"content":"                    thingInList.unstrike();","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"verydaftpunk"},"content":"                    txt \u003d (\"Ok, I\u0027ve marked this task as not done yet:\\n\" + thingInList.isCompleted()","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"verydaftpunk"},"content":"                            + thingInList.getName());","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"verydaftpunk"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(txt);","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"verydaftpunk"},"content":"/*","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"verydaftpunk"},"content":"     * Adds a Todo to all Tasks that Skittles has stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"verydaftpunk"},"content":"     * @param input The entire String that the user has input i.e. \"todo xxx\".","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"verydaftpunk"},"content":"     * @throws SkittlesException If an incorrect input is entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"verydaftpunk"},"content":"    public void addAToDo(String userTyped) throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"verydaftpunk"},"content":"        //firstly we check if the user only inputted one word \"todo\"","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \",2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey you didn\u0027t include a todo!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"verydaftpunk"},"content":"        //otherwise if todo is inputted with other words, check the info","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"verydaftpunk"},"content":"        String[] generalInfo \u003d userTyped.split(\" \",2);","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"verydaftpunk"},"content":"        ToDo mustDo \u003d new ToDo(generalInfo[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"verydaftpunk"},"content":"        lstOfTasks.add(mustDo);","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"verydaftpunk"},"content":"        Data.addInsideFile(mustDo);","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"verydaftpunk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + mustDo.toString() +","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"verydaftpunk"},"content":"                \"\\nNow you have \" + ListOfStuff.numOfThings() + \" tasks in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"verydaftpunk"},"content":"     * Adds a Deadline to all Tasks that Skittles has stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"verydaftpunk"},"content":"     * @param userTyped The entire String that the user has input i.e. \"deadline xxx /by yyy\".","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"verydaftpunk"},"content":"     * @throws SkittlesException If an incorrect input is entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"verydaftpunk"},"content":"    public void addTimeSensitive(String userTyped) throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"verydaftpunk"},"content":"        // First check if the user has only input the one word \"deadline\".","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey it looks like you are missing the description and the deadline date!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"verydaftpunk"},"content":"        // If \"deadline\" is entered with more words, check information.","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"verydaftpunk"},"content":"        String[] information \u003d userTyped.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"verydaftpunk"},"content":"        String [] description \u003d information[1].split(\"/by \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"verydaftpunk"},"content":"        //In the case where date is not entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"verydaftpunk"},"content":"        if (description.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey you are missing the deadline date! Please attempt again.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"verydaftpunk"},"content":"        Deadline newDeadline \u003d new Deadline(description[0], description[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"verydaftpunk"},"content":"        lstOfTasks.add(newDeadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"verydaftpunk"},"content":"        Data.addInsideFile(newDeadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"verydaftpunk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newDeadline.toString() + \"\\nNow you have \" + ListOfStuff.numOfThings() + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"verydaftpunk"},"content":"     * Adds an Event to all Tasks that Skittles has stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"verydaftpunk"},"content":"     * @param input The entire String that the user has input i.e. \"event xxx /from yyy /to zzz\".","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"verydaftpunk"},"content":"     * @throws SkittlesException If an incorrect input is entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"verydaftpunk"},"content":"    public void addAnEvent(String userTyped) throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"verydaftpunk"},"content":"        //Start by checking if user only inputted one word \"event\"","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \",2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey you didn\u0027t type the event and the time range!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"verydaftpunk"},"content":"        String[] generalInfo \u003d userTyped.split(\" \",2);","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"verydaftpunk"},"content":"        String[] eventAndEntireTimeRange\u003d generalInfo[1].split(\" /from \",2);","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"verydaftpunk"},"content":"        String[] startAndEndTime \u003d eventAndEntireTimeRange[1].split(\" /to \",2);","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"verydaftpunk"},"content":"        //next possibility the word \"event\" is typed with actual event but no time range","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \",2)[1].split(\" /from \",2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey looks like you\u0027re missing a time range!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"verydaftpunk"},"content":"        String actualEvent \u003d eventAndEntireTimeRange[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"verydaftpunk"},"content":"        String startTime \u003d startAndEndTime[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"verydaftpunk"},"content":"        String endTime \u003d startAndEndTime[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"verydaftpunk"},"content":"        Event suitAndTie \u003d new Event(actualEvent, startTime, endTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"verydaftpunk"},"content":"        lstOfTasks.add(suitAndTie);","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"verydaftpunk"},"content":"        Data.addInsideFile(suitAndTie);","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"verydaftpunk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + suitAndTie.toString() +","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"verydaftpunk"},"content":"                \"\\nNow you have \" + ListOfStuff.numOfThings() + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"verydaftpunk"},"content":"    /* Method that saves Tasks in the hard disk whenever called","lastModifiedDate":"2023-01-31"},{"lineNumber":166,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"verydaftpunk"},"content":"    public void save() {","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"verydaftpunk"},"content":"            FileWriter info \u003d new FileWriter(\"./data/data.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"verydaftpunk"},"content":"            for (Task task : ListOfStuff.getSkittlesList()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"verydaftpunk"},"content":"                info.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"verydaftpunk"},"content":"            info.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":174,"author":{"gitId":"verydaftpunk"},"content":"            System.out.print(\"Tasks have been saved\");","lastModifiedDate":"2023-01-31"},{"lineNumber":175,"author":{"gitId":"verydaftpunk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":176,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(\"Hey an error occurred when saving the data!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":177,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":178,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":179,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":180,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-01-31"},{"lineNumber":181,"author":{"gitId":"verydaftpunk"},"content":"    public static void delete (String userTyped) {","lastModifiedDate":"2023-01-20"},{"lineNumber":182,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":183,"author":{"gitId":"verydaftpunk"},"content":"            String rankOfTaskToDelete \u003d userTyped.split(\" \",2)[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":184,"author":{"gitId":"verydaftpunk"},"content":"            int taskToDeleteInt \u003d Integer.parseInt(rankOfTaskToDelete);","lastModifiedDate":"2023-01-20"},{"lineNumber":185,"author":{"gitId":"verydaftpunk"},"content":"            Task deleted \u003d lstOfTasks.remove(taskToDeleteInt - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":186,"author":{"gitId":"verydaftpunk"},"content":"            numOfThings --;","lastModifiedDate":"2023-01-20"},{"lineNumber":187,"author":{"gitId":"verydaftpunk"},"content":"            //making sure every task after point of deletion has its rank updated to -1","lastModifiedDate":"2023-01-20"},{"lineNumber":188,"author":{"gitId":"verydaftpunk"},"content":"            /* for (int i \u003d taskToDeleteInt; i \u003c numOfThings; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"verydaftpunk"},"content":"                int updatedRank \u003d lstOfTasks.get(i).getRank() - 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":190,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":191,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task.\\n\" + deleted.toString()","lastModifiedDate":"2023-01-20"},{"lineNumber":192,"author":{"gitId":"verydaftpunk"},"content":"                    + \"\\nNow you have \" + numOfThings + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":193,"author":{"gitId":"verydaftpunk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":194,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(\"You didn\u0027t enter a valid task to delete man!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":195,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":196,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"verydaftpunk"},"content":"    */","lastModifiedDate":"2023-01-31"},{"lineNumber":198,"author":{"gitId":"verydaftpunk"},"content":"    public void begin() {","lastModifiedDate":"2023-01-31"},{"lineNumber":199,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"verydaftpunk"},"content":"        boolean repeatStatus \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":201,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"verydaftpunk"},"content":"        //start by greeting","lastModifiedDate":"2023-01-19"},{"lineNumber":203,"author":{"gitId":"verydaftpunk"},"content":"        hello();","lastModifiedDate":"2023-01-19"},{"lineNumber":204,"author":{"gitId":"verydaftpunk"},"content":"        String input \u003d takingInput.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":205,"author":{"gitId":"verydaftpunk"},"content":"        Instruction instruction \u003d inputToInstruction(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":206,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":207,"author":{"gitId":"verydaftpunk"},"content":"        while (repeatStatus) {","lastModifiedDate":"2023-01-31"},{"lineNumber":208,"author":{"gitId":"verydaftpunk"},"content":"            //String userTyped \u003d takingInput.nextLine().toLowerCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":209,"author":{"gitId":"verydaftpunk"},"content":"            //String frontWord \u003d userTyped.split(\" \",2)[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":210,"author":{"gitId":"verydaftpunk"},"content":"            switch(instruction) {","lastModifiedDate":"2023-01-31"},{"lineNumber":211,"author":{"gitId":"verydaftpunk"},"content":"                case BYE:","lastModifiedDate":"2023-01-31"},{"lineNumber":212,"author":{"gitId":"verydaftpunk"},"content":"                    repeatStatus \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":213,"author":{"gitId":"verydaftpunk"},"content":"                    adios();","lastModifiedDate":"2023-01-19"},{"lineNumber":214,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":215,"author":{"gitId":"verydaftpunk"},"content":"                case LIST:","lastModifiedDate":"2023-01-31"},{"lineNumber":216,"author":{"gitId":"verydaftpunk"},"content":"                    //show user the list in this case","lastModifiedDate":"2023-01-19"},{"lineNumber":217,"author":{"gitId":"verydaftpunk"},"content":"                    ListOfStuff.displayLst();","lastModifiedDate":"2023-01-31"},{"lineNumber":218,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":219,"author":{"gitId":"verydaftpunk"},"content":"                case MARK:","lastModifiedDate":"2023-01-31"},{"lineNumber":220,"author":{"gitId":"verydaftpunk"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":221,"author":{"gitId":"verydaftpunk"},"content":"                        ListOfStuff.completeTask(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":222,"author":{"gitId":"verydaftpunk"},"content":"                        ListOfStuff.refresh();","lastModifiedDate":"2023-01-31"},{"lineNumber":223,"author":{"gitId":"verydaftpunk"},"content":"                    } catch (SkittlesException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":224,"author":{"gitId":"verydaftpunk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":225,"author":{"gitId":"verydaftpunk"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":226,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":227,"author":{"gitId":"verydaftpunk"},"content":"                case TODO:","lastModifiedDate":"2023-01-31"},{"lineNumber":228,"author":{"gitId":"verydaftpunk"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":229,"author":{"gitId":"verydaftpunk"},"content":"                        addAToDo(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":230,"author":{"gitId":"verydaftpunk"},"content":"                    } catch (SkittlesException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":231,"author":{"gitId":"verydaftpunk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":232,"author":{"gitId":"verydaftpunk"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":233,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":234,"author":{"gitId":"verydaftpunk"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-31"},{"lineNumber":235,"author":{"gitId":"verydaftpunk"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":236,"author":{"gitId":"verydaftpunk"},"content":"                        addTimeSensitive(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":237,"author":{"gitId":"verydaftpunk"},"content":"                    } catch (SkittlesException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":238,"author":{"gitId":"verydaftpunk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":239,"author":{"gitId":"verydaftpunk"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":240,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":241,"author":{"gitId":"verydaftpunk"},"content":"                case EVENT:","lastModifiedDate":"2023-01-31"},{"lineNumber":242,"author":{"gitId":"verydaftpunk"},"content":"                    try {","lastModifiedDate":"2023-01-31"},{"lineNumber":243,"author":{"gitId":"verydaftpunk"},"content":"                        addAnEvent(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":244,"author":{"gitId":"verydaftpunk"},"content":"                    } catch (SkittlesException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":245,"author":{"gitId":"verydaftpunk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":246,"author":{"gitId":"verydaftpunk"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":247,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":248,"author":{"gitId":"verydaftpunk"},"content":"                case DELETE:","lastModifiedDate":"2023-01-31"},{"lineNumber":249,"author":{"gitId":"verydaftpunk"},"content":"                    try {","lastModifiedDate":"2023-01-31"},{"lineNumber":250,"author":{"gitId":"verydaftpunk"},"content":"                        ListOfStuff.delete(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":251,"author":{"gitId":"verydaftpunk"},"content":"                        ListOfStuff.refresh();","lastModifiedDate":"2023-01-31"},{"lineNumber":252,"author":{"gitId":"verydaftpunk"},"content":"                    } catch (SkittlesException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":253,"author":{"gitId":"verydaftpunk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":254,"author":{"gitId":"verydaftpunk"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":255,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":256,"author":{"gitId":"verydaftpunk"},"content":"                default:","lastModifiedDate":"2023-01-31"},{"lineNumber":257,"author":{"gitId":"verydaftpunk"},"content":"                    System.out.println(\"Try again fat fingers!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":258,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":259,"author":{"gitId":"verydaftpunk"},"content":"            if (repeatStatus) {","lastModifiedDate":"2023-01-31"},{"lineNumber":260,"author":{"gitId":"verydaftpunk"},"content":"                input \u003d takingInput.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":261,"author":{"gitId":"verydaftpunk"},"content":"                instruction \u003d inputToInstruction(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":262,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":263,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":264,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":265,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":266,"author":{"gitId":"verydaftpunk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":267,"author":{"gitId":"verydaftpunk"},"content":"        Duke skittles \u003d new Duke();","lastModifiedDate":"2023-01-31"},{"lineNumber":268,"author":{"gitId":"verydaftpunk"},"content":"        skittles.begin();","lastModifiedDate":"2023-01-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"verydaftpunk":267,"-":3}},{"path":"src/main/java/skittles/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"//Event is one of 3 types of Task, so it must be a child of Task","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"    private final String startTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"    private final String endTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"     * Constructor for an Event.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"     * @param name The name of the event.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"     * @param startTime the start time of the event.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"     * @param endTime the end time of the event","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"    public Event(String name, String startTime, String endTime) {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"        super(name);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"        return \"[E]\" + super.toString() + \" \" + \"(from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"    public String convertToText() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"        return String.format(\"E | %d | %s | %s | %s\", super.getDoneOrNot() ? 1 : 0, super.getName(),","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"                startTime, endTime + System.lineSeparator());","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"verydaftpunk":30}},{"path":"src/main/java/skittles/Instruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"public enum Instruction {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"    UNRECOGNISED,","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"    LIST,","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"    MARK,","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    TODO,","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"    EVENT,","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"    DELETE,","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    BYE;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"    public static Instruction scanUserTyped(String userTyped) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"        String scannedWord \u003d userTyped.toLowerCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"        Instruction newInstruction;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"        switch (scannedWord) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"            case \"list\":","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"                newInstruction \u003d Instruction.LIST;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"                newInstruction \u003d Instruction.MARK;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"                newInstruction \u003d Instruction.TODO;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"                newInstruction \u003d Instruction.DEADLINE;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"            case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"                newInstruction \u003d Instruction.EVENT;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"                newInstruction \u003d Instruction.DELETE;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"                newInstruction \u003d Instruction.BYE;","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"                newInstruction \u003d Instruction.UNRECOGNISED;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"        return newInstruction;","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"verydaftpunk":45}},{"path":"src/main/java/skittles/ListOfStuff.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"public class ListOfStuff {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"    private static ArrayList\u003cTask\u003e skittlesList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    public ListOfStuff(ArrayList\u003cTask\u003e skittlesList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"        this.skittlesList \u003d skittlesList;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    public static void add(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"        skittlesList.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"     * Shows all Tasks in the list that the user has given to Skittles to store.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"     * Tasks are ordered from least recent to most recent. If no tasks have been given to Skittles,","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"     * the appropriate message is shown.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"    public static void displayLst() {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"        String textToDisplayLst \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"        String textForEmptyLst \u003d \"Hey looks like your list is empty man!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"        if (skittlesList \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(textForEmptyLst);","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"            for (int i \u003d 0; i \u003c skittlesList.size(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"                textToDisplayLst +\u003d \"\\n\" + (i + 1) + \".\" + skittlesList.get(i).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(textToDisplayLst);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"    /* old displayLst() method","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"    //basically print out the list. must be numbered.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"    public static void displayLst() {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"        boolean isItMT \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"        StringBuilder txtToDisplay \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"        String nothingMessage \u003d \"Nothing in your list man!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"        for (Task thingInList : skittlesList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"            if (thingInList !\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"                isItMT \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"                txtToDisplay.append(\"\\n\").append(thingInList.getRank()).append(\".\")","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"                        .append(thingInList.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"        if (!isItMT) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(nothingMessage);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(txtToDisplay);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"    */","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"     * Updates the marking of a certain Task as \u0027done\u0027.","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"     * @param input The entire String that the user has input i.e. \"mark 2\".","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"     * @throws SkittlesException If an incorrect input is entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"    public static void completeTask(String userTyped) throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"        int taskId;","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey you forgot to type the number of the task you wanna mark as done!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"        String idUserTyped \u003d userTyped.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"verydaftpunk"},"content":"            taskId \u003d Integer.parseInt(idUserTyped);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"verydaftpunk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey we\u0027re detecting an error; do input a number behind \u0027mark\u0027 if you haven\u0027t!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"verydaftpunk"},"content":"        String text \u003d \"Hey we can\u0027t seem to find the task ID you typed!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"verydaftpunk"},"content":"        if (skittlesList.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"verydaftpunk"},"content":"            text \u003d \"Hey your list is empty man! Try adding a Task first!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"verydaftpunk"},"content":"        } else if (taskId \u003c\u003d skittlesList.size()){","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"verydaftpunk"},"content":"            Task intendedItem \u003d skittlesList.get(taskId - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"verydaftpunk"},"content":"            intendedItem.strike();","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"verydaftpunk"},"content":"            text \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + \" \" + intendedItem.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"verydaftpunk"},"content":"        System.out.println(text);","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"verydaftpunk"},"content":"     * Deletes a specific task that Skittles has stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"verydaftpunk"},"content":"     * @param input The entire String that the user has input i.e. \"delete 2\".","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"verydaftpunk"},"content":"     * @throws SkittlesException If an incorrect input is entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"verydaftpunk"},"content":"    public static void delete(String input) throws SkittlesException{","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"verydaftpunk"},"content":"        int itemNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"verydaftpunk"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"☹ Oops! Looks like you are missing the number of the task you wish to delete! Try again :-)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"verydaftpunk"},"content":"        String numberInput \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"verydaftpunk"},"content":"            itemNumber \u003d Integer.parseInt(numberInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"verydaftpunk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"You may have entered something incorrectly. Try adding a number behind \u0027delete\u0027!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"verydaftpunk"},"content":"        String message \u003d \"☹ Oops! You may have incorrectly entered a number. Try again!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"verydaftpunk"},"content":"        if (itemNumber \u003e skittlesList.size()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"☹ Oops! Looks like you are trying to delete something that is not in your list! Try again!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"verydaftpunk"},"content":"        Task removed \u003d skittlesList.remove(itemNumber - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"verydaftpunk"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + removed.toString() + \"\\nNow you have \" + skittlesList.size()","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"verydaftpunk"},"content":"                + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"verydaftpunk"},"content":"    public static void refresh() throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"verydaftpunk"},"content":"        Data.updateTaskInTxt(skittlesList);","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"verydaftpunk"},"content":"    public static ArrayList\u003cTask\u003e getSkittlesList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"verydaftpunk"},"content":"        return ListOfStuff.skittlesList;","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"verydaftpunk"},"content":"    public static int numOfThings() {","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"verydaftpunk"},"content":"        return ListOfStuff.skittlesList.size();","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"verydaftpunk":123}},{"path":"src/main/java/skittles/SkittlesException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"public class SkittlesException extends Exception {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"    public SkittlesException (String skittlesErrorText) {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"        super(skittlesErrorText);","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"verydaftpunk":6}},{"path":"src/main/java/skittles/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"    private String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"    private boolean doneOrNot;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"    //private int rank;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"    //private static int numOfThings \u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    //constructor","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"        this.doneOrNot \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"        //this.rank \u003d numOfThings;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"        //numOfThings +\u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"    public String isCompleted() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"        if (!doneOrNot) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"            return \"[ ] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"            return \"[X] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"    public void strike() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"        this.doneOrNot \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"    public void unstrike() {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"        this.doneOrNot \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"    public String getName() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"        return name;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"    public String getCompletedOrNotSign() {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"        if (!doneOrNot) {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"            return \"[ ] \";","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"            return \"[X] \";","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"    /* public int getRank() {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"        return rank;","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"    } */","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"    /* public void setRank(int n) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"        this.rank \u003d n;","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"    } */","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"    public Boolean getDoneOrNot() {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"        return this.doneOrNot;","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"        return this.getCompletedOrNotSign() + this.name;","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"    public abstract String convertToText();","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"verydaftpunk":64}},{"path":"src/main/java/skittles/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"//ToDo is one of 3 types of Task, so it must be a child of Task","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"    //constructor just use parent class Task\u0027s constructor","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"        super(name);","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"        //making sure we add the \"[T]\"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    public String convertToText() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"        return String.format(\"T | %d | %s\", super.getDoneOrNot() ? 1 : 0, super.getName() + System.lineSeparator());","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"verydaftpunk":21}}]
