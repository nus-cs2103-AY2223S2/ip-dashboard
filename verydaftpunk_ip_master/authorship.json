[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"    mainClassName \u003d \"skittles.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"    archiveBaseName \u003d \"skittles\"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"verydaftpunk":18,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"Features","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"Syntax:","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"[ACTION VERB][options]","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"\u003cRequired argument\u003e[optional argument]","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"All commands case insensitive","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"task/ -\u003e task: task","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"deadline/ -\u003e valid date / date-time","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"index/ -\u003e index: index","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"Add a todo: todo \u003ctask/TASK\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"Adds a todo to the list","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"Example: todo finish CS2103T user guide","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"Add a deadline: deadline \u003ctask/TASK\u003e by \u003cdeadline/DEADLINE\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"Adds a task with deadline to the list","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"Example: deadline finish CS2103T user guide by 17/2/2023","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"Mark a task in the list as done: mark \u003cindex/INDEX\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"Marks the task in the given index of the list as done","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"Example: mark 1 ","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"Unmark a task in the list as not done: unmark \u003cindex/INDEX\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"Marks the task in the given index of the list as not done","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"Example: unmark 1 ","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"Delete a task in the list: delete \u003ctask/TASK\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"Deletes the task in the given index of the list from the list","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"Example: delete 2","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"Close the chat: bye","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"Closes the chat ","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"Example: bye","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"Display the list: list","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"Command: list","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"verydaftpunk":28,"-":12}},{"path":"src/main/java/skittles/Data.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"public class Data {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"    //public static final File info \u003d new File(\"./data/data.txt\");","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    private static File info;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    private final String filePath;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"     * Constructor for Data.","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"     * @param filePath takes in a String specifying file path.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"    public Data(String filePath) {","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"        info \u003d new File(filePath);","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"     * Loads the Tasks stored in the form of an ArrayList\u003cTask\u003e.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"     * @return An ArrayList of type Task with all Tasks previously stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"    public static ArrayList\u003cTask\u003e loadUpInfo() {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"            Scanner scanner \u003d new Scanner(info);","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"            ArrayList\u003cTask\u003e addedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"                try {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"                    addedTasks.add(convertTextToTasks(scanner.nextLine()));","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"                } catch (IllegalStateException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"                    System.err.println(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"            return addedTasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"            produceNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"     * Writes the Task to the current text file.","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"    public static void addInsideFile(Task taskToWrite) throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"        if (!info.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"            produceNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"            FileWriter updater \u003d new FileWriter(\"./data/data.txt\", true);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"            updater.write(taskToWrite.convertToText() + System.lineSeparator());","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"            updater.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey I can\u0027t seem to update your tasks!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"     * Updates the Tasks stored in the txt file.","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"    public static void updateTaskInTxt (ArrayList\u003cTask\u003e skittlesList) throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"verydaftpunk"},"content":"            FileWriter updater \u003d new FileWriter(\"./data/data.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"verydaftpunk"},"content":"            for (Task task : skittlesList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"verydaftpunk"},"content":"                updater.write(task.convertToText());","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"verydaftpunk"},"content":"            updater.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"verydaftpunk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey I\u0027m unable to update your tasks!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"verydaftpunk"},"content":"     * Converts text String into a Task object.","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"verydaftpunk"},"content":"     * @param txt i.e. the String that is read from the txt file.","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"verydaftpunk"},"content":"     * @return a new Task interpreted from the text file.","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"verydaftpunk"},"content":"    public static Task convertTextToTasks(String txt) {","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"verydaftpunk"},"content":"        String[] words \u003d txt.split(\" \\\\| \");","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"verydaftpunk"},"content":"        //read[0] will be like T, or E, or D","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"verydaftpunk"},"content":"        String taskType \u003d words[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"verydaftpunk"},"content":"        Task itemToAdd;","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"verydaftpunk"},"content":"        switch(taskType) {","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"verydaftpunk"},"content":"        case \"D\":","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"verydaftpunk"},"content":"            itemToAdd \u003d new Deadline(words[2], words[3]);","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"verydaftpunk"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"verydaftpunk"},"content":"        case \"E\":","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"verydaftpunk"},"content":"            itemToAdd \u003d new Event(words[2], words[3], words[4]);","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"verydaftpunk"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"verydaftpunk"},"content":"        case \"T\":","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"verydaftpunk"},"content":"            itemToAdd \u003d new ToDo(words[2]);","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"verydaftpunk"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"verydaftpunk"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"verydaftpunk"},"content":"            throw new IllegalStateException(\"Hey I\u0027m not sure what category this task is!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"verydaftpunk"},"content":"        if (words[1].equals(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"verydaftpunk"},"content":"            itemToAdd.strike();","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"verydaftpunk"},"content":"        return itemToAdd;","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"verydaftpunk"},"content":"     * Creates a new txt file if there currently is nothing stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"verydaftpunk"},"content":"    public static void produceNewFile() {","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"verydaftpunk"},"content":"            info.getParentFile().mkdirs();","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"verydaftpunk"},"content":"            info.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"verydaftpunk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"verydaftpunk"},"content":"            System.err.println(\"Hey we\u0027re unable to create a new file for you. Your tasks won\u0027t be saved!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"verydaftpunk":124}},{"path":"src/main/java/skittles/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"//Deadline is one of 3 types of Task, so it must be a child of Task","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"    private final Date byWhen;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    private final String dateline;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"    public Deadline(String name, String dateline) {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"        super(name);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"        this.dateline \u003d dateline;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"        this.byWhen \u003d convertStringIntoDateFormat(dateline);","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"     * Converts a String input given by the user into a Date of a given format.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"     * @param dateline String of date of deadline given by user.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"     * @return A Date object with the same details as what the user has given.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"    public Date convertStringIntoDateFormat(String dateline) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"        Date date;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"        DateFormat rightFormat;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"        if (dateline.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"            rightFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd hhmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"            rightFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"            date \u003d rightFormat.parse(dateline);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"            return null;","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"        return date;","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"     * Converts a Date deadline into a String","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"     * @return A String object of the Date","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"    public String convertDateIntoStringFormat() {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"        if (byWhen \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"            return dateline;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"        DateFormat stringFormat;","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"        if (this.dateline.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"            stringFormat \u003d  new SimpleDateFormat(\"MMM dd yyyy h.mm aa\");","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"            stringFormat \u003d new SimpleDateFormat(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"        return stringFormat.format(this.byWhen);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"     * Converts the given Deadline into an appropriate format for txt file.","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"     * @return a String of the Deadline for input into a txt file.","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"verydaftpunk"},"content":"    public String convertToText() {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"        return String.format(\"D | %d | %s | %s\", super.getDoneOrNot() ? 1 : 0, super.getName(),","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"                        this.byWhen);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"verydaftpunk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"verydaftpunk"},"content":"        //making sure printing matches the expected format","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"verydaftpunk"},"content":"        return \"[D]\" + super.toString() + \" \" + \"(by: \" + convertDateIntoStringFormat() + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"verydaftpunk":75}},{"path":"src/main/java/skittles/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"    private void flip() {","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"        db.flip();","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"        return db;","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"verydaftpunk":59}},{"path":"src/main/java/skittles/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"import java.io.*;","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import skittles.instruction.Instruction;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"    private ListOfStuff list;","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"        Data data \u003d new Data(filePath);","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"        list \u003d new ListOfStuff(data.loadUpInfo(),data);","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"        parser \u003d new Parser(list,data);","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"    private static final Scanner takingInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"    private static String greetingsFromSkittles \u003d \"Hello I\u0027m Skittles\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"    private static String adiosFromSkittles \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"    private static String gotItMessage \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"    //keeping track of number of things in list","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"    //static int numOfThings \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"    //private static final ListOfStuff lstOfTasks \u003d new ListOfStuff(Data.loadUpInfo());","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"    //method to greet","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"    public void hello() {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"        System.out.print(greetingsFromSkittles);","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"    public String getGreetingsFromSkittles() {","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"verydaftpunk"},"content":"        return greetingsFromSkittles;","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"    public static void adios() {","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"        System.out.print(adiosFromSkittles);","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"verydaftpunk"},"content":"     * Interpret what the user has entered as an input and categorises it into a Command.","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"verydaftpunk"},"content":"     * @param userTyped User\u0027s input","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"verydaftpunk"},"content":"     * @return The correct command that is interpreted from the user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"verydaftpunk"},"content":"    public static Instruction inputToInstruction(String userTyped) {","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"verydaftpunk"},"content":"        String[] typed \u003d userTyped.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"verydaftpunk"},"content":"        return Instruction.scanUserTyped(typed[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"verydaftpunk"},"content":"    */","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"verydaftpunk"},"content":"            public static void addStufftoLst(String xx) {","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"verydaftpunk"},"content":"                lstOfTasks.add(new Task(xx));","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"verydaftpunk"},"content":"                numOfThings +\u003d 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"verydaftpunk"},"content":"                System.out.println(\"added: \" + xx);","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"verydaftpunk"},"content":"    */","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"verydaftpunk"},"content":"/*","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"verydaftpunk"},"content":"        //basically print out the list. must be numbered.","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"verydaftpunk"},"content":"        public static void displayLst() {","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"verydaftpunk"},"content":"            boolean isItMT \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"verydaftpunk"},"content":"            StringBuilder txtToDisplay \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"verydaftpunk"},"content":"            String nothingMessage \u003d \"Nothing in your list man!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"verydaftpunk"},"content":"            for (Task thingInList : lstOfTasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"verydaftpunk"},"content":"                if (thingInList !\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"verydaftpunk"},"content":"                    isItMT \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"verydaftpunk"},"content":"                    txtToDisplay.append(\"\\n\").append(thingInList.getRank()).append(\".\")","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"verydaftpunk"},"content":"                            .append(thingInList.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"verydaftpunk"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"verydaftpunk"},"content":"            if (!isItMT) {","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"verydaftpunk"},"content":"                System.out.println(nothingMessage);","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"verydaftpunk"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"verydaftpunk"},"content":"                System.out.println(txtToDisplay);","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"verydaftpunk"},"content":"*/","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"verydaftpunk"},"content":"/*","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"verydaftpunk"},"content":"        public static void completeTask(String xx) {","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"verydaftpunk"},"content":"            int taskNum \u003d Integer.parseInt(xx);","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"verydaftpunk"},"content":"            String txt \u003d \"Try again! You don\u0027t have that task in your list!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"verydaftpunk"},"content":"            for (Task thingInList : lstOfTasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"verydaftpunk"},"content":"                if (thingInList !\u003d null \u0026\u0026 (thingInList.getRank() \u003d\u003d taskNum)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"verydaftpunk"},"content":"                    thingInList.strike();","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"verydaftpunk"},"content":"                    txt \u003d (\"Nice! I\u0027ve marked this task as done:\\n\" + thingInList.isCompleted()","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"verydaftpunk"},"content":"                            + thingInList.getName());","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"verydaftpunk"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(txt);","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"verydaftpunk"},"content":"        public static void undoCompleteTask(String xx) {","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"verydaftpunk"},"content":"            int taskNum \u003d Integer.parseInt(xx);","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"verydaftpunk"},"content":"            String txt \u003d \"Try again!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"verydaftpunk"},"content":"            for (Task thingInList : lstOfTasks) {","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"verydaftpunk"},"content":"                if (thingInList !\u003d null \u0026\u0026 (thingInList.getRank() \u003d\u003d taskNum)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"verydaftpunk"},"content":"                    thingInList.unstrike();","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"verydaftpunk"},"content":"                    txt \u003d (\"Ok, I\u0027ve marked this task as not done yet:\\n\" + thingInList.isCompleted()","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"verydaftpunk"},"content":"                            + thingInList.getName());","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"verydaftpunk"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(txt);","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"verydaftpunk"},"content":"*/","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"verydaftpunk"},"content":"     * Adds a Todo to all Tasks that Skittles has stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"verydaftpunk"},"content":"     * @param userTyped The entire String that the user has input i.e. \"todo xxx\".","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"verydaftpunk"},"content":"     * @throws SkittlesException If an incorrect input is entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-02-14"},{"lineNumber":143,"author":{"gitId":"verydaftpunk"},"content":"    public void addAToDo(String userTyped) throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"verydaftpunk"},"content":"        //firstly we check if the user only inputted one word \"todo\"","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \",2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey you didn\u0027t include a todo!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"verydaftpunk"},"content":"        //otherwise if todo is inputted with other words, check the info","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"verydaftpunk"},"content":"        String[] generalInfo \u003d userTyped.split(\" \",2);","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"verydaftpunk"},"content":"        ToDo mustDo \u003d new ToDo(generalInfo[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"verydaftpunk"},"content":"        lstOfTasks.add(mustDo);","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"verydaftpunk"},"content":"        Data.addInsideFile(mustDo);","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"verydaftpunk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + mustDo.toString() +","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"verydaftpunk"},"content":"                \"\\nNow you have \" + ListOfStuff.numOfThings() + \" tasks in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"verydaftpunk"},"content":"/*","lastModifiedDate":"2023-02-14"},{"lineNumber":157,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":159,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"verydaftpunk"},"content":"     * Adds a Deadline to all Tasks that Skittles has stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"verydaftpunk"},"content":"     * @param userTyped The entire String that the user has input i.e. \"deadline xxx /by yyy\".","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"verydaftpunk"},"content":"     * @throws SkittlesException If an incorrect input is entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-02-14"},{"lineNumber":165,"author":{"gitId":"verydaftpunk"},"content":"    public void addTimeSensitive(String userTyped) throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":166,"author":{"gitId":"verydaftpunk"},"content":"        // First check if the user has only input the one word \"deadline\".","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey it looks like you are missing the description and the deadline date!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"verydaftpunk"},"content":"        // If \"deadline\" is entered with more words, check information.","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"verydaftpunk"},"content":"        String[] information \u003d userTyped.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"verydaftpunk"},"content":"        String [] description \u003d information[1].split(\"/by \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"verydaftpunk"},"content":"        //In the case where date is not entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":174,"author":{"gitId":"verydaftpunk"},"content":"        if (description.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":175,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey you are missing the deadline date! Please attempt again.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":176,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":177,"author":{"gitId":"verydaftpunk"},"content":"        Deadline newDeadline \u003d new Deadline(description[0], description[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":178,"author":{"gitId":"verydaftpunk"},"content":"        lstOfTasks.add(newDeadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":179,"author":{"gitId":"verydaftpunk"},"content":"        Data.addInsideFile(newDeadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":180,"author":{"gitId":"verydaftpunk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newDeadline.toString() + \"\\nNow you have \" + ListOfStuff.numOfThings() + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":181,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":182,"author":{"gitId":"verydaftpunk"},"content":"*/","lastModifiedDate":"2023-02-14"},{"lineNumber":183,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":184,"author":{"gitId":"verydaftpunk"},"content":"     * Adds an Event to all Tasks that Skittles has stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":185,"author":{"gitId":"verydaftpunk"},"content":"     * @param userTyped The entire String that the user has input i.e. \"event xxx /from yyy /to zzz\".","lastModifiedDate":"2023-02-01"},{"lineNumber":186,"author":{"gitId":"verydaftpunk"},"content":"     * @throws SkittlesException If an incorrect input is entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":187,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":188,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-02-14"},{"lineNumber":189,"author":{"gitId":"verydaftpunk"},"content":"    public void addAnEvent(String userTyped) throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":190,"author":{"gitId":"verydaftpunk"},"content":"        //Start by checking if user only inputted one word \"event\"","lastModifiedDate":"2023-01-31"},{"lineNumber":191,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \",2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":192,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey you didn\u0027t type the event and the time range!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":193,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":194,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":195,"author":{"gitId":"verydaftpunk"},"content":"        String[] generalInfo \u003d userTyped.split(\" \",2);","lastModifiedDate":"2023-01-31"},{"lineNumber":196,"author":{"gitId":"verydaftpunk"},"content":"        String[] eventAndEntireTimeRange\u003d generalInfo[1].split(\" /from \",2);","lastModifiedDate":"2023-01-31"},{"lineNumber":197,"author":{"gitId":"verydaftpunk"},"content":"        String[] startAndEndTime \u003d eventAndEntireTimeRange[1].split(\" /to \",2);","lastModifiedDate":"2023-01-31"},{"lineNumber":198,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":199,"author":{"gitId":"verydaftpunk"},"content":"        //next possibility the word \"event\" is typed with actual event but no time range","lastModifiedDate":"2023-01-31"},{"lineNumber":200,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \",2)[1].split(\" /from \",2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":201,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey looks like you\u0027re missing a time range!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":202,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":204,"author":{"gitId":"verydaftpunk"},"content":"        String actualEvent \u003d eventAndEntireTimeRange[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":205,"author":{"gitId":"verydaftpunk"},"content":"        String startTime \u003d startAndEndTime[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":206,"author":{"gitId":"verydaftpunk"},"content":"        String endTime \u003d startAndEndTime[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":207,"author":{"gitId":"verydaftpunk"},"content":"        Event suitAndTie \u003d new Event(actualEvent, startTime, endTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":208,"author":{"gitId":"verydaftpunk"},"content":"        lstOfTasks.add(suitAndTie);","lastModifiedDate":"2023-01-20"},{"lineNumber":209,"author":{"gitId":"verydaftpunk"},"content":"        Data.addInsideFile(suitAndTie);","lastModifiedDate":"2023-01-31"},{"lineNumber":210,"author":{"gitId":"verydaftpunk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + suitAndTie.toString() +","lastModifiedDate":"2023-01-20"},{"lineNumber":211,"author":{"gitId":"verydaftpunk"},"content":"                \"\\nNow you have \" + ListOfStuff.numOfThings() + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":212,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":213,"author":{"gitId":"verydaftpunk"},"content":"*/","lastModifiedDate":"2023-02-14"},{"lineNumber":214,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":215,"author":{"gitId":"verydaftpunk"},"content":"     * Lists out all the Tasks that contains the input given by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":216,"author":{"gitId":"verydaftpunk"},"content":"     * @param userTyped Given by the user","lastModifiedDate":"2023-02-01"},{"lineNumber":217,"author":{"gitId":"verydaftpunk"},"content":"     * @throws SkittlesException No matches found error.","lastModifiedDate":"2023-02-01"},{"lineNumber":218,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":219,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-02-14"},{"lineNumber":220,"author":{"gitId":"verydaftpunk"},"content":"    public void find(String userTyped) throws SkittlesException {","lastModifiedDate":"2023-02-01"},{"lineNumber":221,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":222,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey man you\u0027re missing the keyword you wish to search!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":223,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":224,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \", 2).length \u003e 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":225,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey man don\u0027t type multiple keywords!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":226,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":227,"author":{"gitId":"verydaftpunk"},"content":"        String[] information \u003d userTyped.split(\" \",2);","lastModifiedDate":"2023-02-01"},{"lineNumber":228,"author":{"gitId":"verydaftpunk"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":229,"author":{"gitId":"verydaftpunk"},"content":"        String keyword \u003d information[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":230,"author":{"gitId":"verydaftpunk"},"content":"        ArrayList\u003cTask\u003e results \u003d lstOfTasks.findInList(keyword);","lastModifiedDate":"2023-02-01"},{"lineNumber":231,"author":{"gitId":"verydaftpunk"},"content":"        for (int i \u003d 1; i \u003c\u003d results.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":232,"author":{"gitId":"verydaftpunk"},"content":"            output \u003d output.concat(i+ \".\" + results.get(i-1).toString() + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":233,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":234,"author":{"gitId":"verydaftpunk"},"content":"        if (!results.isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":235,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(output);","lastModifiedDate":"2023-02-01"},{"lineNumber":236,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":237,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(\"You do not have such an item in your list currently!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":238,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":239,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":240,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":241,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-02-14"},{"lineNumber":242,"author":{"gitId":"verydaftpunk"},"content":"    /* Method that saves Tasks in the hard disk whenever called","lastModifiedDate":"2023-01-31"},{"lineNumber":243,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":244,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-02-14"},{"lineNumber":245,"author":{"gitId":"verydaftpunk"},"content":"    public void save() {","lastModifiedDate":"2023-01-31"},{"lineNumber":246,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":247,"author":{"gitId":"verydaftpunk"},"content":"            FileWriter info \u003d new FileWriter(\"./data/data.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":248,"author":{"gitId":"verydaftpunk"},"content":"            for (Task task : ListOfStuff.getSkittlesList()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":249,"author":{"gitId":"verydaftpunk"},"content":"                info.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":250,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":251,"author":{"gitId":"verydaftpunk"},"content":"            info.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":252,"author":{"gitId":"verydaftpunk"},"content":"            System.out.print(\"Tasks have been saved\");","lastModifiedDate":"2023-01-31"},{"lineNumber":253,"author":{"gitId":"verydaftpunk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":254,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(\"Hey an error occurred when saving the data!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":255,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":256,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":257,"author":{"gitId":"verydaftpunk"},"content":"*/","lastModifiedDate":"2023-02-14"},{"lineNumber":258,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-01-31"},{"lineNumber":259,"author":{"gitId":"verydaftpunk"},"content":"    public static void delete (String userTyped) {","lastModifiedDate":"2023-01-20"},{"lineNumber":260,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":261,"author":{"gitId":"verydaftpunk"},"content":"            String rankOfTaskToDelete \u003d userTyped.split(\" \",2)[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":262,"author":{"gitId":"verydaftpunk"},"content":"            int taskToDeleteInt \u003d Integer.parseInt(rankOfTaskToDelete);","lastModifiedDate":"2023-01-20"},{"lineNumber":263,"author":{"gitId":"verydaftpunk"},"content":"            Task deleted \u003d lstOfTasks.remove(taskToDeleteInt - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":264,"author":{"gitId":"verydaftpunk"},"content":"            numOfThings --;","lastModifiedDate":"2023-01-20"},{"lineNumber":265,"author":{"gitId":"verydaftpunk"},"content":"            //making sure every task after point of deletion has its rank updated to -1","lastModifiedDate":"2023-01-20"},{"lineNumber":266,"author":{"gitId":"verydaftpunk"},"content":"            /* for (int i \u003d taskToDeleteInt; i \u003c numOfThings; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":267,"author":{"gitId":"verydaftpunk"},"content":"                int updatedRank \u003d lstOfTasks.get(i).getRank() - 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":268,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":269,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task.\\n\" + deleted.toString()","lastModifiedDate":"2023-01-20"},{"lineNumber":270,"author":{"gitId":"verydaftpunk"},"content":"                    + \"\\nNow you have \" + numOfThings + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":271,"author":{"gitId":"verydaftpunk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":272,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(\"You didn\u0027t enter a valid task to delete man!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":273,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":274,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":275,"author":{"gitId":"verydaftpunk"},"content":"    */","lastModifiedDate":"2023-01-31"},{"lineNumber":276,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":277,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":278,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":279,"author":{"gitId":"verydaftpunk"},"content":"     * Displays a long line for visual effects.","lastModifiedDate":"2023-02-14"},{"lineNumber":280,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":281,"author":{"gitId":"verydaftpunk"},"content":"    public static String showLine() {","lastModifiedDate":"2023-02-14"},{"lineNumber":282,"author":{"gitId":"verydaftpunk"},"content":"        String line \u003d \"-------------------------------\";","lastModifiedDate":"2023-02-14"},{"lineNumber":283,"author":{"gitId":"verydaftpunk"},"content":"        return line;","lastModifiedDate":"2023-02-14"},{"lineNumber":284,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":285,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-02-14"},{"lineNumber":286,"author":{"gitId":"verydaftpunk"},"content":"    public void begin() {","lastModifiedDate":"2023-01-31"},{"lineNumber":287,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":288,"author":{"gitId":"verydaftpunk"},"content":"        boolean repeatStatus \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":289,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":290,"author":{"gitId":"verydaftpunk"},"content":"        //start by greeting","lastModifiedDate":"2023-01-19"},{"lineNumber":291,"author":{"gitId":"verydaftpunk"},"content":"        hello();","lastModifiedDate":"2023-01-19"},{"lineNumber":292,"author":{"gitId":"verydaftpunk"},"content":"        String input \u003d takingInput.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":293,"author":{"gitId":"verydaftpunk"},"content":"        Instruction instruction \u003d inputToInstruction(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":294,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":295,"author":{"gitId":"verydaftpunk"},"content":"        while (repeatStatus) {","lastModifiedDate":"2023-01-31"},{"lineNumber":296,"author":{"gitId":"verydaftpunk"},"content":"            //String userTyped \u003d takingInput.nextLine().toLowerCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":297,"author":{"gitId":"verydaftpunk"},"content":"            //String frontWord \u003d userTyped.split(\" \",2)[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":298,"author":{"gitId":"verydaftpunk"},"content":"            switch(instruction) {","lastModifiedDate":"2023-01-31"},{"lineNumber":299,"author":{"gitId":"verydaftpunk"},"content":"                case BYE:","lastModifiedDate":"2023-01-31"},{"lineNumber":300,"author":{"gitId":"verydaftpunk"},"content":"                    repeatStatus \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":301,"author":{"gitId":"verydaftpunk"},"content":"                    adios();","lastModifiedDate":"2023-01-19"},{"lineNumber":302,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":303,"author":{"gitId":"verydaftpunk"},"content":"                case LIST:","lastModifiedDate":"2023-01-31"},{"lineNumber":304,"author":{"gitId":"verydaftpunk"},"content":"                    //show user the list in this case","lastModifiedDate":"2023-01-19"},{"lineNumber":305,"author":{"gitId":"verydaftpunk"},"content":"                    ListOfStuff.displayLst();","lastModifiedDate":"2023-01-31"},{"lineNumber":306,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":307,"author":{"gitId":"verydaftpunk"},"content":"                case MARK:","lastModifiedDate":"2023-01-31"},{"lineNumber":308,"author":{"gitId":"verydaftpunk"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":309,"author":{"gitId":"verydaftpunk"},"content":"                        ListOfStuff.completeTask(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":310,"author":{"gitId":"verydaftpunk"},"content":"                        ListOfStuff.refresh();","lastModifiedDate":"2023-01-31"},{"lineNumber":311,"author":{"gitId":"verydaftpunk"},"content":"                    } catch (SkittlesException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":312,"author":{"gitId":"verydaftpunk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":313,"author":{"gitId":"verydaftpunk"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":314,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":315,"author":{"gitId":"verydaftpunk"},"content":"                case TODO:","lastModifiedDate":"2023-01-31"},{"lineNumber":316,"author":{"gitId":"verydaftpunk"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":317,"author":{"gitId":"verydaftpunk"},"content":"                        addAToDo(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":318,"author":{"gitId":"verydaftpunk"},"content":"                    } catch (SkittlesException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":319,"author":{"gitId":"verydaftpunk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":320,"author":{"gitId":"verydaftpunk"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":321,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":322,"author":{"gitId":"verydaftpunk"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-31"},{"lineNumber":323,"author":{"gitId":"verydaftpunk"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":324,"author":{"gitId":"verydaftpunk"},"content":"                        addTimeSensitive(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":325,"author":{"gitId":"verydaftpunk"},"content":"                    } catch (SkittlesException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":326,"author":{"gitId":"verydaftpunk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":327,"author":{"gitId":"verydaftpunk"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":328,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":329,"author":{"gitId":"verydaftpunk"},"content":"                case EVENT:","lastModifiedDate":"2023-01-31"},{"lineNumber":330,"author":{"gitId":"verydaftpunk"},"content":"                    try {","lastModifiedDate":"2023-01-31"},{"lineNumber":331,"author":{"gitId":"verydaftpunk"},"content":"                        addAnEvent(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":332,"author":{"gitId":"verydaftpunk"},"content":"                    } catch (SkittlesException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":333,"author":{"gitId":"verydaftpunk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":334,"author":{"gitId":"verydaftpunk"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":335,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":336,"author":{"gitId":"verydaftpunk"},"content":"                case DELETE:","lastModifiedDate":"2023-01-31"},{"lineNumber":337,"author":{"gitId":"verydaftpunk"},"content":"                    try {","lastModifiedDate":"2023-01-31"},{"lineNumber":338,"author":{"gitId":"verydaftpunk"},"content":"                        ListOfStuff.delete(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":339,"author":{"gitId":"verydaftpunk"},"content":"                        ListOfStuff.refresh();","lastModifiedDate":"2023-01-31"},{"lineNumber":340,"author":{"gitId":"verydaftpunk"},"content":"                    } catch (SkittlesException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":341,"author":{"gitId":"verydaftpunk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":342,"author":{"gitId":"verydaftpunk"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":343,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":344,"author":{"gitId":"verydaftpunk"},"content":"                case FIND:","lastModifiedDate":"2023-02-01"},{"lineNumber":345,"author":{"gitId":"verydaftpunk"},"content":"                    try {","lastModifiedDate":"2023-02-01"},{"lineNumber":346,"author":{"gitId":"verydaftpunk"},"content":"                        find(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":347,"author":{"gitId":"verydaftpunk"},"content":"                    } catch (SkittlesException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":348,"author":{"gitId":"verydaftpunk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":349,"author":{"gitId":"verydaftpunk"},"content":"                    }","lastModifiedDate":"2023-02-01"},{"lineNumber":350,"author":{"gitId":"verydaftpunk"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":351,"author":{"gitId":"verydaftpunk"},"content":"                default:","lastModifiedDate":"2023-01-31"},{"lineNumber":352,"author":{"gitId":"verydaftpunk"},"content":"                    System.out.println(\"Try again fat fingers!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":353,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":354,"author":{"gitId":"verydaftpunk"},"content":"            if (repeatStatus) {","lastModifiedDate":"2023-01-31"},{"lineNumber":355,"author":{"gitId":"verydaftpunk"},"content":"                input \u003d takingInput.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":356,"author":{"gitId":"verydaftpunk"},"content":"                instruction \u003d inputToInstruction(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":357,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":358,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":359,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":360,"author":{"gitId":"verydaftpunk"},"content":"*/","lastModifiedDate":"2023-02-14"},{"lineNumber":361,"author":{"gitId":"verydaftpunk"},"content":"    /*","lastModifiedDate":"2023-02-14"},{"lineNumber":362,"author":{"gitId":"verydaftpunk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":363,"author":{"gitId":"verydaftpunk"},"content":"        Duke skittles \u003d new Duke();","lastModifiedDate":"2023-01-31"},{"lineNumber":364,"author":{"gitId":"verydaftpunk"},"content":"        skittles.begin();","lastModifiedDate":"2023-01-31"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":366,"author":{"gitId":"verydaftpunk"},"content":"*/","lastModifiedDate":"2023-02-14"},{"lineNumber":367,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":368,"author":{"gitId":"verydaftpunk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":369,"author":{"gitId":"verydaftpunk"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-02-05"},{"lineNumber":370,"author":{"gitId":"verydaftpunk"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-02-05"},{"lineNumber":371,"author":{"gitId":"verydaftpunk"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-05"},{"lineNumber":372,"author":{"gitId":"verydaftpunk"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-05"},{"lineNumber":373,"author":{"gitId":"verydaftpunk"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-05"},{"lineNumber":374,"author":{"gitId":"verydaftpunk"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-05"},{"lineNumber":375,"author":{"gitId":"verydaftpunk"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-05"},{"lineNumber":376,"author":{"gitId":"verydaftpunk"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-05"},{"lineNumber":377,"author":{"gitId":"verydaftpunk"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-05"},{"lineNumber":378,"author":{"gitId":"verydaftpunk"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-05"},{"lineNumber":379,"author":{"gitId":"verydaftpunk"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-05"},{"lineNumber":380,"author":{"gitId":"verydaftpunk"},"content":"        stage.show();","lastModifiedDate":"2023-02-05"},{"lineNumber":381,"author":{"gitId":"verydaftpunk"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-02-05"},{"lineNumber":382,"author":{"gitId":"verydaftpunk"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-05"},{"lineNumber":383,"author":{"gitId":"verydaftpunk"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-05"},{"lineNumber":384,"author":{"gitId":"verydaftpunk"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":385,"author":{"gitId":"verydaftpunk"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":386,"author":{"gitId":"verydaftpunk"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":387,"author":{"gitId":"verydaftpunk"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-05"},{"lineNumber":388,"author":{"gitId":"verydaftpunk"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-05"},{"lineNumber":389,"author":{"gitId":"verydaftpunk"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-05"},{"lineNumber":390,"author":{"gitId":"verydaftpunk"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":391,"author":{"gitId":"verydaftpunk"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-05"},{"lineNumber":392,"author":{"gitId":"verydaftpunk"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-02-05"},{"lineNumber":393,"author":{"gitId":"verydaftpunk"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-05"},{"lineNumber":394,"author":{"gitId":"verydaftpunk"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":395,"author":{"gitId":"verydaftpunk"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":396,"author":{"gitId":"verydaftpunk"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":397,"author":{"gitId":"verydaftpunk"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":398,"author":{"gitId":"verydaftpunk"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":399,"author":{"gitId":"verydaftpunk"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":400,"author":{"gitId":"verydaftpunk"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":401,"author":{"gitId":"verydaftpunk"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":402,"author":{"gitId":"verydaftpunk"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-05"},{"lineNumber":403,"author":{"gitId":"verydaftpunk"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-05"},{"lineNumber":404,"author":{"gitId":"verydaftpunk"},"content":"        });","lastModifiedDate":"2023-02-05"},{"lineNumber":405,"author":{"gitId":"verydaftpunk"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-05"},{"lineNumber":406,"author":{"gitId":"verydaftpunk"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-05"},{"lineNumber":407,"author":{"gitId":"verydaftpunk"},"content":"        });","lastModifiedDate":"2023-02-05"},{"lineNumber":408,"author":{"gitId":"verydaftpunk"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-05"},{"lineNumber":409,"author":{"gitId":"verydaftpunk"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-05"},{"lineNumber":410,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":411,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":412,"author":{"gitId":"verydaftpunk"},"content":"     * Iteration 1:","lastModifiedDate":"2023-02-05"},{"lineNumber":413,"author":{"gitId":"verydaftpunk"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-05"},{"lineNumber":414,"author":{"gitId":"verydaftpunk"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-05"},{"lineNumber":415,"author":{"gitId":"verydaftpunk"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-05"},{"lineNumber":416,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":417,"author":{"gitId":"verydaftpunk"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-05"},{"lineNumber":418,"author":{"gitId":"verydaftpunk"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-02-05"},{"lineNumber":419,"author":{"gitId":"verydaftpunk"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-05"},{"lineNumber":420,"author":{"gitId":"verydaftpunk"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-05"},{"lineNumber":421,"author":{"gitId":"verydaftpunk"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-05"},{"lineNumber":422,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":423,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":424,"author":{"gitId":"verydaftpunk"},"content":"     * Iteration 2:","lastModifiedDate":"2023-02-05"},{"lineNumber":425,"author":{"gitId":"verydaftpunk"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-05"},{"lineNumber":426,"author":{"gitId":"verydaftpunk"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-05"},{"lineNumber":427,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":428,"author":{"gitId":"verydaftpunk"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-05"},{"lineNumber":429,"author":{"gitId":"verydaftpunk"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(userInput.getText(), user),","lastModifiedDate":"2023-02-05"},{"lineNumber":430,"author":{"gitId":"verydaftpunk"},"content":"                DialogBox.getDukeDialog(getResponse(userInput.getText()), duke)","lastModifiedDate":"2023-02-05"},{"lineNumber":431,"author":{"gitId":"verydaftpunk"},"content":"        );","lastModifiedDate":"2023-02-05"},{"lineNumber":432,"author":{"gitId":"verydaftpunk"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-05"},{"lineNumber":433,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":434,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":435,"author":{"gitId":"verydaftpunk"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":436,"author":{"gitId":"verydaftpunk"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-05"},{"lineNumber":437,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":438,"author":{"gitId":"verydaftpunk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-05"},{"lineNumber":439,"author":{"gitId":"verydaftpunk"},"content":"        Instruction instruction \u003d parser.inputToCommand(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":440,"author":{"gitId":"verydaftpunk"},"content":"        return instruction.getResponse(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":441,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":442,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":443,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"verydaftpunk":441,"-":2}},{"path":"src/main/java/skittles/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"//Event is one of 3 types of Task, so it must be a child of Task","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"    private final String startTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"    private final String endTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"     * Constructor for an Event.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"     * @param name The name of the event.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"     * @param startTime the start time of the event.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"     * @param endTime the end time of the event","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"    public Event(String name, String startTime, String endTime) {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"        super(name);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"        return \"[E]\" + super.toString() + \" \" + \"(from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"    public String convertToText() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"        return String.format(\"E | %d | %s | %s | %s\", super.getDoneOrNot() ? 1 : 0, super.getName(),","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"                startTime, endTime + System.lineSeparator());","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"verydaftpunk":30}},{"path":"src/main/java/skittles/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"public class Launcher {","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"verydaftpunk":8}},{"path":"src/main/java/skittles/ListOfStuff.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Locale;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import java.util.List;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"import skittles.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"public class ListOfStuff {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    private static ArrayList\u003cTask\u003e skittlesList;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    private static Data data;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"    private static HashMap\u003cString, Boolean\u003e taskHashMap;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    public ListOfStuff(ArrayList\u003cTask\u003e skittlesList, Data data) {","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"        this.skittlesList \u003d skittlesList;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"        this.data \u003d data;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"        this.taskHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"    public static void add(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"        skittlesList.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"     * Shows all Tasks in the list that the user has given to Skittles to store.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"     * Tasks are ordered from least recent to most recent. If no tasks have been given to Skittles,","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"     * the appropriate message is shown.","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"    public static String displayLst() {","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"        String textToDisplayLst \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"        String textForEmptyLst \u003d \"Hey looks like your list is empty man!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"        if (skittlesList \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"            return textForEmptyLst;","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"            for (int i \u003d 0; i \u003c skittlesList.size(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"                textToDisplayLst +\u003d \"\\n\" + (i + 1) + \".\" + skittlesList.get(i).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"            return textToDisplayLst;","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"    /* old displayLst() method","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"    //basically print out the list. must be numbered.","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"    public static void displayLst() {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"        boolean isItMT \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"        StringBuilder txtToDisplay \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"        String nothingMessage \u003d \"Nothing in your list man!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"        for (Task thingInList : skittlesList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"            if (thingInList !\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"                isItMT \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"                txtToDisplay.append(\"\\n\").append(thingInList.getRank()).append(\".\")","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"                        .append(thingInList.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"        if (!isItMT) {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(nothingMessage);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"verydaftpunk"},"content":"            System.out.println(txtToDisplay);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"    */","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"verydaftpunk"},"content":"     * Updates the marking of a certain Task as \u0027done\u0027.","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"verydaftpunk"},"content":"     * @param userTyped The entire String that the user has input i.e. \"mark 2\".","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"verydaftpunk"},"content":"     * @throws SkittlesException If an incorrect input is entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"verydaftpunk"},"content":"    public static void completeTask(String userTyped) throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"verydaftpunk"},"content":"        int taskId;","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey you forgot to type the number of the task you wanna mark as done!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"verydaftpunk"},"content":"        String idUserTyped \u003d userTyped.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"verydaftpunk"},"content":"            taskId \u003d Integer.parseInt(idUserTyped);","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"verydaftpunk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"Hey we\u0027re detecting an error; do input a number behind \u0027mark\u0027 if you haven\u0027t!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"verydaftpunk"},"content":"        String text \u003d \"Hey we can\u0027t seem to find the task ID you typed!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"verydaftpunk"},"content":"        if (skittlesList.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"verydaftpunk"},"content":"            text \u003d \"Hey your list is empty man! Try adding a Task first!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"verydaftpunk"},"content":"        } else if (taskId \u003c\u003d skittlesList.size()){","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"verydaftpunk"},"content":"            Task intendedItem \u003d skittlesList.get(taskId - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"verydaftpunk"},"content":"            intendedItem.strike();","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"verydaftpunk"},"content":"            text \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + \" \" + intendedItem.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"verydaftpunk"},"content":"        System.out.println(text);","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"verydaftpunk"},"content":"     * Deletes a specific task that Skittles has stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"verydaftpunk"},"content":"     * @param input The entire String that the user has input i.e. \"delete 2\".","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"verydaftpunk"},"content":"     * @throws SkittlesException If an incorrect input is entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"verydaftpunk"},"content":"    public static void delete(String input) throws SkittlesException{","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"verydaftpunk"},"content":"        int itemNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"verydaftpunk"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"☹ Oops! Looks like you are missing the number of the task you wish to delete! Try again :-)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"verydaftpunk"},"content":"        String numberInput \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"verydaftpunk"},"content":"            itemNumber \u003d Integer.parseInt(numberInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"verydaftpunk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"You may have entered something incorrectly. Try adding a number behind \u0027delete\u0027!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"verydaftpunk"},"content":"        String message \u003d \"☹ Oops! You may have incorrectly entered a number. Try again!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"verydaftpunk"},"content":"        if (itemNumber \u003e skittlesList.size()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"verydaftpunk"},"content":"            throw new SkittlesException(\"☹ Oops! Looks like you are trying to delete something that is not in your list! Try again!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"verydaftpunk"},"content":"        Task removed \u003d skittlesList.remove(itemNumber - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"verydaftpunk"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + removed.toString() + \"\\nNow you have \" + skittlesList.size()","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"verydaftpunk"},"content":"                + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"verydaftpunk"},"content":"     * Updates the skittlesList.","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"verydaftpunk"},"content":"     * @throws SkittlesException if cannot be updated.","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"verydaftpunk"},"content":"    public static void refresh() throws SkittlesException {","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"verydaftpunk"},"content":"        Data.updateTaskInTxt(skittlesList);","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"verydaftpunk"},"content":"     * Searches the entire skittlesList for Tasks that contain the keyword.","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"verydaftpunk"},"content":"     * @param wordUserIsSearching User input that they wish to search for.","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"verydaftpunk"},"content":"     * @return An ArrayList of Tasks that contain the keyword.","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"verydaftpunk"},"content":"    public static ArrayList\u003cTask\u003e findInList(String wordUserIsSearching) {","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"verydaftpunk"},"content":"        ArrayList\u003cTask\u003e outcome \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"verydaftpunk"},"content":"        for (Task task : skittlesList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"verydaftpunk"},"content":"            if (task.toString().toLowerCase().contains(wordUserIsSearching.toLowerCase())) {","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"verydaftpunk"},"content":"                outcome.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"verydaftpunk"},"content":"        return outcome;","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"verydaftpunk"},"content":"    public static ArrayList\u003cTask\u003e getSkittlesList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"verydaftpunk"},"content":"        return ListOfStuff.skittlesList;","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"verydaftpunk"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-14"},{"lineNumber":154,"author":{"gitId":"verydaftpunk"},"content":"        return skittlesList.size();","lastModifiedDate":"2023-02-14"},{"lineNumber":155,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":156,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":157,"author":{"gitId":"verydaftpunk"},"content":"    public Task removeTask(int i) {","lastModifiedDate":"2023-02-14"},{"lineNumber":158,"author":{"gitId":"verydaftpunk"},"content":"        return skittlesList.remove(i);","lastModifiedDate":"2023-02-14"},{"lineNumber":159,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":160,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":161,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":162,"author":{"gitId":"verydaftpunk"},"content":"     * Check if skittlesList is empty.","lastModifiedDate":"2023-02-14"},{"lineNumber":163,"author":{"gitId":"verydaftpunk"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":164,"author":{"gitId":"verydaftpunk"},"content":"     * @return Boolean relating to if skittlesList is empty or not.","lastModifiedDate":"2023-02-14"},{"lineNumber":165,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":166,"author":{"gitId":"verydaftpunk"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-14"},{"lineNumber":167,"author":{"gitId":"verydaftpunk"},"content":"        return skittlesList.isEmpty();","lastModifiedDate":"2023-02-14"},{"lineNumber":168,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":169,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":170,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":171,"author":{"gitId":"verydaftpunk"},"content":"     * Checks if task is in the list that skittles has.","lastModifiedDate":"2023-02-14"},{"lineNumber":172,"author":{"gitId":"verydaftpunk"},"content":"     * @param task Task that is to be checked with.","lastModifiedDate":"2023-02-14"},{"lineNumber":173,"author":{"gitId":"verydaftpunk"},"content":"     * @return A boolean that will equal true should the task be found.","lastModifiedDate":"2023-02-14"},{"lineNumber":174,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":175,"author":{"gitId":"verydaftpunk"},"content":"    public static boolean contains(Task task) {","lastModifiedDate":"2023-02-14"},{"lineNumber":176,"author":{"gitId":"verydaftpunk"},"content":"        for (Task t : skittlesList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":177,"author":{"gitId":"verydaftpunk"},"content":"            if (t.toString().equals(task.toString())) {","lastModifiedDate":"2023-02-14"},{"lineNumber":178,"author":{"gitId":"verydaftpunk"},"content":"                return true;","lastModifiedDate":"2023-02-14"},{"lineNumber":179,"author":{"gitId":"verydaftpunk"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":180,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":181,"author":{"gitId":"verydaftpunk"},"content":"        return false;","lastModifiedDate":"2023-02-14"},{"lineNumber":182,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":183,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":184,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":185,"author":{"gitId":"verydaftpunk"},"content":"     * Return Task at index i of skittlesList","lastModifiedDate":"2023-02-14"},{"lineNumber":186,"author":{"gitId":"verydaftpunk"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":187,"author":{"gitId":"verydaftpunk"},"content":"     * @param i index of task in skittlesList.","lastModifiedDate":"2023-02-14"},{"lineNumber":188,"author":{"gitId":"verydaftpunk"},"content":"     * @return Task","lastModifiedDate":"2023-02-14"},{"lineNumber":189,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":190,"author":{"gitId":"verydaftpunk"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-02-14"},{"lineNumber":191,"author":{"gitId":"verydaftpunk"},"content":"        return skittlesList.get(i);","lastModifiedDate":"2023-02-14"},{"lineNumber":192,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":193,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":194,"author":{"gitId":"verydaftpunk"},"content":"    public static int numOfThings() {","lastModifiedDate":"2023-01-31"},{"lineNumber":195,"author":{"gitId":"verydaftpunk"},"content":"        return ListOfStuff.skittlesList.size();","lastModifiedDate":"2023-01-31"},{"lineNumber":196,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":197,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"verydaftpunk":197}},{"path":"src/main/java/skittles/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"    private final Duke duke \u003d new Duke(\"./data/data.txt\");","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"            stage.setTitle(\"Skittles Assistant\");","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().printMessage(\"Hello I\u0027m Skittles.\\nHow may I assist?\");","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"            stage.show();","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"verydaftpunk":32}},{"path":"src/main/java/skittles/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"        );","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"     * Creates one dialog that echoes user input and one for Duke\u0027s output then appends them to","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"     * dialog container.","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"                DialogBox.getDukeDialog(message, dukeImage)","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"        );","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"verydaftpunk":62}},{"path":"src/main/java/skittles/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import skittles.instruction.*;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import skittles.instruction.Instruction;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"public class Parser {","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    private final ListOfStuff skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"    private final Data data;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"     * Constructor for Parser","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"     * @param skittlesList Lists of Tasks taken in.","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"     * @param data Data object.","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"    public Parser(ListOfStuff skittlesList, Data data) {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"        this.skittlesList \u003d skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"        this.data \u003d data;","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"     * Interpret what the user has entered as an input and categorises it into a Command.","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"     * @return The correct command that is interpreted from the user input.","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"    public Instruction inputToCommand(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"        String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"        String command \u003d inputs[0].toLowerCase();","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"        switch (command) {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"                return new ExitInstruction();","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"            case \"list\":","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"                return new ListInstruction(skittlesList);","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"                return new DeleteInstruction(skittlesList);","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"                return new DoneInstruction(skittlesList);","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"                return new UndoneInstruction(skittlesList);","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"            case \"find\":","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"                return new FindInstruction(skittlesList);","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"            case \"sort\":","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"                return new SortInstruction(skittlesList);","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"            case \"event\":","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"                return new AddInstruction(skittlesList, data, command);","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"            default:","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"                //If no cases above are entered,skittles will not understand the command and prompt the user.","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"                return new WrongInstruction();","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"verydaftpunk":54}},{"path":"src/main/java/skittles/SkittlesException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"public class SkittlesException extends Exception {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"    public SkittlesException (String skittlesErrorText) {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"        super(skittlesErrorText);","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"verydaftpunk":6}},{"path":"src/main/java/skittles/SortTasksByName.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":" * Sorts task in alphabetical order.","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"public class SortTasksByName implements Comparator\u003cTask\u003e {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    public int compare(Task a, Task b)","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"        return a.toString().compareTo(b.toString());","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"verydaftpunk":17}},{"path":"src/main/java/skittles/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"    private String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"    private boolean doneOrNot;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"    //private int rank;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"    //private static int numOfThings \u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    //constructor","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"        this.doneOrNot \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"        //this.rank \u003d numOfThings;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"        //numOfThings +\u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"    public String isCompleted() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"        if (!doneOrNot) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"            return \"[ ] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"            return \"[X] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"    public void strike() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"        this.doneOrNot \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"    public void unstrike() {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"        this.doneOrNot \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"    public String getName() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"        return name;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"    public String getCompletedOrNotSign() {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"        if (!doneOrNot) {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"            return \"[ ] \";","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"            return \"[X] \";","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"    /* public int getRank() {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"        return rank;","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"    } */","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"    /* public void setRank(int n) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"        this.rank \u003d n;","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"    } */","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"    public Boolean getDoneOrNot() {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"        return this.doneOrNot;","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"        return this.getCompletedOrNotSign() + this.name;","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"    public abstract String convertToText();","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"verydaftpunk":64}},{"path":"src/main/java/skittles/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"//ToDo is one of 3 types of Task, so it must be a child of Task","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"    //constructor just use parent class Task\u0027s constructor","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"        super(name);","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"        //making sure we add the \"[T]\"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    public String convertToText() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"        return String.format(\"T | %d | %s\", super.getDoneOrNot() ? 1 : 0, super.getName() + System.lineSeparator());","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"verydaftpunk":21}},{"path":"src/main/java/skittles/instruction/AddInstruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles.instruction;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"import skittles.Data;","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import skittles.Deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import skittles.SkittlesException;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import skittles.Event;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import skittles.ListOfStuff;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import skittles.ToDo;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"import skittles.Duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"import skittles.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"public class AddInstruction extends Instruction {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    private final ListOfStuff skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    private final Data data;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"    private final String taskCategory;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"     * Constructor for AddCommand","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"     * @param skittlesList list of Tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"     * @param data Data of Tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"     * @param taskCategory Task category itself","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"    public AddInstruction(ListOfStuff skittlesList, Data data, String taskCategory) {","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"        this.skittlesList \u003d skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"        this.data \u003d data;","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"        assert taskCategory.matches(\"todo|event|deadline\");","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"        this.taskCategory \u003d taskCategory;","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"        switch (taskCategory) {","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"                return addTimeSensitive(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"            case \"event\":","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"                return addAnEvent(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"                return addAToDo(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"            default:","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"                return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"     * Adds a Deadline to all Tasks that Skittles has stored.","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"     * @param userTyped The entire String that the user has input i.e. \"deadline xxx /by yyy\".","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"verydaftpunk"},"content":"    private String addTimeSensitive(String userTyped) {","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"verydaftpunk"},"content":"        // First check if the user has only input the one word \"deadline\".","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"verydaftpunk"},"content":"            return \"Hey it looks like you are missing the description and the deadline date!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"verydaftpunk"},"content":"        // If \"deadline\" is entered with more words, check information.","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"verydaftpunk"},"content":"        String[] information \u003d userTyped.split(\" \", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"verydaftpunk"},"content":"        String [] description \u003d information[1].split(\"/by \", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"verydaftpunk"},"content":"        //In the case where date is not entered.","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"verydaftpunk"},"content":"        if (description.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"verydaftpunk"},"content":"            return \"Hey you are missing the deadline date! Please attempt again.\";","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"verydaftpunk"},"content":"        Deadline newDeadline \u003d new Deadline(description[0], description[1]);","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"verydaftpunk"},"content":"            Data.addInsideFile(newDeadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"verydaftpunk"},"content":"        } catch (SkittlesException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"verydaftpunk"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"verydaftpunk"},"content":"        skittlesList.add(newDeadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"verydaftpunk"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + newDeadline.toString() + \"\\nNow you have \" + ListOfStuff.numOfThings() + \" tasks in the list\";","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"verydaftpunk"},"content":"     * Adds an Event to all Tasks that Skittles has stored.","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"verydaftpunk"},"content":"     * @param userTyped The entire String that the user has input i.e. \"event xxx /from yyy /to zzz\".","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"verydaftpunk"},"content":"    private String addAnEvent(String userTyped) {","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"verydaftpunk"},"content":"        //Start by checking if user only inputted one word \"event\"","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \",2).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"verydaftpunk"},"content":"            return \"Hey you didn\u0027t type the event and the time range!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"verydaftpunk"},"content":"        String[] generalInfo \u003d userTyped.split(\" \",2);","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"verydaftpunk"},"content":"        String[] eventAndEntireTimeRange\u003d generalInfo[1].split(\" /from \",2);","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"verydaftpunk"},"content":"        String[] startAndEndTime \u003d eventAndEntireTimeRange[1].split(\" /to \",2);","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"verydaftpunk"},"content":"        //next possibility the word \"event\" is typed with actual event but no time range","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \",2)[1].split(\" /from \",2).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"verydaftpunk"},"content":"            return \"Hey looks like you\u0027re missing a time range!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"verydaftpunk"},"content":"        String actualEvent \u003d eventAndEntireTimeRange[0];","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"verydaftpunk"},"content":"        String startTime \u003d startAndEndTime[0];","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"verydaftpunk"},"content":"        String endTime \u003d startAndEndTime[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"verydaftpunk"},"content":"        Event suitAndTie \u003d new Event(actualEvent, startTime, endTime);","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"verydaftpunk"},"content":"        skittlesList.add(suitAndTie);","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"verydaftpunk"},"content":"            Data.addInsideFile(suitAndTie);","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"verydaftpunk"},"content":"        } catch (SkittlesException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"verydaftpunk"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"verydaftpunk"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + suitAndTie.toString() +","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"verydaftpunk"},"content":"                \"\\nNow you have \" + ListOfStuff.numOfThings() + \" tasks in the list\";","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"verydaftpunk"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"verydaftpunk"},"content":"     * Adds a Todo to all Tasks that Skittles has stored.","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"verydaftpunk"},"content":"     * @param userTyped The entire String that the user has input i.e. \"todo xxx\".","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"verydaftpunk"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"verydaftpunk"},"content":"    private String addAToDo(String userTyped) {","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"verydaftpunk"},"content":"        //firstly we check if the user only inputted one word \"todo\"","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"verydaftpunk"},"content":"        if (userTyped.split(\" \",2).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"verydaftpunk"},"content":"            return \"Hey you didn\u0027t include a todo!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"verydaftpunk"},"content":"        //otherwise if todo is inputted with other words, check the info","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"verydaftpunk"},"content":"        String[] generalInfo \u003d userTyped.split(\" \",2);","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"verydaftpunk"},"content":"        ToDo mustDo \u003d new ToDo(generalInfo[1]);","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"verydaftpunk"},"content":"        skittlesList.add(mustDo);","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"verydaftpunk"},"content":"            Data.addInsideFile(mustDo);","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"verydaftpunk"},"content":"        } catch (SkittlesException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"verydaftpunk"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"verydaftpunk"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + mustDo.toString() +","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"verydaftpunk"},"content":"                \"\\nNow you have \" + ListOfStuff.numOfThings() + \" tasks in the list.\";","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"verydaftpunk":126}},{"path":"src/main/java/skittles/instruction/DeleteInstruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles.instruction;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import skittles.SkittlesException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import skittles.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import skittles.ListOfStuff;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import java.util.List;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"public class DeleteInstruction extends Instruction {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"    private final ListOfStuff skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    public DeleteInstruction(ListOfStuff skittlesList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"        this.skittlesList \u003d skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"        int itemNumber \u003d 0;","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"            return \"☹ Oops! Looks like you are missing the number of the task you wish to delete! Try again :-)\";","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"        String numberInput \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"            itemNumber \u003d Integer.parseInt(numberInput);","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"            return \"You may have entered something incorrectly. Try adding a number behind \u0027delete\u0027!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"        String message \u003d \"☹ Oops! You may have incorrectly entered a number. Try again!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"        if (itemNumber \u003e skittlesList.getSize()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"            return \"☹ Oops! Looks like you are trying to delete something that is not in your list! Try again!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"        Task removed \u003d skittlesList.removeTask(itemNumber - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"            skittlesList.refresh();","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"        } catch (SkittlesException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"            return \"Oops!, we are unable to update your list! Try again!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + removed.toString() + \"\\nNow you have \" + skittlesList.getSize()","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"                + \" tasks in the list\";","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"verydaftpunk":42}},{"path":"src/main/java/skittles/instruction/DoneInstruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles.instruction;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import skittles.SkittlesException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import skittles.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import skittles.ListOfStuff;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"import java.util.List;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"public class DoneInstruction extends Instruction {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"    private final ListOfStuff skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    public DoneInstruction(ListOfStuff skittlesList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"        this.skittlesList \u003d skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"        int itemNumber;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"            return \"Oops! Looks like you are missing the task number you wish to mark as done!\"","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"                    + \" Try again :-)\";","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"        String numberInput \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"            itemNumber \u003d Integer.parseInt(numberInput);","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"            return \"You may have entered something incorrectly. \"","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"                    + \"Try adding a number behind \u0027done\u0027!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"        String message \u003d \"Oops! I cannot seem to find that task number. Try again!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"        if (skittlesList.isEmpty()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"            message \u003d \"Oops! Your list is empty! Try adding a Task first!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"        } else if (itemNumber \u003c\u003d skittlesList.getSize()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"            Task targetItem \u003d skittlesList.getTask(itemNumber - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"            targetItem.strike();","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"            message \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + \" \" + targetItem.toString();","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"            skittlesList.refresh();","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"verydaftpunk"},"content":"        } catch (SkittlesException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"verydaftpunk"},"content":"            return \"Oops we can\u0027t update your list man! Try again!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"verydaftpunk"},"content":"        return message;","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"verydaftpunk":48}},{"path":"src/main/java/skittles/instruction/ExitInstruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles.instruction;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"public class ExitInstruction extends Instruction {","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"    public ExitInstruction() {}","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    public boolean canExit() {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"        return true;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"        String exitText \u003d \"Bye man hope to see you again soon!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"        return exitText;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"verydaftpunk":17}},{"path":"src/main/java/skittles/instruction/FindInstruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles.instruction;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import skittles.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import skittles.ListOfStuff;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"public class FindInstruction extends Instruction {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"    private final ListOfStuff skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    public FindInstruction(ListOfStuff dukeList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"        this.skittlesList \u003d dukeList;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"            return \"Oops! Looks like you are missing the keyword you wish to search! Try again :-)\";","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"        if (input.split(\" \", 2).length \u003e 2) {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"            return \"Oops! Looks like you are searching for multiple keywords! Try again with one keyword:-)\";","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"        String[] information \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"        String keyword \u003d information[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"        ArrayList\u003cTask\u003e results \u003d skittlesList.findInList(keyword);","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"        for (int i \u003d 1; i \u003c\u003d results.size(); i++) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"            output \u003d output.concat(i + \".\" + results.get(i - 1).toString() + \"\\n\");","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"        if (!results.isEmpty()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"            return output;","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"        } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"            return \"There are no such matches in your list!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"verydaftpunk":37}},{"path":"src/main/java/skittles/instruction/Instruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles.instruction;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":" * This encapsulates all Commands that can be understood by Duke.","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"public abstract class Instruction {","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    public abstract String getResponse(String input);","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"    public boolean canExit() {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"        return false;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    };","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"verydaftpunk":13}},{"path":"src/main/java/skittles/instruction/ListInstruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles.instruction;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import skittles.ListOfStuff;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import java.util.List;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"public class ListInstruction extends Instruction {","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"    private final ListOfStuff skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"    public ListInstruction(ListOfStuff skittlesList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"        this.skittlesList \u003d skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"        return skittlesList.displayLst();","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"verydaftpunk":19}},{"path":"src/main/java/skittles/instruction/SortInstruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles.instruction;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import skittles.Data;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import skittles.ListOfStuff;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"import skittles.SkittlesException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"import skittles.SortTasksByName;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"import skittles.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"public class SortInstruction extends Instruction {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    private static ListOfStuff skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"    public SortInstruction(ListOfStuff skittlesList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"        this.skittlesList \u003d skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"            ArrayList\u003cTask\u003e sortSkittlesList \u003d Data.loadUpInfo();","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"            Collections.sort(sortSkittlesList, new SortTasksByName());","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"            skittlesList \u003d new ListOfStuff(sortSkittlesList, new Data(\"./data/data.txt\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"            skittlesList.refresh();","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"            return \"Sorted!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"        } catch (SkittlesException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"            return \"Oops we can\u0027t update your list man! Try again!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"verydaftpunk":32}},{"path":"src/main/java/skittles/instruction/UndoneInstruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles.instruction;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"import skittles.SkittlesException;","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"import skittles.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import skittles.ListOfStuff;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"public class UndoneInstruction extends Instruction {","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"    private final ListOfStuff skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"    public UndoneInstruction(ListOfStuff skittlesList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"        this.skittlesList \u003d skittlesList;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"        int itemNumber;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"            return \"Oops! Looks like you are missing the task number you wish to unmark!\"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"                    + \" Try again :-)\";","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"verydaftpunk"},"content":"        String numberInput \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"verydaftpunk"},"content":"            itemNumber \u003d Integer.parseInt(numberInput);","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"verydaftpunk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"verydaftpunk"},"content":"            return \"You may have entered something incorrectly. \"","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"verydaftpunk"},"content":"                    + \"Try adding a number behind \u0027undone\u0027!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"verydaftpunk"},"content":"        String message \u003d \"Oops! I cannot seem to find that task number. Try again!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"verydaftpunk"},"content":"        if (skittlesList.isEmpty()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"verydaftpunk"},"content":"            message \u003d \"Oops! Your list is empty! Try adding a Task first!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"verydaftpunk"},"content":"        } else if (itemNumber \u003c\u003d skittlesList.getSize()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"verydaftpunk"},"content":"            Task targetItem \u003d skittlesList.getTask(itemNumber - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"verydaftpunk"},"content":"            targetItem.unstrike();","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"verydaftpunk"},"content":"            message \u003d \"Nice! I\u0027ve marked this task as not done:\\n\" + \" \" + targetItem.toString();","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"verydaftpunk"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"verydaftpunk"},"content":"            skittlesList.refresh();","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"verydaftpunk"},"content":"        } catch (SkittlesException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"verydaftpunk"},"content":"            return \"Oops we can\u0027t update your list man! Try again!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"verydaftpunk"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"verydaftpunk"},"content":"        return message;","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"verydaftpunk":42}},{"path":"src/main/java/skittles/instruction/WrongInstruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles.instruction;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"public class WrongInstruction extends Instruction {","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"    public WrongInstruction() {}","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means man!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"verydaftpunk":11}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"verydaftpunk":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"skittles.MainWindow\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"verydaftpunk"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"verydaftpunk"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"verydaftpunk"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"verydaftpunk"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"verydaftpunk"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"verydaftpunk"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"verydaftpunk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"verydaftpunk"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"verydaftpunk":19}},{"path":"src/test/java/skittles/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    public void DeadlineToStringTest(){","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"        assertEquals(String.format(\"[D][] %s\\n\",\"Eat chocolate by tomorrow\"),new Deadline(\"Eat chocolate\", \"tomorrow\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"verydaftpunk":11}},{"path":"src/test/java/skittles/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"verydaftpunk"},"content":"package skittles;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"verydaftpunk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"verydaftpunk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"verydaftpunk"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"verydaftpunk"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"verydaftpunk"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"verydaftpunk"},"content":"    public void TodoStringTest(){","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"verydaftpunk"},"content":"        assertEquals(String.format(\"[T][] %s\\n\", \"Borrow book\"), new ToDo(\"Borrow book\").toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"verydaftpunk"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"verydaftpunk"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"verydaftpunk":11}}]
