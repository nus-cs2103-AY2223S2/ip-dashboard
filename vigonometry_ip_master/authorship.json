[{"path":"src/main/java/Leo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"import java.util.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"public class Leo {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"    public static void main(String[] args) throws LeoException{","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"        // String logo \u003d \" ____ _ \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"        // + \"| _ \\\\ _ _| | _____ \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"        // + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"        // + \"| |_| | |_| | \u003c __/\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"        // + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"        System.out.println(\"Hello from Argentina, I\u0027m Leo!\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"        new Leo().start();","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"    public void start() throws LeoException{","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"        String cmd \u003d sc.nextLine(); // reads in command fed by user","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"        while (!cmd.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"            processRequest(cmd);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"            cmd \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"        processRequest(cmd);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"        sc.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    private void addTask(String taskName, char type) throws LeoException{","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"        if (taskName.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"            taskList.add(Task.createTask(taskName, type));","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"            System.out.printf(\"added: %s\\n\", taskList.get(taskList.size() - 1));","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"            System.out.printf(\"You have %d tasks in your list, vamos, get moving!\\n\", taskList.size());","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"    private void deleteTask(int taskId) throws LeoException{","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"            throw new EmptyDeletionException();","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"            String taskDesc \u003d taskList.remove(taskId - 1).toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"            System.out.printf(\"Alright! I\u0027ve removed this from your list: %s\\n\", taskDesc);","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"            System.out.printf(\"You have %d tasks in your list, vamos, get moving!\\n\", taskList.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"    private void processRequest(String cmd) throws LeoException{","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        for (int i \u003d 0; i \u003c 25; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"            System.out.print(\"*\");","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        System.out.println();","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        if (cmd.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"            System.out.println(\"It was nice talking, see you soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"                System.out.println(\"You have no tasks to do!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"                System.out.println(\"Here are your tasks you legend: \");","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"                    System.out.printf(\"%d) %s\\n\", i + 1, taskList.get(i));","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"        } else if (cmd.contains(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"                System.out.println(\"You have no tasks to mark!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"                String[] cmdArr \u003d cmd.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"                int cmdIdx \u003d Integer.parseInt(cmdArr[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"                if (cmdArr[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"                    taskList.get(cmdIdx).setDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"                    System.out.println(\"Well done on completing the task! Let me mark that as done! Campeon del mundo!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"                } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"                    taskList.get(cmdIdx).resetDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"                    System.out.println(\"Ok, I\u0027ve marked that as not done! Please get to it :(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"                System.out.printf(\"  %s\\n\", taskList.get(cmdIdx));","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"        } else if (cmd.contains(\"delete\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"            String[] cmdArr \u003d cmd.split(\" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"            if (cmdArr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"                throw new EmptyCommandException();","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"            int cmdIdx \u003d Integer.parseInt(cmdArr[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"            deleteTask(cmdIdx);","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"        ","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"        else {","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"            char cmdlet \u003d cmd.toLowerCase().charAt(0);","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"            switch (cmdlet) {","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"                case \u0027t\u0027:","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"                    addTask(cmd, \u0027t\u0027);","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"                case \u0027d\u0027:","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"                    addTask(cmd, \u0027d\u0027);","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"                case \u0027e\u0027:","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"                    addTask(cmd, \u0027e\u0027);","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"                default:","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"        for (int i \u003d 0; i \u003c 25; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"            System.out.print(\"*\");","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"        System.out.println();","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"vigonometry"},"content":"class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"vigonometry"},"content":"    enum Type {TODO, DEADLINE, EVENT};","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"    private String taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"    private Type type;","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"    private Task(String taskName, char type) {","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"vigonometry"},"content":"        this.type \u003d type \u003d\u003d \u0027d\u0027 ? Type.DEADLINE : type \u003d\u003d \u0027e\u0027 ? Type.EVENT : Type.TODO;","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"vigonometry"},"content":"    private char getType() {","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"vigonometry"},"content":"        return type \u003d\u003d Type.DEADLINE ? \u0027D\u0027 : type \u003d\u003d Type.EVENT ? \u0027E\u0027 : \u0027T\u0027;","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"vigonometry"},"content":"    public static Task createTask(String taskName, char type) throws LeoException {","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"vigonometry"},"content":"        if (type \u003d\u003d \u0027d\u0027) {","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"vigonometry"},"content":"            String[] taskData \u003d taskName.split(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"vigonometry"},"content":"            if (taskData.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"vigonometry"},"content":"                throw new MissingDeadlineException();","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"vigonometry"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"vigonometry"},"content":"            return new Deadline(taskName.substring(9).split(\"/\")[0], type, taskName.split(\"/\")[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"vigonometry"},"content":"        } if (type \u003d\u003d \u0027e\u0027) { ","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"vigonometry"},"content":"            String[] taskData \u003d taskName.split(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"vigonometry"},"content":"            if (taskData.length \u003c 3) {","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"vigonometry"},"content":"                throw new MissingTimelineException();","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"vigonometry"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"vigonometry"},"content":"            return new Event(taskName.substring(6).split(\"/\")[0], type, taskName.split(\"/\")[1], taskName.split(\"/\")[2]);","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"vigonometry"},"content":"        return new Todo(taskName.substring(5), type);","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"vigonometry"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"vigonometry"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"vigonometry"},"content":"    public void resetDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"vigonometry"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"vigonometry"},"content":"    public char getDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"vigonometry"},"content":"        return isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"vigonometry"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"vigonometry"},"content":"        return String.format(\"[%c][%c] %s\", getType(), getDone(), taskName);","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"vigonometry"},"content":"    private static class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"vigonometry"},"content":"        public Todo(String taskName, char type) {","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"vigonometry"},"content":"            super(taskName, type);","lastModifiedDate":"2023-01-19"},{"lineNumber":168,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"vigonometry"},"content":"    private static class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"vigonometry"},"content":"        String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"vigonometry"},"content":"        public Deadline(String taskName, char type, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":175,"author":{"gitId":"vigonometry"},"content":"            super(taskName, type);","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"vigonometry"},"content":"            this.by \u003d by.substring(3);","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"vigonometry"},"content":"        public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"vigonometry"},"content":"            return String.format(\"%s (by: %s)\", super.toString(), this.by);","lastModifiedDate":"2023-01-19"},{"lineNumber":182,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":183,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":184,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"vigonometry"},"content":"    private static class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"vigonometry"},"content":"        String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"vigonometry"},"content":"        String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"vigonometry"},"content":"        public Event(String taskName, char type, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"vigonometry"},"content":"            super(taskName, type);","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"vigonometry"},"content":"            this.from \u003d from.substring(5);","lastModifiedDate":"2023-01-19"},{"lineNumber":192,"author":{"gitId":"vigonometry"},"content":"            this.to \u003d to.substring(3);","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"vigonometry"},"content":"        public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":197,"author":{"gitId":"vigonometry"},"content":"            return String.format(\"%s (from: %s, to: %s)\", super.toString(), from, to);","lastModifiedDate":"2023-01-19"},{"lineNumber":198,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":199,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":200,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":201,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":202,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":203,"author":{"gitId":"vigonometry"},"content":"class LeoException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":204,"author":{"gitId":"vigonometry"},"content":"    LeoException(String exceptionStr) {","lastModifiedDate":"2023-01-19"},{"lineNumber":205,"author":{"gitId":"vigonometry"},"content":"        super(exceptionStr);","lastModifiedDate":"2023-01-19"},{"lineNumber":206,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":207,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":208,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":209,"author":{"gitId":"vigonometry"},"content":"class EmptyCommandException extends LeoException {","lastModifiedDate":"2023-01-20"},{"lineNumber":210,"author":{"gitId":"vigonometry"},"content":"    EmptyCommandException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":211,"author":{"gitId":"vigonometry"},"content":"        super(\"Command description cannot be empty but...can you do it on a rainy night in Stoke?\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":212,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":213,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":214,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":215,"author":{"gitId":"vigonometry"},"content":"class EmptyTaskException extends LeoException {","lastModifiedDate":"2023-01-19"},{"lineNumber":216,"author":{"gitId":"vigonometry"},"content":"    EmptyTaskException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":217,"author":{"gitId":"vigonometry"},"content":"        super(\"Task description cannot be empty but...can you do it on a rainy night in Stoke?\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":218,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":219,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":220,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":221,"author":{"gitId":"vigonometry"},"content":"class InvalidCommandException extends LeoException {","lastModifiedDate":"2023-01-20"},{"lineNumber":222,"author":{"gitId":"vigonometry"},"content":"    InvalidCommandException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":223,"author":{"gitId":"vigonometry"},"content":"        super(\"I\u0027m sorry, I don\u0027t know what you want. ¿Que miras bobo?\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":224,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":225,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":226,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":227,"author":{"gitId":"vigonometry"},"content":"class MissingDeadlineException extends LeoException {","lastModifiedDate":"2023-01-19"},{"lineNumber":228,"author":{"gitId":"vigonometry"},"content":"    MissingDeadlineException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":229,"author":{"gitId":"vigonometry"},"content":"        super(\"When is it due bruv? I never make predictions, and I never will.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":230,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":231,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":232,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":233,"author":{"gitId":"vigonometry"},"content":"class MissingTimelineException extends LeoException {","lastModifiedDate":"2023-01-19"},{"lineNumber":234,"author":{"gitId":"vigonometry"},"content":"    MissingTimelineException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":235,"author":{"gitId":"vigonometry"},"content":"        super(\"Not this again, indicate a from and to. I\u0027m as happy as I can be—but I have been happier.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":236,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":237,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":238,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":239,"author":{"gitId":"vigonometry"},"content":"class EmptyDeletionException extends LeoException {","lastModifiedDate":"2023-01-20"},{"lineNumber":240,"author":{"gitId":"vigonometry"},"content":"    EmptyDeletionException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":241,"author":{"gitId":"vigonometry"},"content":"        super(\"Bruh, why are you trying to delete from an empty task list...\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":242,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":243,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"vigonometry":243}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"event 2103T Semi-Auto Test /from 19 Jan 2250 /to 19 Jan 2359","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"deadline 2103T Week 2 Commits /by 19 Jan 2359","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"todo Curl up and cry","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"vigonometry":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"java -classpath ../bin Leo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vigonometry":1,"-":37}}]
