[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"checkstyle {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"weekiat-douze":5,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"E | 1 | project meeting | 2023-08-06T14:00\u003e2023-08-06T16:00","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"T | 0 | read book","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"D | 0 | return book | 2023-02-08T12:00","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"weekiat-douze":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"import duke.repository.Storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"import duke.repository.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":" * Main class of Duke Application","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"     * Constructor of Duke class.","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"     * @param filePath file path to where persistent storage reside.","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"     *  Duke Application\u0027s entry point.","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"     *  Creates a Duke object and calls \u003ccode\u003erun()\u003c/code\u003e.","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"     * @param args command line arguments.","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"     * Starts Duke application.","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"     * Sets up persistent storage and user interface. Begins to receive and process input form user.","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"     * Terminates based on user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"    public void run() {","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"        String userInput \u003d null;","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"        while (!(userInput \u003d ui.readCommand()).equals(\"bye\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"            String[] splitInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"                Command inputCommand \u003d Parser.validateCommand(splitInput[0]);","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"weekiat-douze"},"content":"                switch (inputCommand) {","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"weekiat-douze"},"content":"                case LIST:","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"weekiat-douze"},"content":"                    listTask();","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"weekiat-douze"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"weekiat-douze"},"content":"                case MARK:","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"weekiat-douze"},"content":"                    markTask(splitInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"weekiat-douze"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"weekiat-douze"},"content":"                case UNMARK:","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"weekiat-douze"},"content":"                    unmarkTask(splitInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"weekiat-douze"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"weekiat-douze"},"content":"                case DELETE:","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"weekiat-douze"},"content":"                    deleteTask(splitInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"weekiat-douze"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"weekiat-douze"},"content":"                case TODO:","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"weekiat-douze"},"content":"                    addTodo(splitInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"weekiat-douze"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"weekiat-douze"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"weekiat-douze"},"content":"                    addDeadline(splitInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"weekiat-douze"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"weekiat-douze"},"content":"                case EVENT:","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"weekiat-douze"},"content":"                    addEvent(splitInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"weekiat-douze"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"weekiat-douze"},"content":"                case FIND:","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"weekiat-douze"},"content":"                    findTask(splitInput);","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"weekiat-douze"},"content":"                    break;","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"weekiat-douze"},"content":"                default:","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"weekiat-douze"},"content":"                    throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"weekiat-douze"},"content":"                } //end of switch-case","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"weekiat-douze"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"weekiat-douze"},"content":"                ui.dukeSpeak(dukeException.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"weekiat-douze"},"content":"        } // end of while-loop","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"weekiat-douze"},"content":"        ui.dukeSpeak(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"weekiat-douze"},"content":"        ui.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"weekiat-douze"},"content":"     * Creates and stores user Todo based on user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"weekiat-douze"},"content":"     * Saves to persistent storage and in \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"weekiat-douze"},"content":"     * @param input User input separated into {command, description}.","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"weekiat-douze"},"content":"     * @throws DukeException If user input is invalid, e.g. empty description.","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"weekiat-douze"},"content":"    private void addTodo(String[] input) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"weekiat-douze"},"content":"        Todo tempTodo \u003d Parser.parseTodo(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"weekiat-douze"},"content":"        String saveString \u003d \"T | 0 | \" + tempTodo.getDescription();","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"weekiat-douze"},"content":"        this.storage.saveEntry(saveString);","lastModifiedDate":"2023-02-08"},{"lineNumber":114,"author":{"gitId":"weekiat-douze"},"content":"        this.tasks.addTask(tempTodo);","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"weekiat-douze"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n \" + tempTodo.toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"weekiat-douze"},"content":"        message +\u003d \"\\nNow you have \" + tasks.numTasks() + \" tasks in the list.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"weekiat-douze"},"content":"        ui.dukeSpeak(message);","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"weekiat-douze"},"content":"    private void addDeadline(String[] input) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"weekiat-douze"},"content":"        Deadline tempDeadline \u003d Parser.parseDeadline(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"weekiat-douze"},"content":"        String saveString \u003d \"D | 0 | \" + tempDeadline.getDescription() + \" | \" + tempDeadline.getByDate();","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"weekiat-douze"},"content":"        storage.saveEntry(saveString);","lastModifiedDate":"2023-02-08"},{"lineNumber":126,"author":{"gitId":"weekiat-douze"},"content":"        tasks.addTask(tempDeadline);","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"weekiat-douze"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n \" + tempDeadline.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"weekiat-douze"},"content":"        message +\u003d \"\\nNow you have \" + tasks.numTasks() + \" tasks in the list.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"weekiat-douze"},"content":"        ui.dukeSpeak(message);","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"weekiat-douze"},"content":"    private void addEvent(String[] input) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":134,"author":{"gitId":"weekiat-douze"},"content":"        Event tempEvent \u003d Parser.parseEvent(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":135,"author":{"gitId":"weekiat-douze"},"content":"        String saveString \u003d \"E | 0 | \" + tempEvent.getDescription() + \" | \"","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"weekiat-douze"},"content":"                + tempEvent.getStartDate() + \"\u003e\" + tempEvent.getEndDate();","lastModifiedDate":"2023-02-08"},{"lineNumber":137,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"weekiat-douze"},"content":"        storage.saveEntry(saveString);","lastModifiedDate":"2023-02-08"},{"lineNumber":139,"author":{"gitId":"weekiat-douze"},"content":"        tasks.addTask(tempEvent);","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"weekiat-douze"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n \" + tempEvent.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"weekiat-douze"},"content":"        message +\u003d \"\\nNow you have \" + tasks.numTasks() + \" tasks in the list.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"weekiat-douze"},"content":"        ui.dukeSpeak(message);","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":144,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"weekiat-douze"},"content":"    private void listTask() {","lastModifiedDate":"2023-02-07"},{"lineNumber":147,"author":{"gitId":"weekiat-douze"},"content":"        String message \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"weekiat-douze"},"content":"        message +\u003d tasks.getTaskList();","lastModifiedDate":"2023-02-07"},{"lineNumber":149,"author":{"gitId":"weekiat-douze"},"content":"        ui.dukeSpeak(message);","lastModifiedDate":"2023-02-07"},{"lineNumber":150,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"weekiat-douze"},"content":"    private void findTask(String[] input) throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":153,"author":{"gitId":"weekiat-douze"},"content":"        String searchString \u003d Parser.parseSearch(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":154,"author":{"gitId":"weekiat-douze"},"content":"        String message \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-08"},{"lineNumber":155,"author":{"gitId":"weekiat-douze"},"content":"        message +\u003d tasks.getMatchingTasks(searchString);","lastModifiedDate":"2023-02-08"},{"lineNumber":156,"author":{"gitId":"weekiat-douze"},"content":"        ui.dukeSpeak(message);","lastModifiedDate":"2023-02-08"},{"lineNumber":157,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":158,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":159,"author":{"gitId":"weekiat-douze"},"content":"    private void markTask(String[] input) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":160,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":161,"author":{"gitId":"weekiat-douze"},"content":"        int taskNum \u003d Parser.parseMarkTask(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":162,"author":{"gitId":"weekiat-douze"},"content":"        if (taskNum \u003e tasks.numTasks() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2023-02-07"},{"lineNumber":163,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\" ☹ OOPS!!! The item number is out of range.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":166,"author":{"gitId":"weekiat-douze"},"content":"        storage.markEntry(taskNum - 1, true);","lastModifiedDate":"2023-02-07"},{"lineNumber":167,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":168,"author":{"gitId":"weekiat-douze"},"content":"        Task oneTask \u003d tasks.getTask(taskNum - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":169,"author":{"gitId":"weekiat-douze"},"content":"        tasks.markTask(taskNum - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":170,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":171,"author":{"gitId":"weekiat-douze"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n \" + oneTask.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"weekiat-douze"},"content":"        ui.dukeSpeak(message);","lastModifiedDate":"2023-02-07"},{"lineNumber":173,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"weekiat-douze"},"content":"    private void unmarkTask(String[] input) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":176,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":177,"author":{"gitId":"weekiat-douze"},"content":"        int taskNum \u003d Parser.parseUnmarkTask(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":178,"author":{"gitId":"weekiat-douze"},"content":"        if (taskNum \u003e tasks.numTasks() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2023-02-07"},{"lineNumber":179,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\" ☹ OOPS!!! The item number is out of range.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":182,"author":{"gitId":"weekiat-douze"},"content":"        storage.markEntry(taskNum - 1, false);","lastModifiedDate":"2023-02-07"},{"lineNumber":183,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":184,"author":{"gitId":"weekiat-douze"},"content":"        Task oneTask \u003d tasks.getTask(taskNum - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":185,"author":{"gitId":"weekiat-douze"},"content":"        tasks.unmarkTask(taskNum - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":186,"author":{"gitId":"weekiat-douze"},"content":"        String message \u003d \"OK! I\u0027ve marked this task as not done yet:\\n \" + oneTask.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"weekiat-douze"},"content":"        ui.dukeSpeak(message);","lastModifiedDate":"2023-02-07"},{"lineNumber":188,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"weekiat-douze"},"content":"    private void deleteTask(String[] input) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":191,"author":{"gitId":"weekiat-douze"},"content":"        int taskNum \u003d Parser.parseDeleteTask(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":192,"author":{"gitId":"weekiat-douze"},"content":"        if (taskNum \u003e tasks.numTasks() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2023-02-07"},{"lineNumber":193,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\" ☹ OOPS!!! The item number is out of range.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":196,"author":{"gitId":"weekiat-douze"},"content":"        storage.deleteEntry(taskNum - 1);","lastModifiedDate":"2023-02-08"},{"lineNumber":197,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":198,"author":{"gitId":"weekiat-douze"},"content":"        Task delTask \u003d tasks.getTask(taskNum - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":199,"author":{"gitId":"weekiat-douze"},"content":"        tasks.deleteTask(taskNum - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":200,"author":{"gitId":"weekiat-douze"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n \" + delTask.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":201,"author":{"gitId":"weekiat-douze"},"content":"        message +\u003d \"\\nNow you have \" + tasks.numTasks() + \" tasks in the list.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":202,"author":{"gitId":"weekiat-douze"},"content":"        ui.dukeSpeak(message);","lastModifiedDate":"2023-02-07"},{"lineNumber":203,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":204,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":205,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"weekiat-douze":204,"-":2}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":" * Deals with interactions with the user","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"public class Ui {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"    private Scanner scan;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"    private final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"    private final String LOGO \u003d \" ____        _\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"    public Ui() {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"        scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"     * Reads and returns user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"     * @return User input from \u003ccode\u003eSystem.in\u003c/code\u003e.","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"        return scan.nextLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"     * Prints welcome message for user.","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"        String welcomeMsg \u003d LOGO + \"\\nHello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"        dukeSpeak(welcomeMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"     * Prints error message for errors while loading tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"        dukeSpeak(\"Unable to load tasks.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"     * Formats and prints the message to user.","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"     * @param message The message to be printed to the user.","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"    public void dukeSpeak(String message) {","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"        String printStr \u003d DIVIDER + \"\\n\" + message + \"\\n\" + DIVIDER;","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"        System.out.println(printStr);","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"     * Clean-up operations for Ui class.","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"    public void close() {","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"weekiat-douze"},"content":"        scan.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weekiat-douze":64}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package duke.command;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"public enum Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"    TODO, DEADLINE, EVENT, MARK, UNMARK, LIST, DELETE, FIND, INVALID","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"weekiat-douze":5}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package duke.command;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":" * Processes user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"public class Parser {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"     * Determines whether command is valid and return appropriate \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"     * @param inputCommand string that to be checked.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"     * @return the appropriate Command enum.","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"    public static Command validateCommand(String inputCommand) {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"        Command[] allCommands \u003d Command.values();","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"        for (int i \u003d 0; i \u003c allCommands.length; i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"            if (allCommands[i] \u003d\u003d Command.INVALID) {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"                break;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"            if (allCommands[i].toString().equals(inputCommand.toUpperCase())) {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"                return allCommands[i];","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"        return Command.INVALID;","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"     * Construct a Todo based on user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"     * @param input user input to be parsed.","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"     * @return a todo constructed from user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"     * @throws DukeException when user input is invalid.","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"    public static Todo parseTodo(String[] input) throws DukeException { //return task","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"        if (input.length \u003d\u003d 1 || input[1].isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"        Todo tempTodo \u003d new Todo(input[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"        return tempTodo;","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"     * Construct a Deadline based on user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"     * @param input user input to be parsed.","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"     * @return a deadline constructed from user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"     * @throws DukeException when user input is invalid.","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"    public static Deadline parseDeadline(String[] input) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"        if (input.length \u003d\u003d 1 || input[1].isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description and due date of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"weekiat-douze"},"content":"        String[] dlString \u003d input[1].split(\" /by \");","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"weekiat-douze"},"content":"        if (dlString.length \u003d\u003d 1 || dlString[1].isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description and due date of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"weekiat-douze"},"content":"            String[] dateTimeString \u003d dlString[1].split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"weekiat-douze"},"content":"            String timeString \u003d \"00:00\";","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"weekiat-douze"},"content":"            if (dateTimeString.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"weekiat-douze"},"content":"                timeString \u003d dateTimeString[1].substring(0, 2) + \":\" + dateTimeString[1].substring(2);","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"weekiat-douze"},"content":"            // format: 2007-12-03T10:15:30","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"weekiat-douze"},"content":"            LocalDateTime dueDate \u003d LocalDateTime.parse(dateTimeString[0] + \"T\" + timeString);","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"weekiat-douze"},"content":"            Deadline tempDeadline \u003d new Deadline(dlString[0], dueDate);","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"weekiat-douze"},"content":"            return tempDeadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"weekiat-douze"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\"Hey! Incorrect format for date-time! Try:  yyyy-mm-dd hhmm\");","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"weekiat-douze"},"content":"     * Construct an Event based on user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"weekiat-douze"},"content":"     * @param input user input to be parsed.","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"weekiat-douze"},"content":"     * @return an event constructed from user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"weekiat-douze"},"content":"     * @throws DukeException when user input is invalid.","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"weekiat-douze"},"content":"    public static Event parseEvent(String[] input) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"weekiat-douze"},"content":"        if (input.length \u003d\u003d 1 || input[1].isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"weekiat-douze"},"content":"        String[] eventString \u003d input[1].split(\" /from \");","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"weekiat-douze"},"content":"        if (eventString.length \u003d\u003d 1 || eventString[1].isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\" ☹ OOPS!!! The start \u0026 end time of an event cannot be empty.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"weekiat-douze"},"content":"        String[] timeSplit \u003d eventString[1].split(\" /to \");","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"weekiat-douze"},"content":"        if (timeSplit.length \u003d\u003d 1 || timeSplit[1].isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\" ☹ OOPS!!! The start \u0026 end time of an event cannot be empty.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"weekiat-douze"},"content":"            String[] dateTimeString \u003d timeSplit[0].split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"weekiat-douze"},"content":"            String startTimeString \u003d \"00:00\";","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"weekiat-douze"},"content":"            if (dateTimeString.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"weekiat-douze"},"content":"                startTimeString \u003d dateTimeString[1].substring(0, 2) + \":\" + dateTimeString[1].substring(2);","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"weekiat-douze"},"content":"            // format: 2007-12-03T10:15:30","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"weekiat-douze"},"content":"            LocalDateTime startDate \u003d LocalDateTime.parse(dateTimeString[0] + \"T\" + startTimeString);","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"weekiat-douze"},"content":"            String endTimeString \u003d timeSplit[1].substring(0, 2) + \":\" + timeSplit[1].substring(2);","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"weekiat-douze"},"content":"            LocalDateTime endDate \u003d LocalDateTime.parse(dateTimeString[0] + \"T\" + endTimeString);","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"weekiat-douze"},"content":"            Event tempEvent \u003d new Event(eventString[0], startDate, endDate);","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"weekiat-douze"},"content":"            return tempEvent;","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"weekiat-douze"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\"Hey! Incorrect format for date-time! Try:  yyyy-mm-dd hhmm\");","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"weekiat-douze"},"content":"     * Extracts task id from user input","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":123,"author":{"gitId":"weekiat-douze"},"content":"     * @param input user input to be parsed.","lastModifiedDate":"2023-02-08"},{"lineNumber":124,"author":{"gitId":"weekiat-douze"},"content":"     * @return task id to identify task to be marked","lastModifiedDate":"2023-02-08"},{"lineNumber":125,"author":{"gitId":"weekiat-douze"},"content":"     * @throws DukeException when user input is invalid","lastModifiedDate":"2023-02-08"},{"lineNumber":126,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":127,"author":{"gitId":"weekiat-douze"},"content":"    public static int parseMarkTask(String[] input) throws DukeException { // returns task id","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"weekiat-douze"},"content":"        if (input.length \u003d\u003d 1 || input[1].isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\" ☹ OOPS!!! The item number is required to mark.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"weekiat-douze"},"content":"        int taskNum \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"weekiat-douze"},"content":"        return taskNum;","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":134,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":135,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":136,"author":{"gitId":"weekiat-douze"},"content":"     * Extracts task id from user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":137,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":138,"author":{"gitId":"weekiat-douze"},"content":"     * @param input user input to be parsed.","lastModifiedDate":"2023-02-08"},{"lineNumber":139,"author":{"gitId":"weekiat-douze"},"content":"     * @return task id to identify task to be unmarked.","lastModifiedDate":"2023-02-08"},{"lineNumber":140,"author":{"gitId":"weekiat-douze"},"content":"     * @throws DukeException when user input is invalid.","lastModifiedDate":"2023-02-08"},{"lineNumber":141,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":142,"author":{"gitId":"weekiat-douze"},"content":"    public static int parseUnmarkTask(String[] input) throws DukeException { // returns task id","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"weekiat-douze"},"content":"        if (input.length \u003d\u003d 1 || input[1].isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":144,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\" ☹ OOPS!!! The item number is required to unmark.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":145,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":146,"author":{"gitId":"weekiat-douze"},"content":"        int taskNum \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":147,"author":{"gitId":"weekiat-douze"},"content":"        return taskNum;","lastModifiedDate":"2023-02-07"},{"lineNumber":148,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":149,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":150,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":151,"author":{"gitId":"weekiat-douze"},"content":"     * Extracts task id from user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":152,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":153,"author":{"gitId":"weekiat-douze"},"content":"     * @param input user input to be parsed.","lastModifiedDate":"2023-02-08"},{"lineNumber":154,"author":{"gitId":"weekiat-douze"},"content":"     * @return task id to identify task to be deleted.","lastModifiedDate":"2023-02-08"},{"lineNumber":155,"author":{"gitId":"weekiat-douze"},"content":"     * @throws DukeException when user input is invalid.","lastModifiedDate":"2023-02-08"},{"lineNumber":156,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":157,"author":{"gitId":"weekiat-douze"},"content":"    public static int parseDeleteTask(String[] input) throws DukeException { // returns task id","lastModifiedDate":"2023-02-07"},{"lineNumber":158,"author":{"gitId":"weekiat-douze"},"content":"        if (input.length \u003d\u003d 1 || input[1].isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":159,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\" ☹ OOPS!!! The item number is required to delete.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":160,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":161,"author":{"gitId":"weekiat-douze"},"content":"        int taskNum \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":162,"author":{"gitId":"weekiat-douze"},"content":"        return taskNum;","lastModifiedDate":"2023-02-07"},{"lineNumber":163,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":164,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":165,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":166,"author":{"gitId":"weekiat-douze"},"content":"     * Extracts search term from user input","lastModifiedDate":"2023-02-08"},{"lineNumber":167,"author":{"gitId":"weekiat-douze"},"content":"     * @param input user input to eb parsed","lastModifiedDate":"2023-02-08"},{"lineNumber":168,"author":{"gitId":"weekiat-douze"},"content":"     * @return the extracted search term.","lastModifiedDate":"2023-02-08"},{"lineNumber":169,"author":{"gitId":"weekiat-douze"},"content":"     * @throws DukeException when user input is invalid.","lastModifiedDate":"2023-02-08"},{"lineNumber":170,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":171,"author":{"gitId":"weekiat-douze"},"content":"    public static String parseSearch(String[] input) throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":172,"author":{"gitId":"weekiat-douze"},"content":"        if (input.length \u003d\u003d 1 || input[1].isEmpty()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":173,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\"You didn\u0027t say what you\u0027re looking for.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":174,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":175,"author":{"gitId":"weekiat-douze"},"content":"        return input[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":176,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":177,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weekiat-douze":177}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package duke.exception;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":" * Handles error in Duke Application.","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"    private String message;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"     * Constructor of DukeException class.","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"     * @param message exception message when thrown.","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"     * Returns the exception message.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"     * @return the exception message.","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"        return message;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"weekiat-douze":27}},{"path":"src/main/java/duke/repository/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package duke.repository;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import java.io.File;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":" * Saves tasks in persistent storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"public class Storage {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"    private String filePath;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"    private final String ERROR_MSG \u003d \"Unsuccessful... Something went wrong... :(\";","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"     * Constructor of Storage class.","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"     * @param filePath file path to where persistent storage reside.","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"     * Sets up storage using path.","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"     * If data exist in file path,load, construct and return list of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"     * otherwise, set up structure based on file path and return empty list.","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"     * @return list of tasks constructed from file in file path.","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"     * @throws DukeException when file I/O is unsuccessful.","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"        String[] splitPath \u003d filePath.split(\"/\");","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"        if (splitPath.length !\u003d 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"            String directoryPath \u003d splitPath[0];","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"            File dataDirectory \u003d new File(directoryPath);","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"            if (!dataDirectory.exists()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"                dataDirectory.mkdir();","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"        File dukeFile \u003d new File(filePath);","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"        if (!dukeFile.exists()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"                dukeFile.createNewFile();","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"            } catch (IOException io) {","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"                throw new DukeException(io.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"            Scanner scan \u003d new Scanner(dukeFile);","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"weekiat-douze"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"weekiat-douze"},"content":"                String[] oneTaskString \u003d scan.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"weekiat-douze"},"content":"                Task tempTask \u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"weekiat-douze"},"content":"                if (oneTaskString[0].equals(\"T\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"weekiat-douze"},"content":"                    tempTask \u003d new Todo(oneTaskString[2]);","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"weekiat-douze"},"content":"                } else if (oneTaskString[0].equals(\"D\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"weekiat-douze"},"content":"                    LocalDateTime tempDateTime \u003d LocalDateTime.parse(oneTaskString[3].replace(\"/\", \"-\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"weekiat-douze"},"content":"                    tempTask \u003d new Deadline(oneTaskString[2], tempDateTime);","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"weekiat-douze"},"content":"                } else if (oneTaskString[0].equals(\"E\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"weekiat-douze"},"content":"                    String[] dateSplit \u003d oneTaskString[3].split(\"\u003e\");","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"weekiat-douze"},"content":"                    LocalDateTime startDateTime \u003d LocalDateTime.parse(dateSplit[0]);","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"weekiat-douze"},"content":"                    LocalDateTime endDateTime \u003d LocalDateTime.parse(dateSplit[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"weekiat-douze"},"content":"                    tempTask \u003d new Event(oneTaskString[2], startDateTime, endDateTime);","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"weekiat-douze"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"weekiat-douze"},"content":"                if (tempTask !\u003d null) {","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"weekiat-douze"},"content":"                    if (oneTaskString[1].equals(\"1\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"weekiat-douze"},"content":"                        tempTask.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"weekiat-douze"},"content":"                    }","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"weekiat-douze"},"content":"                    taskList.add(tempTask);","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"weekiat-douze"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"weekiat-douze"},"content":"            } // end of while-loop","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"weekiat-douze"},"content":"            scan.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"weekiat-douze"},"content":"            return taskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"weekiat-douze"},"content":"        } catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(\"Unable to load tasks :(\");","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"weekiat-douze"},"content":"    } // end of load()","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"weekiat-douze"},"content":"     * Saves string into persistent storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"weekiat-douze"},"content":"     * @param entry an entry to be added to file in file path.","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"weekiat-douze"},"content":"     * @throws DukeException when file I/O is unsuccessful.","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"weekiat-douze"},"content":"    public void saveEntry(String entry) throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"weekiat-douze"},"content":"            File dukeFile \u003d new File(this.filePath);","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"weekiat-douze"},"content":"            FileWriter dukeWriter \u003d new FileWriter(dukeFile, true);","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"weekiat-douze"},"content":"            dukeWriter.write(entry + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"weekiat-douze"},"content":"            dukeWriter.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"weekiat-douze"},"content":"        } catch (IOException io) {","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(ERROR_MSG);","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"weekiat-douze"},"content":"     * Delete entry in persistent storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":112,"author":{"gitId":"weekiat-douze"},"content":"     * @param taskId id that identifies the task in the file.","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"weekiat-douze"},"content":"     * @throws DukeException when file I/O is unsuccessful.","lastModifiedDate":"2023-02-08"},{"lineNumber":114,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":115,"author":{"gitId":"weekiat-douze"},"content":"    public void deleteEntry(int taskId) throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"weekiat-douze"},"content":"            File dukeFile \u003d new File(this.filePath);","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"weekiat-douze"},"content":"            Scanner scan \u003d new Scanner(dukeFile);","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"weekiat-douze"},"content":"            File tempFile \u003d new File(\"data/temp-duke.txt\");","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"weekiat-douze"},"content":"            Files.deleteIfExists(tempFile.toPath());","lastModifiedDate":"2023-02-07"},{"lineNumber":121,"author":{"gitId":"weekiat-douze"},"content":"            tempFile.createNewFile();","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"weekiat-douze"},"content":"            FileWriter tempWriter \u003d new FileWriter(tempFile, true);","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"weekiat-douze"},"content":"            int counter \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"weekiat-douze"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":125,"author":{"gitId":"weekiat-douze"},"content":"                String taskEntry \u003d scan.nextLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"weekiat-douze"},"content":"                if (counter !\u003d taskId) {","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"weekiat-douze"},"content":"                    tempWriter.write(taskEntry + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"weekiat-douze"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"weekiat-douze"},"content":"                counter++;","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"weekiat-douze"},"content":"            tempWriter.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"weekiat-douze"},"content":"            scan.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"weekiat-douze"},"content":"            Files.deleteIfExists(dukeFile.toPath());","lastModifiedDate":"2023-02-07"},{"lineNumber":134,"author":{"gitId":"weekiat-douze"},"content":"            tempFile.renameTo(dukeFile);","lastModifiedDate":"2023-02-07"},{"lineNumber":135,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"weekiat-douze"},"content":"        } catch (IOException io) {","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(ERROR_MSG);","lastModifiedDate":"2023-02-07"},{"lineNumber":138,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":139,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":141,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":142,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":143,"author":{"gitId":"weekiat-douze"},"content":"     * Updates entry in persistent storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":144,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":145,"author":{"gitId":"weekiat-douze"},"content":"     * @param taskId id that identifies the task in the file.","lastModifiedDate":"2023-02-08"},{"lineNumber":146,"author":{"gitId":"weekiat-douze"},"content":"     * @param isMark determines whether to mark entry as complete or incomplete.","lastModifiedDate":"2023-02-08"},{"lineNumber":147,"author":{"gitId":"weekiat-douze"},"content":"     * @throws DukeException when file I/O is unsuccessful.","lastModifiedDate":"2023-02-08"},{"lineNumber":148,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":149,"author":{"gitId":"weekiat-douze"},"content":"    public void markEntry(int taskId, boolean isMark) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":150,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":151,"author":{"gitId":"weekiat-douze"},"content":"            File dukeFile \u003d new File(this.filePath);","lastModifiedDate":"2023-02-07"},{"lineNumber":152,"author":{"gitId":"weekiat-douze"},"content":"            Scanner scan \u003d new Scanner(dukeFile);","lastModifiedDate":"2023-02-07"},{"lineNumber":153,"author":{"gitId":"weekiat-douze"},"content":"            File tempFile \u003d new File(\"data/temp-duke.txt\");","lastModifiedDate":"2023-02-07"},{"lineNumber":154,"author":{"gitId":"weekiat-douze"},"content":"            Files.deleteIfExists(tempFile.toPath());","lastModifiedDate":"2023-02-07"},{"lineNumber":155,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":156,"author":{"gitId":"weekiat-douze"},"content":"            tempFile.createNewFile();","lastModifiedDate":"2023-02-07"},{"lineNumber":157,"author":{"gitId":"weekiat-douze"},"content":"            FileWriter tempWriter \u003d new FileWriter(tempFile, true);","lastModifiedDate":"2023-02-07"},{"lineNumber":158,"author":{"gitId":"weekiat-douze"},"content":"            int counter \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":159,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":160,"author":{"gitId":"weekiat-douze"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":161,"author":{"gitId":"weekiat-douze"},"content":"                String taskEntry \u003d scan.nextLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":162,"author":{"gitId":"weekiat-douze"},"content":"                if (counter \u003d\u003d taskId) {","lastModifiedDate":"2023-02-07"},{"lineNumber":163,"author":{"gitId":"weekiat-douze"},"content":"                    String target \u003d isMark ? \"| 0 |\" : \"| 1 |\";","lastModifiedDate":"2023-02-07"},{"lineNumber":164,"author":{"gitId":"weekiat-douze"},"content":"                    String replacement \u003d isMark ? \"| 1 |\" : \"| 0 |\";","lastModifiedDate":"2023-02-07"},{"lineNumber":165,"author":{"gitId":"weekiat-douze"},"content":"                    taskEntry \u003d taskEntry.replace(target, replacement);","lastModifiedDate":"2023-02-07"},{"lineNumber":166,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":167,"author":{"gitId":"weekiat-douze"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":168,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":169,"author":{"gitId":"weekiat-douze"},"content":"                tempWriter.write(taskEntry + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":170,"author":{"gitId":"weekiat-douze"},"content":"                counter++;","lastModifiedDate":"2023-02-07"},{"lineNumber":171,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":172,"author":{"gitId":"weekiat-douze"},"content":"            tempWriter.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":173,"author":{"gitId":"weekiat-douze"},"content":"            scan.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":174,"author":{"gitId":"weekiat-douze"},"content":"            Files.deleteIfExists(dukeFile.toPath());","lastModifiedDate":"2023-02-07"},{"lineNumber":175,"author":{"gitId":"weekiat-douze"},"content":"            tempFile.renameTo(new File(\"data/duke.txt\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":176,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":177,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":178,"author":{"gitId":"weekiat-douze"},"content":"        } catch (IOException io) {","lastModifiedDate":"2023-02-07"},{"lineNumber":179,"author":{"gitId":"weekiat-douze"},"content":"            throw new DukeException(ERROR_MSG);","lastModifiedDate":"2023-02-07"},{"lineNumber":180,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":181,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":182,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weekiat-douze":182}},{"path":"src/main/java/duke/repository/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package duke.repository;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":" * Holds all user tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"public class TaskList {","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"     * Constructor of TaskList class.","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"     * @param taskList list of existing tasks the user have.","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"     * Alternative constructor of TaskList class.","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"     * Sets up TaskList in case where user does not have existing tasks","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"     * Returns the referenced task based on id provided.","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"     * @param taskId id that identifies the task in the list.","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"     * @return task that is referenced","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"    public Task getTask(int taskId) {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"        return taskList.get(taskId);","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"     * Add new task.","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"     * @param oneTask new task to be added.","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"    public void addTask(Task oneTask) {","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"        taskList.add(oneTask);","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"     * Delete task based on id provided.","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"     * @param taskId id that identifies task to be deleted.","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"    public void deleteTask(int taskId) {","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"        taskList.remove(taskId);","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"     * Updates task status to complete based on id provided.","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"     * @param taskId id that identifies task to be updated.","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"weekiat-douze"},"content":"    public void markTask(int taskId) {","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"weekiat-douze"},"content":"        Task oneTask \u003d taskList.get(taskId);","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"weekiat-douze"},"content":"        oneTask.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"weekiat-douze"},"content":"     * Updates task status to incomplete based on id provided.","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"weekiat-douze"},"content":"     * @param taskId id that identifies task to be updated.","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"weekiat-douze"},"content":"    public void unmarkTask(int taskId) {","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"weekiat-douze"},"content":"        Task oneTask \u003d taskList.get(taskId);","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"weekiat-douze"},"content":"        oneTask.unmarkTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"weekiat-douze"},"content":"     * Returns number of task currently.","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"weekiat-douze"},"content":"     * @return number of task currently.","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"weekiat-douze"},"content":"    public int numTasks() {","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"weekiat-douze"},"content":"        return taskList.size();","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"weekiat-douze"},"content":"     * Returns string representation of all tasks in a list.","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"weekiat-douze"},"content":"     * @return string representation of all tasks in a list.","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"weekiat-douze"},"content":"    public String getTaskList() {","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"weekiat-douze"},"content":"        String listString \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"weekiat-douze"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"weekiat-douze"},"content":"            Task oneTask \u003d taskList.get(i);","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"weekiat-douze"},"content":"            listString +\u003d \"\\n\" + (i + 1) + \". \" + oneTask.toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"weekiat-douze"},"content":"        return listString;","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"weekiat-douze"},"content":"    public String getMatchingTasks(String searchStr) {","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"weekiat-douze"},"content":"        String listString \u003d \"\";","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"weekiat-douze"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"weekiat-douze"},"content":"            Task oneTask \u003d taskList.get(i);","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"weekiat-douze"},"content":"            if (oneTask.getDescription().contains(searchStr)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"weekiat-douze"},"content":"                // Index maintained for easy reference for user","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"weekiat-douze"},"content":"                listString +\u003d \"\\n\" + (i + 1) + \". \" + oneTask.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"weekiat-douze"},"content":"        return listString;","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":112,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weekiat-douze":113}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":" * Represents user deadline task.","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"     * Constructor of Deadline class.","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"     * @param description description of the Deadline task.","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"     * @param by end datetime of the Deadline task.","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"        this.endDate \u003d by;","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"     * Returns string representation of the end datetime.","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"     * @return string representation of the end datetime","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"    public String getByDate() {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"        return this.endDate.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"     *  Returns string representation of the object.","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"     * @return a string representation of the object","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"    */","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"        String dateTimeString \u003d endDate.format(format);","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateTimeString + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"weekiat-douze":43}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":" * Represents user event task.","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"     * Constructor of Event class.","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"     * @param description description of Event task","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"     * @param from Start datetime of the event","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"     * @param to End datetime of the event","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"        this.startDate \u003d from;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"        this.endDate \u003d to;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"     * Returns string representation of Start datetime.","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"     * @return a string representation of Start datetime.","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"        return this.startDate.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"     * Returns string representation of End datetime.","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"     * @return a string representaiton of End datetime.","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"        return this.endDate.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"     *  Returns string representation of the object.","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"        String start \u003d startDate.format(format);","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"        String end \u003d endDate.format(format);","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"weekiat-douze":56}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":" * Represents user task.","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"    private String description;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"     * Constructor of Task class.","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"     * Returns status icon of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"     * @return status icon of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"     * @return a description of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"        return this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"     * Marks task as done.","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"     * Marks task as incomplete.","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"     *  Returns string representation of the object.","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"     * @return a string representation of the object","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"weekiat-douze":61}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":" * Represents user todo task.","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"     * @param description description of the todo task.","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"     *  Returns string representation of the object.","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"weekiat-douze":26}},{"path":"src/test/java/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package command;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"    public void parseTodoTest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"        String[] testInput \u003d {\"todo\", \"Test Todo\"};","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"            Todo testTodo \u003d Parser.parseTodo(testInput);","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"            assertEquals(\"Test Todo\", testTodo.getDescription() );","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"            assertEquals(\"[T][ ] Test Todo\", testTodo.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"            fail();","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"    public void parseTodoTest_exceptionThrown() {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"        String[] testInput \u003d {\"todo\"};","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"            Todo testTodo \u003d Parser.parseTodo(testInput);","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"            fail();","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"            assertEquals(\" ☹ OOPS!!! The description of a todo cannot be empty.\", dukeException.getMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"    public void validateCommandTest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"        // Test Case 1: TODO","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"        Command testTodo \u003d Parser.validateCommand(\"todo\");","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(Command.TODO, testTodo);","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"        // Test Case 2: DEADLINE","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"        Command testDeadline \u003d Parser.validateCommand(\"deadline\");","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(Command.DEADLINE, testDeadline);","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"        // Test Case 3: EVENT","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"        Command testEvent \u003d Parser.validateCommand(\"event\");","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(Command.EVENT, testEvent);","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"        // Test Case 4: MARK","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"        Command testMark \u003d Parser.validateCommand(\"mark\");","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(Command.MARK, testMark);","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"        // Test Case 5: UNMARK","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"        Command testUnmark \u003d Parser.validateCommand(\"unmark\");","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(Command.UNMARK, testUnmark);","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"        // Test Case 6: DELETE","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"        Command testDelete \u003d Parser.validateCommand(\"delete\");","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(Command.DELETE, testDelete);","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"weekiat-douze"},"content":"        // Test Case 7: LIST","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"weekiat-douze"},"content":"        Command testList \u003d Parser.validateCommand(\"list\");","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(Command.LIST, testList);","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"weekiat-douze"},"content":"        // Test Case 8: INVALID","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"weekiat-douze"},"content":"        Command testInvalid \u003d Parser.validateCommand(\"abcde\");","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(Command.INVALID, testInvalid);","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"weekiat-douze":75}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"    public void endDateTest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"        // deadline return book /by 2023-02-05 1200","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2023-02-05T12:00:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", dateTime);","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(\"2023-02-05T12:00\", deadline.getByDate());","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"    public void deadlineStringTest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2023-02-05T12:00:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", dateTime);","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"        // Test Case 1: Unmarked","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(\"[D][ ] Test Deadline (by: 05 Feb 2023 12:00)\", deadline.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"        // Test Case 2: Marked","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"        deadline.markTask();","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(\"[D][X] Test Deadline (by: 05 Feb 2023 12:00)\", deadline.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"weekiat-douze":31}},{"path":"src/test/java/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"public class EventTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"    public void dateTest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"        // event project meeting /from 2023-08-06 1400 /to 1600","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(\"2023-08-06T14:00:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(\"2023-08-06T16:00:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"        Event event \u003d new Event(\"Event Test\", startDate, endDate);","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(\"2023-08-06T14:00\", event.getStartDate());","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals( \"2023-08-06T16:00\", event.getEndDate());","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"    public void eventStringTest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(\"2023-08-06T14:00:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(\"2023-08-06T16:00:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"        Event event \u003d new Event(\"Event Test\", startDate, endDate);","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"        // Test Case 1: Unmarked","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(\"[E][ ] Event Test (from: 06 Aug 2023 14:00 to: 06 Aug 2023 16:00)\", event.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"        // Test Case 2: Marked","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"        event.markTask();","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"        assertEquals(\"[E][X] Event Test (from: 06 Aug 2023 14:00 to: 06 Aug 2023 16:00)\", event.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"weekiat-douze":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"deadline return book /by 2023-08-06","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"event project meeting /from 2023-08-06 1400 /to 1600","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"deadline return book /by 2023-02-05 1200","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"event project meeting /from 2023-02-06 1400 /to 1600","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"delete 1","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"delete 1","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"delete 1","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"delete 1","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"delete 1","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"delete 1","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"delete 1","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"weekiat-douze":18}}]
