[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"weilin1202":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"checkstyle {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"weilin1202":22,"-":40}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"    private void flip() {","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"        db.flip();","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"        return db;","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":" * Duke helps user to keep track of tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"public class Duke {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     * Constructor for Duke","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    public Duke() {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"        parser \u003d new Parser(tasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"     * Greet user and perform command for the tasks they entered and save tasks in file","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"    public String greet() {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"        return ui.greet();","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"        response \u003d parser.checkCommand(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"        storage.save(this.tasks);","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"        return response;","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":49}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":" * A class to launch application","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"public class Launcher {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"            stage.show();","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/Images/Clown.png\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/Images/Pingu.png\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"                DialogBox.getDukeDialog(duke.greet(), dukeImage)","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":54}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.exception;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":" * Exception thrown when there is no description after the command","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"        super(\"OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":11}},{"path":"src/main/java/duke/exception/WrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.exception;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":" * Exception thrown when command is not recognized","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"public class WrongCommandException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"    public WrongCommandException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":11}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import duke.exception.WrongCommandException;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":" * A parser to understand and perform user command","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"public class Parser {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    private Scanner sc;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"     * Constructor for Parser","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"     * @param taskList","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        //this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"     * Perform the user command and create the tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"     * @throws EmptyDescriptionException If no description of task after the command word","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"     * @throws WrongCommandException If wrong command word is being entered","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"    public String performCommand(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        //String input \u003d this.sc.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"                return taskList.printList();","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"            } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"                String[] arrOfString \u003d input.split(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"                String command \u003d arrOfString[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"                switch (command) {","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"                case \"mark\":","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"                    return taskList.markTask(input.substring(5));","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"                case \"unmark\":","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"                    return taskList.unmarkTask(input.substring(7));","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"                case \"todo\":","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"                    Task taskToDo \u003d new ToDo(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"                    taskList.addTask(taskToDo);","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"                    return taskList.printAddComment(taskToDo);","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"                case \"deadline\":","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"                    LocalDate deadline \u003d LocalDate.parse(","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"                            input.substring(input.indexOf(\"/\") + 4));","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"                    Task taskDeadline \u003d new Deadline(input, deadline);","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"                    taskList.addTask(taskDeadline);","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"                    return taskList.printAddComment(taskDeadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"                case \"event\":","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"                    LocalDate startDate \u003d LocalDate.parse(","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"                            input.substring(input.indexOf(\"/\") + 6,","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"                                    input.lastIndexOf(\"/\") - 1));","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"                    LocalDate endDate \u003d LocalDate.parse(","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"                            input.substring(input.lastIndexOf(\"/\") + 4));","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"                    Task taskEvent \u003d new Event(input, startDate, endDate);","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"                    taskList.addTask(taskEvent);","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"                    return taskList.printAddComment(taskEvent);","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"                    return taskList.deleteTask(input.substring(7));","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"                case \"find\":","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"                    return taskList.find(input.substring(5));","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"                default:","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"                    return \"Cannot understand bruh\";","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"weilin1202"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"weilin1202"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"     * Check whether the command and input is valid or invalid","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"weilin1202"},"content":"     * @param input Input String by user","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"weilin1202"},"content":"     * @return Perform command to return string by Duke","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"    public String checkCommand(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"        String[] arrOfString \u003d input.trim().split(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"        String command \u003d arrOfString[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"weilin1202"},"content":"            if ((input.equals(\"todo\")) || (input.equals(\"deadline\")) || (input.equals(\"event\"))) {","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"weilin1202"},"content":"                throw new EmptyDescriptionException();","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"weilin1202"},"content":"            } else if (!(command.equals(\"mark\") || command.equals(\"unmark\")","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"weilin1202"},"content":"                    || command.equals(\"todo\") || command.equals(\"deadline\")","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":"                    || command.equals(\"event\") || command.equals(\"delete\")","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"weilin1202"},"content":"                    || command.equals(\"find\") || !command.equals(\"list\"))) {","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"weilin1202"},"content":"                throw new WrongCommandException();","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"        } catch (EmptyDescriptionException | WrongCommandException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"weilin1202"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"weilin1202"},"content":"        return this.performCommand(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":115}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import java.io.File;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"import java.util.List;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":" * Storage class that manage loading of tasks from file and saving of tasks in file","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"public class Storage {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    private String filePath;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"    private File taskSaved;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"     * Constructor of Storage","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"    public Storage() {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        this.filePath \u003d \"C:/Users/linwe/Documents/TaskSaved.txt\";","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"            this.taskSaved \u003d new File(this.filePath);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"            FileWriter myWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"            myWriter.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    ","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"     * Load tasks from file","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"     * @return List of tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"     * @throws IOException If unable to read file","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"            BufferedReader myReader \u003d new BufferedReader(new FileReader(this.taskSaved));","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"            String line \u003d myReader.readLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"                String[] str \u003d line.split(\" | \");","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"                String taskType \u003d str[0];","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"                String isCompleted \u003d str[1];","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"                String taskDes \u003d str[2];","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"                Task task \u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"                switch (taskType) {","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"                case \"T\":","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"                    task \u003d new ToDo(taskDes);","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"                    break;","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"                case \"D\":","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"                    task \u003d new Deadline(taskDes, LocalDate.parse(str[3]));","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"                    break;","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"                case \"E\":","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"                    task \u003d new Event(taskDes, LocalDate.parse(str[3]), LocalDate.parse(str[4]));","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"                    break;","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"                default:","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"                    break;","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"                if (isCompleted.equals(\"[X]\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"                    task.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"                taskList.add(task);","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"weilin1202"},"content":"            myReader.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"weilin1202"},"content":"            System.out.print(e);","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"weilin1202"},"content":"        return taskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"weilin1202"},"content":"     * Save the list of tasks in the file","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"weilin1202"},"content":"     * @param taskList List of tasks to be saved","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"     * @throws IOException When tasks cannot be saved","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"weilin1202"},"content":"            BufferedWriter myWriter \u003d new BufferedWriter(new FileWriter(this.taskSaved));","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"weilin1202"},"content":"            for (Task task: taskList.getTaskList()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"weilin1202"},"content":"                myWriter.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":"            myWriter.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"weilin1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"weilin1202"},"content":"            System.out.println(\"There is an error in saving tasks.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":108}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":" * Class for task with deadline","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    private String taskDescription;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    private LocalDate deadLine;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"     * Constructor of Deadline task","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"     * @param taskString user taskString input","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"     * @param deadline deadline for the task","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    public Deadline(String taskString, LocalDate deadline) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"        super(taskString.substring(9, taskString.indexOf(\"/\") - 1));","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"        taskDescription \u003d taskString.substring(9, taskString.indexOf(\"/\") - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        deadLine \u003d deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    public String getTask() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"     * Format the deadline date in the MMM d yyyy style","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"     * @return String of a formatted deadline","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        return this.deadLine.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"        return \"[D]\" + super.toString() + \" ( by: \" + this.getDeadline() + \" )\";","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":" * Class for tasks with specific timeline, from a date to another date","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    private String taskDescription;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"     * Constructor for Event task","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"     * @param taskString user taskString input","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"     * @param startDateInput start date of event","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"     * @param endDateInput end date of event","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    public Event(String taskString, LocalDate startDateInput, LocalDate endDateInput) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"        super(taskString.substring(6, taskString.indexOf(\"/\") - 1));","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        taskDescription \u003d taskString.substring(6, taskString.indexOf(\"/\") - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"        startDate \u003d startDateInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        endDate \u003d endDateInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    public String getTask() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"     * Get the timeline of event in a specific format ( start date to end date )","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"     * @return String of a formatted timeline","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"    public String getTimeline() {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        return this.startDate.format(","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to \"","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"                + this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"        return \"[E]\" + super.toString() + \" (\" + this.getTimeline() + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":46}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":" * Parent Task class which contains details of a task","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"    private String taskString;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"     * Constructor of Task","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"     * @param taskString user taskString input","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    public Task(String taskString) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"        this.taskString \u003d taskString;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     * Check current status of task, whether it is marked completed or not","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"     * @return X means completed and space means not completed","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    public String currentTaskStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"            return \"[X]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"            return \"[ ]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"     * Mark a task is completed","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"     * Mark a task as not completed","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"        return this.toString().substring(1, 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"     * Get description of task","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"     * @return String of task description","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"    public String getTask() {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"        return this.taskString;","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"        return this.currentTaskStatus() + \" \" + this.taskString;","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.util.List;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import duke.exception.WrongCommandException;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":" * TaskList to contain all the tasks in a list","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"public class TaskList {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"     * Constructor for TaskList","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        return this.taskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"     * Prints the list of tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    public String printList() {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"        String list \u003d \"Here are some tasks in your list:\";","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        for (int i \u003d 1; i \u003c this.taskList.size() + 1; i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"            list \u003d list + \"\\n\" + i + \".\" + (taskList.get(i - 1)).toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"        return list;","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"     * Mark the task stored in the list as completed","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"     * @param taskStr Task number of task in the list to mark as completed","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    public String markTask(String taskStr) {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"        int taskNum \u003d Integer.parseInt(taskStr) - 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"        Task originalTask \u003d taskList.get(taskNum);","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"        originalTask.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n  \" + originalTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"     * Mark the task stored in the list as not completed","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"     * @param taskStr Task number of task in the list to mark as completed","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"    public String unmarkTask(String taskStr) {","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"        int taskNum \u003d Integer.parseInt(taskStr) - 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"        Task originalTask \u003d taskList.get(taskNum);","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"        originalTask.unmarkTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"        return \"Ok, I\u0027ve marked this task as not done yet: \\n  \" + originalTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"     * Add the task into the list of task","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"        taskList.add(task);","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"     * Inform user that the task has been successfully added","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"     * @param task Task that has been added","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"    public String printAddComment(Task task) {","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"        return \"Got it. I\u0027ve added this task: \\n  \" + task","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"     * Delete the task from the list","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"     * @param taskStr Task number of task in the list to be deleted","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"    public String deleteTask(String taskStr) {","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"        int taskNum \u003d Integer.parseInt(taskStr) - 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"weilin1202"},"content":"        Task taskToRemove \u003d taskList.get(taskNum);","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"        String removedTaskStr \u003d taskToRemove.toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"weilin1202"},"content":"        taskList.remove(taskNum);","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"weilin1202"},"content":"        return \"Noted. I\u0027ve removed this task: \\n  \" + removedTaskStr","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"weilin1202"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"     * Find the list of tasks containing the targetString","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"weilin1202"},"content":"     * @param targetString String to be found","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"weilin1202"},"content":"     * @return List of tasks containing the targetString","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"    public String find(String targetString) {","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"        List\u003cTask\u003e targetList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"weilin1202"},"content":"            if (t.getTask().contains(targetString)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"weilin1202"},"content":"                targetList.add(t);","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":"        if (targetList.isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"weilin1202"},"content":"            return \"Oops! :( There are no matching tasks found.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"weilin1202"},"content":"        } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"weilin1202"},"content":"            String listFound \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"            for (int i \u003d 1; i \u003c targetList.size() + 1; i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"weilin1202"},"content":"                listFound \u003d listFound + \"\\n\" + i + \".\" + (targetList.get(i - 1)).toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"weilin1202"},"content":"            return listFound;","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"weilin1202"},"content":"     * Check if the task description is empty or not","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"weilin1202"},"content":"     * @param input user input","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"weilin1202"},"content":"     * @throws EmptyDescriptionException If there is only command without task","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"weilin1202"},"content":"    public void emptyDes(String input) throws EmptyDescriptionException {","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"weilin1202"},"content":"        if ((input.equals(\"todo\")) || (input.equals(\"deadline\")) || (input.equals(\"event\"))) {","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"weilin1202"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-02-07"},{"lineNumber":121,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":125,"author":{"gitId":"weilin1202"},"content":"     * Check if the command exist or not","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"weilin1202"},"content":"     * @param command First word of user input","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"weilin1202"},"content":"     * @throws WrongCommandException If command does not exist","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"weilin1202"},"content":"    public void wrongCommand(String command) throws WrongCommandException {","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"weilin1202"},"content":"        if (!(command.equals(\"mark\") || command.equals(\"unmark\")","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"weilin1202"},"content":"                || command.equals(\"todo\") || command.equals(\"deadline\")","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"weilin1202"},"content":"                || command.equals(\"event\") || command.equals(\"delete\")","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"weilin1202"},"content":"                || command.equals(\"find\"))) {","lastModifiedDate":"2023-02-07"},{"lineNumber":134,"author":{"gitId":"weilin1202"},"content":"            throw new WrongCommandException();","lastModifiedDate":"2023-02-07"},{"lineNumber":135,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":138,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":139,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":140}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":" * Class for task to be done","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"    private String taskDescription;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"     * Constructor for To-Do Task","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"     * @param taskString user taskString input","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    public ToDo(String taskString) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"        super(taskString.substring(5));","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"        taskDescription \u003d taskString.substring(5);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    public String getTask() {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":31}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":" * Ui class to handle interactions with user","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"public class Ui {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"    public Ui() {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"     * Greet user when application is first launched","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"     * @return String to greet user","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    public String greet() {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"        return \"Hello! I\u0027m Pingu \\nWhat can I do for you?\";","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":19}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"        \u003cTextField fx:id\u003d\"userInput\" alignment\u003d\"CENTER\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#4837ce\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":23}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    private Deadline deadlineTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    public void setUp() {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"        deadlineTask \u003d new Deadline(\"deadline return book /by 2020-10-10\",","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"                LocalDate.parse(\"2020-10-10\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    public void getTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"return book\", deadlineTask.getTask());","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    public void getDeadlineTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"Oct 10 2020\", deadlineTask.getDeadline());","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    public void markTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"        deadlineTask.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"[D][X] return book ( by: Oct 10 2020 )\", deadlineTask.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"    public void unmarkTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"        deadlineTask.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"        deadlineTask.unmarkTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"[D][ ] return book ( by: Oct 10 2020 )\", deadlineTask.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":42}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"public class EventTest {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    private Event eventTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    public void setUp() {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"        eventTask \u003d new Event(\"event return book /from 2020-10-10 /to 2021-10-10\",","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"                LocalDate.parse(\"2020-10-10\"), LocalDate.parse(\"2021-10-10\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    public void getTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"return book\", eventTask.getTask());","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    public void getTimelineTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"Oct 10 2020 to Oct 10 2021\", eventTask.getTimeline());","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":29}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"    private ToDo toDoTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    public void setUp() {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"        toDoTask \u003d new ToDo(\"todo return book\");","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    public void getTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"return book\", toDoTask.getTask());","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    public void markTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        toDoTask.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"[T][X] return book\", toDoTask.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"    public void unmarkTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        toDoTask.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"        toDoTask.unmarkTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"[T][ ] return book\", toDoTask.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"todo cook","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"event pay /from 4am /to 7pm","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"deadline code /by no idea :-p","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"mark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"unmark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"list","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"weilin1202":1,"-":20}}]
