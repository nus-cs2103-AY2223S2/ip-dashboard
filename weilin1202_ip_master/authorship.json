[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"weilin1202":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"checkstyle {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"jar {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    manifest {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"        attributes(","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"                \u0027Main-Class\u0027: \u0027com.mypackage.MyClass\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"        )","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    String javaFxVersion \u003d \u002719\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"weilin1202":30,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"BearyBear serves as your personal task tracker that manages different ","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"tasks for you! You do not have to keep track of the tasks manually anymore, BearyBear does it all for you! ","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"You can add or delete different tasks (todo, deadline, events), mark the tasks as done/undone. ","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"With BearyBear, you can also view the entire list of task and find tasks with certain keywords!","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"### Record tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"Able to record three types of tasks (todo, deadline, event) and find and list the tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"### Update tasks ","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"Able to update completion status of tasks and able to delete tasks from the task list ","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"### Save tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"Tasks will be saved in hard disk at [directory where JAR file is]/data/dukeTask.txt even after the application is closed.","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"Tasks previously saved  can be retrieved the next time you start this application. ","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"**Please take note of the following:**","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"- Enter date in this format: **YYYY-MM-DD** (eg. 2023-02-10)","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"- All the command words are to be typed in **lower case**","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"  (eg. only `list` is recognized, `LIST` is not recognized)","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"-----------------------------------------------------------","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"### `todo` - Add a task to be done ","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"The task will be added to the list of tasks and saved locally ","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"Format: `todo (task description)`","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"`todo read book`","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"The \u0027read book\u0027 todo task will be added to the list of tasks. ","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"\u0027T\u0027 in the first square bracket means it is a todo task. ","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"Second square bracket is empty because this task is not completed yet. ","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"Wow! I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":" [T][ ] read book","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"Now you have 1 tasks in the list. ","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"--------------------------------------------","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"### `deadline` - Add a task with deadline","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"Add a task with a specified deadline to the task list. ","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"Format: `deadline (task description) /by (deadline date) `","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"`deadline return book /by 2023-10-10`","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"The \u0027return book\u0027 deadline task will be added to the task list and deadline will be shown beside the task description.","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"\u0027D\u0027 in the first square bracket means it is a deadline task.","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"Second square bracket is empty because this task is not completed yet.","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"Wow! I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":" [D][ ] return book ( by: Oct 10 2023 )","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"Now you have 2 tasks in the list. ","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"----------------------------------------","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"### `event` - Add an event task with time period ","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"weilin1202"},"content":"Add an event task with the starting date and ending date into the task list. ","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"weilin1202"},"content":"Format: `event (task description) /from (start date) /to (end date)`","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"weilin1202"},"content":"`event write book /from 2023-10-10 /to 2024-11-11`","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"The \u0027write book\u0027 event task will be added to the task list and starting date \u0026 ending date will be shown beside the task description. ","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"weilin1202"},"content":"\u0027E\u0027 in the first square bracket means it is an event task.","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"weilin1202"},"content":"Second square bracket is empty because this task is not completed yet.","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"weilin1202"},"content":"Wow! I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":" [E][ ] write book (Oct 10 2023 to Nov 11 2024)","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"weilin1202"},"content":"Now you have 3 tasks in the list. ","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"weilin1202"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"---------------------------------------------","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"weilin1202"},"content":"### `mark` - Mark a task as completed","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"weilin1202"},"content":"Reference to a task using task number and mark this task as completed. ","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"weilin1202"},"content":"Format:","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"weilin1202"},"content":"`mark (task number)`","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"weilin1202"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"weilin1202"},"content":"`mark 1`","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"weilin1202"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":121,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"weilin1202"},"content":"The first task will be marked as completed and the second square bracket will contain a \u0027X\u0027.","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"weilin1202"},"content":"YAYYYY Good Job!!!","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"weilin1202"},"content":"I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"weilin1202"},"content":" [T][X] read book ","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"weilin1202"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"weilin1202"},"content":"-------------------------------------------------","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"weilin1202"},"content":"### `unmark` - Mark a task as not completed","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"weilin1202"},"content":"Reference to a task using task number and mark this task as not completed.","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"weilin1202"},"content":"Format:","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"weilin1202"},"content":"`unmark (task number)`","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"weilin1202"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"weilin1202"},"content":"`unmark 1`","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":144,"author":{"gitId":"weilin1202"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"weilin1202"},"content":"The first task will be marked as not completed and the second square bracket will be empty.","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":148,"author":{"gitId":"weilin1202"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"weilin1202"},"content":"Okay... I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"weilin1202"},"content":" [T][ ] read book","lastModifiedDate":"2023-02-16"},{"lineNumber":151,"author":{"gitId":"weilin1202"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"weilin1202"},"content":"----------------------------------------------","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"weilin1202"},"content":"### `list` - Print the current list of tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":157,"author":{"gitId":"weilin1202"},"content":"Allow users to see  the whole list of tasks that has been recorded so far. ","lastModifiedDate":"2023-02-16"},{"lineNumber":158,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":159,"author":{"gitId":"weilin1202"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":160,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":161,"author":{"gitId":"weilin1202"},"content":"`list`","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":163,"author":{"gitId":"weilin1202"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":164,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":165,"author":{"gitId":"weilin1202"},"content":"All the tasks and their details (type of task, completion status, deadlines and dates) in the list will be printed out.","lastModifiedDate":"2023-02-16"},{"lineNumber":166,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":167,"author":{"gitId":"weilin1202"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":168,"author":{"gitId":"weilin1202"},"content":"Here are some tasks in your list:","lastModifiedDate":"2023-02-16"},{"lineNumber":169,"author":{"gitId":"weilin1202"},"content":"1.[T][ ] read book","lastModifiedDate":"2023-02-16"},{"lineNumber":170,"author":{"gitId":"weilin1202"},"content":"2.[D][ ] return book ( by: Oct 10 2023 )","lastModifiedDate":"2023-02-16"},{"lineNumber":171,"author":{"gitId":"weilin1202"},"content":"3.[E][ ] write book (Oct 10 2023 to Nov 11 2024)","lastModifiedDate":"2023-02-16"},{"lineNumber":172,"author":{"gitId":"weilin1202"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":173,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":174,"author":{"gitId":"weilin1202"},"content":"----------------------------------------------","lastModifiedDate":"2023-02-16"},{"lineNumber":175,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":176,"author":{"gitId":"weilin1202"},"content":"### `find` - Find tasks containing the target word ","lastModifiedDate":"2023-02-16"},{"lineNumber":177,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":178,"author":{"gitId":"weilin1202"},"content":"Search and list out the matching list of tasks which has the target word that user is trying to find.","lastModifiedDate":"2023-02-16"},{"lineNumber":179,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":180,"author":{"gitId":"weilin1202"},"content":"Format:","lastModifiedDate":"2023-02-17"},{"lineNumber":181,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":182,"author":{"gitId":"weilin1202"},"content":"`find (target word)`","lastModifiedDate":"2023-02-17"},{"lineNumber":183,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":184,"author":{"gitId":"weilin1202"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":185,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":186,"author":{"gitId":"weilin1202"},"content":"`find return`","lastModifiedDate":"2023-02-16"},{"lineNumber":187,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":188,"author":{"gitId":"weilin1202"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":189,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":190,"author":{"gitId":"weilin1202"},"content":"Search through the list of tasks to find which has \u0027return\u0027 in the task details. ","lastModifiedDate":"2023-02-16"},{"lineNumber":191,"author":{"gitId":"weilin1202"},"content":"Then print all the tasks which has \u0027return\u0027 in the task details.  ","lastModifiedDate":"2023-02-16"},{"lineNumber":192,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":193,"author":{"gitId":"weilin1202"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":194,"author":{"gitId":"weilin1202"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-16"},{"lineNumber":195,"author":{"gitId":"weilin1202"},"content":"1.[D][ ] return book ( by: Oct 10 2023 )","lastModifiedDate":"2023-02-16"},{"lineNumber":196,"author":{"gitId":"weilin1202"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":197,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":198,"author":{"gitId":"weilin1202"},"content":"---------------------------------------------","lastModifiedDate":"2023-02-16"},{"lineNumber":199,"author":{"gitId":"weilin1202"},"content":"### `bye` - Exit the application","lastModifiedDate":"2023-02-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":201,"author":{"gitId":"weilin1202"},"content":"Exit and closes the application.","lastModifiedDate":"2023-02-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":205,"author":{"gitId":"weilin1202"},"content":"`bye`","lastModifiedDate":"2023-02-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":209,"author":{"gitId":"weilin1202"},"content":"The application will be closed and a goodbye message will be printed in console.","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"weilin1202":181,"-":28}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"    private void flip() {","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"        db.flip();","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"        return db;","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":" * Duke helps user to keep track of tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"public class Duke {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"     * Constructor for Duke","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    public Duke() {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"        storage \u003d new Storage(\"./data/dukeTask.txt\");","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"            ui.showLoadError();","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"        parser \u003d new Parser(tasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"     * Greet user and perform command for the tasks they entered and save tasks in file","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"    public String greet() {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"        return ui.greet();","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"        response \u003d parser.performCommand(input, ui);;","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"        storage.save(this.tasks);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"        return response;","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":54}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":" * A class to launch application","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"public class Launcher {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"            stage.setTitle(\"BearyBear\");","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"            stage.show();","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/Images/user1.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/Images/Duke1.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"                DialogBox.getDukeDialog(duke.greet(), dukeImage)","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"        if (response.equals(\"Bye!! Do visit me again! I\u0027ll always be free for you :)\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"            System.out.println(response);","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"            System.exit(0);","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":60}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.exception;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":" * Exception thrown when there is no description after the command","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"weilin1202":11}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.exception;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":" * Exception thrown when there is no description after the command","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"     * Constructor for EmptyDescriptionException","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"        super(\"OOPS!!! The description of a task cannot be empty while adding a task! \"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"                + \"\\n If you want to mark/ unmark/ delete task, please enter task number after command!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":16}},{"path":"src/main/java/duke/exception/WrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.exception;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":" * Exception thrown when command is not recognized","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"public class WrongCommandException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"    public WrongCommandException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":11}},{"path":"src/main/java/duke/exception/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.exception;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":" * WrongFormatException is thrown when user does not enter inputs in the correct format with the commands","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"public class WrongFormatException extends Exception {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"     * Constructor for WrongFormatException","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"     * @param message Shows the correct format of inputs","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    public WrongFormatException(String message) {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"        super(\"HEY!! Pleaseeee enter in a correct format: \" + \"\u0027\" + message + \"\u0027\");","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":15}},{"path":"src/main/java/duke/parser/HandleBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import duke.exception.WrongFormatException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":" * Processes and handles bye command from user","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"public class HandleBye {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"    public HandleBye() {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"     * Check the format of input and perform Bye command","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"     * @param input Entered by user","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"     * @param ui Ui that would generate reply for the user","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"     * @return A String to respond to user through ui","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"     * @throws WrongFormatException This exception is thrown when input contains more words than \"bye\"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    public static String performBye(String input, Ui ui) throws WrongFormatException {","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"        boolean correctFormat \u003d input.trim().equals(\"bye\");","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"        if (!correctFormat) {","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"            throw new WrongFormatException(\"bye\");","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"        return ui.sayBye();","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"weilin1202":29}},{"path":"src/main/java/duke/parser/HandleDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import duke.exception.WrongFormatException;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":" * Processes and handle the deadline command","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"public class HandleDeadline {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"    public HandleDeadline() {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     * Check whether the input line to add a deadline task is valid and in the correct format or not","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"     * Perform the adding of deadline task into task list if input is in correct format","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"     * @param input Entered by user","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"     * @param tasklist List of existing tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"     * @param ui Ui that would generate reply for the user","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"     * @return A String to respond to user through ui, inform user whether task has been added or not","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"     * @throws WrongFormatException This exception is thrown when input is not in correct format","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    public static String performDeadline(","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"            String input, TaskList tasklist, Ui ui) throws WrongFormatException, DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"            String taskString \u003d input.substring(9, input.indexOf(\" /by \")).trim();","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"            if (taskString.isBlank()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"                throw new DukeException(\"Oi! You didn\u0027t enter task description!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"            String deadline \u003d input.substring(input.indexOf(\" /by \") + 5);","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"            assert input.contains(\"/by\") : \"Wrong format for deadline task!\";","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"            if (LocalDate.parse(deadline).isBefore(java.time.LocalDate.now())) {","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"                throw new DukeException(\"Noooo! You\u0027re entering a date before today!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"            Task taskDeadline \u003d new Deadline(taskString, deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"            if (tasklist.checkDuplicates(taskDeadline)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"                return ui.showError(\"OOPS! You have added this task before already!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"            tasklist.addTask(taskDeadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"            return ui.showAddTask(taskDeadline.toString(), tasklist.getSize());","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"            throw new DukeException(\"Please enter date in the correct format! YYYY-MM-DD, example: 2023-10-10\");","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"            throw new WrongFormatException(\"deadline \u003cTask description\u003e /by \u003cdeadline date\u003e\");","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"weilin1202":53}},{"path":"src/main/java/duke/parser/HandleDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":" * Processes and handles the delete command","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"public class HandleDelete {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    public HandleDelete() {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"     * Perform the deletion of a task from task list if input is in correct format and task number is valid","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"     * @param input Entered by user","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"     * @param tasklist List of existing tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"     * @param ui Ui that would generate reply for the user","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     * @return A String to respond to user through ui, inform user if the task has been deleted or not","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    public static String performDelete(String input, TaskList tasklist, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"            int taskNum \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"            Task taskToRemove \u003d tasklist.getTask(taskNum);","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"            String removedTaskStr \u003d taskToRemove.toString();","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"            tasklist.deleteTask(taskNum);","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"            return ui.showDeleteTask(removedTaskStr, tasklist.getSize());","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"            throw new DukeException(\"Please enter a valid task number!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"weilin1202":35}},{"path":"src/main/java/duke/parser/HandleEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import duke.exception.WrongFormatException;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":" * Processes and handle the event command","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"public class HandleEvent {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"    public HandleEvent() {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     * Check whether the input line to add a deadline task is valid and in the correct format or not","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"     * Perform the addition of a task from task list if input is in correct format","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"     * @param input Entered by user","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"     * @param tasklist List of existing tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"     * @param ui Ui that would generate reply for the user","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"     * @return A String to respond to user through ui, inform user whether task has been added or not","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"     * @throws WrongFormatException This exception is thrown when input is not in correct format","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    public static String performEvent(","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"            String input, TaskList tasklist, Ui ui) throws WrongFormatException, DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"            String taskString \u003d input.substring(6, input.indexOf(\" /from\")).trim();","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"            if (taskString.isBlank()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"                throw new DukeException(\"Oi! You didn\u0027t enter task description!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"            String startDate \u003d input.substring(input.indexOf(\" /from \") + 7, input.lastIndexOf(\" /to \"));","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"            LocalDate taskStartDate \u003d LocalDate.parse(startDate);","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"            String endDate \u003d input.substring(input.indexOf(\" /to \") + 5);","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"            LocalDate taskEndDate \u003d LocalDate.parse(endDate);","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"            if (taskEndDate.isBefore(taskStartDate)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"                throw new DukeException(\"Noooo! Your end date is before start date!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"            if (taskStartDate.isBefore(java.time.LocalDate.now())) {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"                throw new DukeException(\"Noooo! You\u0027re entering dates before today!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"            assert input.contains(\"/from\") \u0026\u0026 input.contains(\"/to\") : \"Wrong format for event task!\";","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"            Task taskEvent \u003d new Event(taskString, startDate, endDate);","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"            if (tasklist.checkDuplicates(taskEvent)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"                throw new DukeException(\"OOPS! You have added this task before already!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"            tasklist.addTask(taskEvent);","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"            return ui.showAddTask(taskEvent.toString(), tasklist.getSize());","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"            throw new DukeException(\"Please enter date in the correct format! YYYY-MM-DD, example: 2023-10-10\");","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"            throw new WrongFormatException(\"event \u003cTask description\u003e /from \u003cstart date\u003e /to \u003cend date\u003e\");","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"weilin1202":59}},{"path":"src/main/java/duke/parser/HandleFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.util.List;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.exception.WrongFormatException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":" * Processes and handle the find command","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"public class HandleFind {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    public HandleFind() {","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"     * Check whether the input line to find matching tasks that contain target word is in the correct format or not","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"     * Perform the searching of target word in task list if input is in correct format","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     * @param input Entered by user","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"     * @param tasklist List of existing tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"     * @param ui Ui that would generate reply for the user","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"     * @return A String to respond to user through ui, printing the matching tasks that contain the target word","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"     * @throws WrongFormatException This exception is thrown when input is not in correct format","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    public static String performFind(String input, TaskList tasklist, Ui ui) throws WrongFormatException {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"        boolean correctFormat \u003d input.split(\" \").length \u003e 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        if (!correctFormat) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"            throw new WrongFormatException(\"find \u003cTarget word\u003e\");","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"        String targetString \u003d input.substring(5);","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"        List\u003cTask\u003e targetList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"        for (Task t : tasklist.getTaskList()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"            if (t.getTask().contains(targetString)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"                targetList.add(t);","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"        if (targetList.isEmpty()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"            return ui.showFindResult(false, \"\");","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"        } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"            String listFound \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"            for (int i \u003d 1; i \u003c targetList.size() + 1; i++) {","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"                listFound \u003d listFound + \"\\n\" + i + \".\" + (targetList.get(i - 1)).toString();","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"            return ui.showFindResult(true, listFound);","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"weilin1202":49}},{"path":"src/main/java/duke/parser/HandleList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import duke.exception.WrongFormatException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":" * Processes and handle the list command","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"public class HandleList {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    public HandleList() {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"     * Check whether the input line is in correct format","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"     * Calls function in TaskList class to generate the whole list of tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"     * @param input Entered by user","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"     * @param tasklist List of existing tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"     * @param ui Ui that would generate reply for the user","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     * @return A String to respond to user through ui, printing the whole list of task","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"     * @throws WrongFormatException This exception is thrown when input contains more words than \"list\"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    public static String performList(String input, TaskList tasklist, Ui ui) throws WrongFormatException {","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        boolean correctFormat \u003d input.equals(\"list\");","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"        if (!correctFormat) {","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"            throw new WrongFormatException(\"list\");","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        return ui.showList(tasklist.printList());","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"weilin1202":35}},{"path":"src/main/java/duke/parser/HandleMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":" * Processes and handle the mark command","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"public class HandleMark {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    public HandleMark() {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"     * Perform the marking of task in task list if input is in correct format and task number is valid","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"     * @param input Entered by user","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"     * @param tasklist List of existing tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"     * @param ui Ui that would generate reply for the user","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"     * @return A String to respond to user through ui, inform user about status of task","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    public static String performMark(String input, TaskList tasklist, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"            int taskNum \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"            tasklist.markTask(taskNum);","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"            assert input.trim().split(\" \").length \u003e 1 : \"There is no task to mark!\";","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"            return ui.showMarkTask(tasklist.getTask(taskNum).toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"            throw new DukeException(\"Please enter a valid task number!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"weilin1202":32}},{"path":"src/main/java/duke/parser/HandleToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import duke.exception.WrongFormatException;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":" * Processes and handle the todo command","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"public class HandleToDo {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    public HandleToDo() {","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"     * Check whether the input line to add a todo task is valid and in the correct format or not","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"     * Perform the adding of todo task into task list if input is in correct format","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     * @param input Entered by user","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"     * @param tasklist List of existing tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"     * @param ui Ui that would generate reply for the user","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"     * @return A String to respond to user through ui, inform user whether task has been added or not","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"     * @throws WrongFormatException This exception is thrown when input is not in correct format","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    public static String performToDo(String input, TaskList tasklist, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"        String taskString;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"            taskString \u003d input.trim().substring(5);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"            throw new DukeException(\"Oi! You didn\u0027t enter task description!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"        Task taskToDo \u003d new ToDo(taskString);","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"        if (tasklist.checkDuplicates(taskToDo)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"            throw new DukeException(\"OOPS! You have added this task before already!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"        tasklist.addTask(taskToDo);","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"        return ui.showAddTask(taskToDo.toString(), tasklist.getSize());","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"weilin1202":42}},{"path":"src/main/java/duke/parser/HandleUnmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":" * Processes and handle the unmark command","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"public class HandleUnmark {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    public HandleUnmark() {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"     * Perform the unmarking of task in task list if input is in correct format and task number is valid","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"     * @param input Entered by user","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"     * @param tasklist List of existing tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"     * @param ui Ui that would generate reply for the user, inform user about status of task","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"     * @return A String to respond to user through ui, informing user about status of task","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    public static String performUnmark(String input, TaskList tasklist, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"            int taskNum \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"            tasklist.unmarkTask(taskNum);","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"            assert input.trim().split(\" \").length \u003e 1 : \"There is no task to unmark!\";","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"            return ui.showUnmarkTask(tasklist.getTask(taskNum).toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"            throw new DukeException(\"Please enter a valid task number!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"weilin1202":32}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import duke.exception.WrongCommandException;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import duke.exception.WrongFormatException;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":" * A parser to understand and perform user command","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"public class Parser {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    private ArrayList\u003cString\u003e listOfCommands;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     * Constructor for Parser","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"     * @param taskList","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"        this.listOfCommands \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"            {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"                add(\"mark\");","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"                add(\"unmark\");","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"                add(\"todo\");","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"                add(\"deadline\");","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"                add(\"event\");","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"                add(\"delete\");","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"                add(\"find\");","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"        };","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"     * Perform the user command and create the tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"     * @throws EmptyDescriptionException If no description of task after the command word","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"     * @throws WrongCommandException If wrong command word is being entered","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"    public String performCommand(String input, Ui ui) {","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"        String[] arrOfString \u003d trimmedInput.split(\" \", 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"        String command \u003d arrOfString[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"            this.checkCommand(input, command);","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"            switch (command) {","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"                return HandleBye.performBye(trimmedInput, ui);","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"            case \"list\":","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"                return HandleList.performList(trimmedInput, taskList, ui);","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"                return HandleMark.performMark(trimmedInput, taskList, ui);","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"                return HandleUnmark.performUnmark(trimmedInput, taskList, ui);","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"                return HandleToDo.performToDo(trimmedInput, taskList, ui);","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"                return HandleDeadline.performDeadline(trimmedInput, taskList, ui);","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"            case \"event\":","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"                return HandleEvent.performEvent(trimmedInput, taskList, ui);","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"                return HandleDelete.performDelete(trimmedInput, taskList, ui);","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"            case \"find\":","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"                return HandleFind.performFind(trimmedInput, taskList, ui);","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"            default:","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"                assert false : \"Unable to process command\";","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"                return ui.showError(\"Please enter a valid command and/or task!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"        } catch (EmptyDescriptionException | WrongCommandException","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"                | WrongFormatException | DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"     * Check whether the command and input is valid or invalid","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"     * @param input Input entered by user","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"weilin1202"},"content":"     * @param command","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"     * @throws EmptyDescriptionException Exception thrown when there is no description/ task number after the command","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"weilin1202"},"content":"     * @throws WrongCommandException Exception thrown when the command does not exist","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"weilin1202"},"content":"    public void checkCommand(String input, String command) throws EmptyDescriptionException, WrongCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"weilin1202"},"content":"        if (listOfCommands.contains(input)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"weilin1202"},"content":"        } else if (!listOfCommands.contains(command) \u0026\u0026 !command.equals(\"list\") \u0026\u0026 !command.equals(\"bye\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"            throw new WrongCommandException();","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":97}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import java.util.List;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":" * Storage class that manage loading of tasks from file and saving of tasks in file","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"public class Storage {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    private File taskFile;","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"     * Constructor of Storage to create file","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"            taskFile \u003d new File(filepath);","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"            if (!taskFile.exists()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"                checkDirectoryExist(\"./data/\");","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"                checkFileExist();","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"     * Check if the directory of the file path exists or not, make directory if it does not exist","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"     * @param directoryPath","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"    public void checkDirectoryExist(String directoryPath) {","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"     * Check if file exist, create a new text file to be stored in directory path if file does not exist","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"    public void checkFileExist() throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"        if (!taskFile.exists()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"            taskFile.createNewFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"     * Load tasks from file","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"     * @return List of tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"     * @throws DukeException If unable to read file","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"            BufferedReader myReader \u003d new BufferedReader(new FileReader(this.taskFile));","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"            String line \u003d myReader.readLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"                // task is saved in the following format:","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"                // taskType /// completionStatus /// taskDescription /// startDate for event or deadline /// endDate","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"                // null will be saved if the task do not have the component","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"                String[] str \u003d line.split(\" /// \", 5);","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"                Task task \u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"                switch (str[0]) {","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"                case \"T\":","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"                    task \u003d new ToDo(str[2]);","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"weilin1202"},"content":"                    break;","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"                case \"D\":","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"weilin1202"},"content":"                    task \u003d new Deadline(str[2], str[3]);","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"weilin1202"},"content":"                    break;","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"weilin1202"},"content":"                case \"E\":","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"weilin1202"},"content":"                    task \u003d new Event(str[2], str[3], str[4]);","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"                    break;","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"weilin1202"},"content":"                default:","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"                    break;","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"weilin1202"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"weilin1202"},"content":"                if (str[1].equals(\"[X]\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"weilin1202"},"content":"                    task.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"                taskList.add(task);","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"                line \u003d myReader.readLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"weilin1202"},"content":"            myReader.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"weilin1202"},"content":"        } catch (IOException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"weilin1202"},"content":"            throw new DukeException(\"Unable to load file\");","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":"        return taskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"     * Save the list of tasks in the file","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"weilin1202"},"content":"     * @param taskList List of tasks to be saved","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"weilin1202"},"content":"     * @throws IOException When tasks cannot be saved","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"weilin1202"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"weilin1202"},"content":"            BufferedWriter myWriter \u003d new BufferedWriter(new FileWriter(this.taskFile));","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"weilin1202"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"weilin1202"},"content":"                Task t \u003d taskList.getTaskList().get(i);","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"weilin1202"},"content":"                myWriter.write(t.toBeSaved() + \"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"weilin1202"},"content":"            myWriter.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"weilin1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"weilin1202"},"content":"            System.out.println(\"There is an error in saving tasks!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":121,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":123}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":" * Class for task with deadline","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    private String taskDescription;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    private LocalDate deadLine;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    private String deadlineString;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"     * Constructor of Deadline task","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"     * @param taskString user taskString input","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"     * @param deadline deadline for the task","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    public Deadline(String taskString, String deadline) {","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        super(taskString);","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        taskDescription \u003d taskString;","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"        deadLine \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"        deadlineString \u003d deadline;","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"    public String getTask() {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"    public String fullDetails() {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"        return this.taskDescription + \" \" + this.getDeadline();","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"     * Format the deadline date in the MMM d yyyy style","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"     * @return String of a formatted deadline","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"        return this.deadLine.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"        return \"[D]\" + super.toString() + \" ( by: \" + this.getDeadline() + \" )\";","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"    public String toBeSaved() {","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"        return \"D\" + \" /// \" + super.toBeSaved() + \" /// \" + this.deadlineString + \" /// \" + \"null\";","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":58}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":" * Class for tasks with specific timeline, from a date to another date","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    private String taskDescription;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    private String startDateString;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    private String endDateString;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"     * Constructor for Event task","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"     * @param taskString user taskString input","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"     * @param startDateInput start date of event","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"     * @param endDateInput end date of event","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    public Event(String taskString, String startDateInput, String endDateInput) {","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        super(taskString);","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        taskDescription \u003d taskString;","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"        startDateString \u003d startDateInput;","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"        startDate \u003d LocalDate.parse(startDateInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"        endDateString \u003d endDateInput;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        endDate \u003d LocalDate.parse(endDateInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    public String getTask() {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"    public String fullDetails() {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"        return this.taskDescription + \" \" + this.getTimeline();","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"     * Get the timeline of event in a specific format ( start date to end date )","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"     * @return String of a formatted timeline","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"    public String getTimeline() {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"        return this.getStartDate() + \" to \" + this.getEndDate();","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"        return this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"        return this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"        return \"[E]\" + super.toString() + \" (\" + this.getTimeline() + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"    public String toBeSaved() {","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"        return \"E\" + \" /// \" + super.toBeSaved() + \" /// \" + this.startDateString + \" /// \" + this.endDateString;","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":67}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":" * Parent Task class which contains details of a task","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"    private String taskString;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"     * Constructor of Task","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"     * @param taskString user taskString input","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    public Task(String taskString) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"        this.taskString \u003d taskString;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    public abstract String getTask();","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    public abstract String fullDetails();","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"     * Check current status of task, whether it is marked completed or not","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"     * @return X means completed and space means not completed","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"    public String currentTaskStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"            return \"[X]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"            return \"[ ]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"     * Mark a task is completed","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"     * Mark a task as not completed","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"     * Get description of task","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"     * @return String of task description","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"        return this.currentTaskStatus() + \" \" + this.taskString;","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"     * Check if the two task has exact same detail","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"     * Details such as task description, deadline, event start date and event end date","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"     * @param t Task to check with","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"     * @return True if the two tasks has exact same details, which means this task is duplicated","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"    public boolean equals(Task t) {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"        if (this \u003d\u003d t) {","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"            return true;","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"        return this.fullDetails().equals(t.fullDetails());","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"    };","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"    public String toBeSaved() {","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"        return this.currentTaskStatus() + \" /// \" + this.taskString;","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":75}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.util.List;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":" * TaskList to contain all the tasks in a list","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"public class TaskList {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"     * Constructor for TaskList","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    public TaskList(List\u003cTask\u003e taskListInput) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        this.taskList \u003d taskListInput;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"        return this.taskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"        return taskList.size();","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"     * Prints all the tasks in the taks list","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"    public String printList() {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"            return \"There is no task in your task list!\";","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"        String list \u003d \"Here are some tasks in your list:\";","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"        for (int i \u003d 1; i \u003c this.taskList.size() + 1; i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"            list \u003d list + \"\\n\" + i + \".\" + (taskList.get(i - 1)).toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"        return list;","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"     * Mark the task stored in the list as completed","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"     * @param taskNum Task number of task in the list to mark as completed","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"    public void markTask(int taskNum) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"        Task originalTask \u003d taskList.get(taskNum);","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"        originalTask.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"     * Mark the task stored in the list as not completed","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"     * @param taskNum Task number of task in the list to mark as completed","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"    public void unmarkTask(int taskNum) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"        Task originalTask \u003d taskList.get(taskNum);","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"        originalTask.unmarkTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"     * Add the task into the list of task","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"        taskList.add(task);","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"weilin1202"},"content":"     * Delete the task from the list","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"     * @param taskNum Task number of task in the list to be deleted","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"weilin1202"},"content":"    public void deleteTask(int taskNum) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"weilin1202"},"content":"        taskList.remove(taskNum);","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"     * Check if the task has exact same details with any of the existing tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"weilin1202"},"content":"     * @param task task to be checked","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"weilin1202"},"content":"     * @return True if there is an existing task that has the same details as the task being checked","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"    public boolean checkDuplicates(Task task) {","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"            if ((taskList.get(i)).equals(task)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"weilin1202"},"content":"                return true;","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"weilin1202"},"content":"        return false;","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":105}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":" * Class for task to be done","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"    private String taskDescription;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"     * Constructor for To-Do Task","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"     * @param taskString user taskString input","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    public ToDo(String taskString) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"        super(taskString);","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"        taskDescription \u003d taskString;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    public String getTask() {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    public String fullDetails() {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"    public String toBeSaved() {","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"        return \"T\" + \" /// \" + super.toBeSaved() + \" /// \" + \"null\" + \" /// \" + \"null\";","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":41}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":" * Ui class to handle interactions with user","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"public class Ui {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"    public Ui() {","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"     * Greet user when application is first launched","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"     * @return String to greet user","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    public String greet() {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"        return \"Hello! I\u0027m Beary Bear!! \\nNice to meet you! \\nWhat can I do for you?\";","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"     * Say goodbye to the user before the application closes","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"     * @return String to say goodbye to user","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    public String sayBye() {","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        return \"Bye!! Do visit me again! I\u0027ll always be free for you :)\";","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"     * Shows error message when exception is being caught or unable to perform command","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"     * @param errorMessage String to inform user what should be done to correct this error","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"     * @return String to inform user about the error","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"        return errorMessage;","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"     * Informs user that the task has been added","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"     * @param task Task that has been added","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"     * @param totalTaskNumber Number of task in the task list currently","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"     * @return String to inform user that task has been added","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"    public String showAddTask(String task, int totalTaskNumber) {","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"        return \"Wow! I\u0027ve added this task: \\n  \" + task","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"                + \"\\nNow you have \" + totalTaskNumber + \" tasks in the list.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"     * Informs user that the task has been deleted","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"     * @param task Task that has been deleted","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"     * @param totalTaskNumber Number of task in the task list currently","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"     * @return String to inform user that task has been deleted","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"    public String showDeleteTask(String task, int totalTaskNumber) {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"        return \"Okay!! I\u0027ve removed this task: \\n  \" + task","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"                + \"\\nNow you have \" + totalTaskNumber + \" tasks in the list.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"     * Inform user about the result of finding the target word in the list of tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"     * @param isFound True if some matching tasks are found","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"     * @param result String of matching tasks if isFound is true","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"     * @return String to inform user the list of matching task found if isFound is true","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"     *     and inform user that list is not found if isFound is false","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"    public String showFindResult(Boolean isFound, String result) {","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"        if (!isFound) {","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"            return \"Oops! :( There are no matching tasks found. Try again?\";","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"        return result;","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"     * Inform the user that a task has been marked","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"     * @param task task that has been marked","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"     * @return String to inform user that a task has been marked","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"    public String showMarkTask(String task) {","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"        return \"YAYYYY Good Job!!! \\n I\u0027ve marked this task as done: \\n  \" + task;","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"     * Inform the user that a task has been unmarked","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"weilin1202"},"content":"     * @param task task that has been unmarked","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"weilin1202"},"content":"     * @return String to inform user that a task has been unmarked","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"weilin1202"},"content":"    public String showUnmarkTask(String task) {","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"        return \"Ok... I\u0027ve marked this task as not done yet: \\n  \" + task;","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"weilin1202"},"content":"     * Inform user about the list of tasks currently present in the task list","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"weilin1202"},"content":"     * @param list","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"     * @return String of current tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"    public String showList(String list) {","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"weilin1202"},"content":"        return list;","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"weilin1202"},"content":"     * Inform user that the file cannot be loaded and task list cannot be obtained from the file","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"weilin1202"},"content":"    public void showLoadError() {","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"weilin1202"},"content":"        System.out.println(\"Oops! Unable to load file!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":107}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-border-color: transparent; -fx-border-width: 2; -fx-background-radius: 10; -fx-background-color: #c8def5;\" text\u003d\"Label\" textFill\u003d\"BLACK\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"                \u003cInsets left \u003d \"10\" right \u003d \"10\"\u003e\u003c/Insets\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"            \u003cFont size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"            \u003cFont size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#4837ce\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"556.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-image: url(/Images/background-image.png); -fx-background-position: bottom\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"weilin1202":23}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"    private Deadline deadlineTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    public void setUp() {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"        deadlineTask \u003d new Deadline(\"return book\", \"2020-10-10\");","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    public void getTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"return book\", deadlineTask.getTask());","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    public void getDeadlineTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"Oct 10 2020\", deadlineTask.getDeadline());","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    public void markTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"        deadlineTask.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"[D][X] return book ( by: Oct 10 2020 )\", deadlineTask.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"    public void unmarkTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"        deadlineTask.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"        deadlineTask.unmarkTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"[D][ ] return book ( by: Oct 10 2020 )\", deadlineTask.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":39}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"public class EventTest {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"    private Event eventTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    public void setUp() {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"        eventTask \u003d new Event(\"return book\", \"2020-10-10\", \"2021-10-10\");","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    public void getTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"return book\", eventTask.getTask());","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    public void getTimelineTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"Oct 10 2020 to Oct 10 2021\", eventTask.getTimeline());","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":26}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"    private ToDo toDoTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    public void setUp() {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"        toDoTask \u003d new ToDo(\"return book\");","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    public void getTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"return book\", toDoTask.getTask());","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"    public void markTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        toDoTask.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"[T][X] return book\", toDoTask.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"    public void unmarkTaskTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        toDoTask.markTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"        toDoTask.unmarkTask();","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"        assertEquals(\"[T][ ] return book\", toDoTask.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"weilin1202":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"todo cook","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"event pay /from 4am /to 7pm","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"deadline code /by no idea :-p","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"mark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"unmark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"list","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"weilin1202":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"weilin1202":1,"-":20}}]
