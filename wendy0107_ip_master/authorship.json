[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"1. Open Intellij (if you are not in the welcome screen, click `duke.storage.Storage` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"3. After that, locate the `src/main/java/src.main.java.duke.Duke.java` file, right-click it, and choose `Run src.main.java.duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wendy0107":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"checkstyle {","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wendy0107":21,"-":40}},{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"E | 1 | briefing | 2023-02-03 | 2023-02-03","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"D | 1 | test1 | 2023-01-28","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"T | 1 | test","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"D | 0 | test | 2020-02-02","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"E | 1 | career fair | 2011-01-01 | 2011-02-02","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"T | 0 | homework","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"T | 0 | hmw","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"D | 0 | homework | 2022-02-02","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"D | 0 | hm | 2022-02-02","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"E | 0 | hm | 2022-02-02 | 2022-02-02","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"E | 0 | valentine\u0027s day | 2023-02-14 | 2023-02-14","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"T | 0 | aaaa veryyyy longggg taskkk to doooo aiyooo so many things to doo","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"T | 0 | vday","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"D | 0 | iP | 2022-02-14","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"wendy0107":14}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"/** The Duke class contains variables and methods related to running an instance of Duke. */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    protected static final String PATH \u003d \"src/data/duke.txt\";","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    protected final Parser parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    protected final Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    protected Storage storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"     * @param filePath path of the file containing data for Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"            this.storage.loadFileInto(this.taskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"            ui.showError(e.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"            response \u003d command.execute(this.taskList, this.ui);","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"            storage.saveToFile(this.taskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"            if (command.isExit()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                //@@author wendy0107-reused","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                //Reused from https://github.com/tyw2811/ip","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                // with minor modifications.","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                PauseTransition wait \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                wait.setOnFinished(event -\u003e {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    Platform.exit();","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    System.exit(0);","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                });","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                wait.play();","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            assert !response.isEmpty() : \"Error returning Luffy\u0027s response\";","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return response;","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            response \u003d ui.showError(e.toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            response +\u003d ui.showLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return response;","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wendy0107":41,"-":20}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    private Duke duke \u003d new Duke(Duke.PATH);","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"            stage.show();","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"wendy0107":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"import duke.command.ViewCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"/** Class parses user input into commands. */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    /** Empty constructor creates an instance of Parser. */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    public Parser() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"     * Returns an appropriate command based on user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"     * @param userInput String containing user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"     * @return Command object based on user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If user provides an inappropriate command format.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"    public Command parse(String userInput) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"        String[] commandDetails \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"        String commandType \u003d commandDetails[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"        trimArgs(commandDetails);","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"        checkSufficientArgs(commandType, commandDetails);","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"        String arguments \u003d commandDetails.length \u003c 2 ? \"\" : commandDetails[1];","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"        switch (commandType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"        case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"            return new MarkCommand(parseIntArg(arguments));","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"            return new UnmarkCommand(parseIntArg(arguments));","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"             return new DeleteCommand(parseIntArg(arguments));","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"        case \"find\":","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"        case \"view\":","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"            return new ViewCommand(parseDate(arguments));","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"            Todo todo \u003d new Todo(parseTodo(arguments));","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"            return new ToDoCommand(todo);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"            String[] deadlineDetails \u003d parseDeadline(arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"            return new DeadlineCommand(assignDeadline(deadlineDetails));","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"        case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"            String[] eventDetails \u003d parseEvent(arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"            return new EventCommand(assignEvent(eventDetails));","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"none\");","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"     * Checks if there are sufficient arguments given.","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"     * @param commandType Specific command.","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"     * @param commandDetails Number of arguments given.","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException if there are insufficient arguments given","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"    public void checkSufficientArgs(String commandType, String[] commandDetails) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"        boolean isSingle \u003d commandDetails.length \u003c 2;","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"        boolean isSingleCommand \u003d (commandType.equals(\"bye\") || commandType.equals(\"list\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"        boolean hasTooManyArg \u003d !isSingle \u0026\u0026 isSingleCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"        boolean hasInsufficientArgs \u003d isSingle \u0026\u0026 !isSingleCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"        if (hasTooManyArg) {","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"too many details\");","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"        } else if (hasInsufficientArgs) {","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(commandType);","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"        } else {}","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"     * Trims whitespace from each argument.","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"     * @param arguments user\u0027s command inputs.","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"wendy0107"},"content":"    public void trimArgs(String[] arguments) {","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"wendy0107"},"content":"        for (int i \u003d 0; i \u003c arguments.length; i++) {","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"wendy0107"},"content":"            arguments[i] \u003d arguments[i].trim();","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"            if (arguments[i].isEmpty()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"wendy0107"},"content":"                arguments[i] \u003d null;","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"wendy0107"},"content":"            } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"wendy0107"},"content":"                continue;","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"     * Returns an integer from parsed string argument if a valid argument is given.","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"wendy0107"},"content":"     * @param argument Parsed string argument that should contain an integer.","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"wendy0107"},"content":"     * @return Parsed integer.","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If argument given is empty or not an integer.","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"wendy0107"},"content":"    public int parseIntArg(String argument) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"wendy0107"},"content":"        int intArgument;","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"wendy0107"},"content":"            intArgument \u003d Integer.parseInt(argument.trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"wendy0107"},"content":"            return intArgument - 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"wendy0107"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"input type\");","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"wendy0107"},"content":"    public LocalDate parseDate(String argument) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"wendy0107"},"content":"            LocalDate date \u003d LocalDate.parse(argument);","lastModifiedDate":"2023-02-13"},{"lineNumber":124,"author":{"gitId":"wendy0107"},"content":"            return date;","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"wendy0107"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"date format\");","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":129,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":130,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"wendy0107"},"content":"     * Returns the taskname for a Todotask from the given argument.","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"wendy0107"},"content":"     * @param argument String containing user input for a Todotask command.","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"wendy0107"},"content":"     * @return taskName for a Todotask.","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If argument is empty.","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"wendy0107"},"content":"    public String parseTodo(String argument) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"wendy0107"},"content":"        String taskName \u003d argument.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"wendy0107"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"wendy0107"},"content":"            return taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"wendy0107"},"content":"     * Creates a Deadline from deadlineDetails.","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"wendy0107"},"content":"     * @param deadlineDetails contains inputs for a Deadline instance.","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"wendy0107"},"content":"     * @return a Deadline.","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"wendy0107"},"content":"    public Deadline assignDeadline(String[] deadlineDetails) {","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"wendy0107"},"content":"        String taskName \u003d deadlineDetails[0];","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"wendy0107"},"content":"        LocalDate endDate \u003d LocalDate.parse(deadlineDetails[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"wendy0107"},"content":"        return new Deadline(taskName, endDate);","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"wendy0107"},"content":"     * Creates an Event from eventDetails.","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"wendy0107"},"content":"     * @param eventDetails contains inputs for an Event instance.","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"wendy0107"},"content":"     * @return an Event.","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"wendy0107"},"content":"    public Event assignEvent(String[] eventDetails) {","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"wendy0107"},"content":"        String taskName \u003d eventDetails[0];","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"wendy0107"},"content":"        LocalDate startDate \u003d LocalDate.parse(eventDetails[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"wendy0107"},"content":"        LocalDate endDate \u003d LocalDate.parse(eventDetails[2]);","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"wendy0107"},"content":"        return new Event(taskName, startDate, endDate);","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"wendy0107"},"content":"     * Returns parsed inputs for creating a Deadline from the given user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":170,"author":{"gitId":"wendy0107"},"content":"     * @param argument String contains user input for creating a Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":171,"author":{"gitId":"wendy0107"},"content":"     * @return An array of strings containing the taskName and deadline for creating a Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":172,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If any of the user inputs are empty or of the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":173,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":174,"author":{"gitId":"wendy0107"},"content":"    public String[] parseDeadline(String argument) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"wendy0107"},"content":"        argument \u003d argument.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"wendy0107"},"content":"        if (argument.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"deadline\");","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"wendy0107"},"content":"        String[] deadlineDetails \u003d argument.split(\"/by \");","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"wendy0107"},"content":"        if (deadlineDetails.length !\u003d 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"timing\");","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"wendy0107"},"content":"        } else if (deadlineDetails[0].isEmpty()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"deadline\");","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"wendy0107"},"content":"            trimArgs(deadlineDetails);","lastModifiedDate":"2023-02-12"},{"lineNumber":187,"author":{"gitId":"wendy0107"},"content":"            LocalDate end \u003d LocalDate.parse(deadlineDetails[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":188,"author":{"gitId":"wendy0107"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":189,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"date format\");","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"wendy0107"},"content":"        return deadlineDetails;","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":193,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":194,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":195,"author":{"gitId":"wendy0107"},"content":"     * Returns parsed inputs for creating an Event from the given user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"wendy0107"},"content":"     * @param argument String contains user input for creating an Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":197,"author":{"gitId":"wendy0107"},"content":"     * @return An array of strings containing the taskName, startDate and endDate for creating an Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If any of the user inputs are empty or of the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":199,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":200,"author":{"gitId":"wendy0107"},"content":"    public String[] parseEvent(String argument) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":201,"author":{"gitId":"wendy0107"},"content":"        argument \u003d argument.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":202,"author":{"gitId":"wendy0107"},"content":"        if (argument.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":203,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"event\");","lastModifiedDate":"2023-02-12"},{"lineNumber":204,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":205,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":206,"author":{"gitId":"wendy0107"},"content":"        String[] eventDetails \u003d argument.split(\"/from |/by \");","lastModifiedDate":"2023-01-26"},{"lineNumber":207,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":208,"author":{"gitId":"wendy0107"},"content":"        if (eventDetails.length !\u003d 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":209,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"timing\");","lastModifiedDate":"2023-01-26"},{"lineNumber":210,"author":{"gitId":"wendy0107"},"content":"        } else if (argument.indexOf(\"/from\") \u003e argument.indexOf(\"/by\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":211,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"wrong order\");","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"wendy0107"},"content":"        } else if (eventDetails[0].isEmpty()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":213,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"event\");","lastModifiedDate":"2023-02-12"},{"lineNumber":214,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"wendy0107"},"content":"            trimArgs(eventDetails);","lastModifiedDate":"2023-02-12"},{"lineNumber":217,"author":{"gitId":"wendy0107"},"content":"            LocalDate start \u003d LocalDate.parse(eventDetails[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":218,"author":{"gitId":"wendy0107"},"content":"            LocalDate end \u003d LocalDate.parse(eventDetails[2]);","lastModifiedDate":"2023-02-12"},{"lineNumber":219,"author":{"gitId":"wendy0107"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":220,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"date format\");","lastModifiedDate":"2023-01-26"},{"lineNumber":221,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":222,"author":{"gitId":"wendy0107"},"content":"        return eventDetails;","lastModifiedDate":"2023-01-26"},{"lineNumber":223,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":224,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":225,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":225}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":" * The ByeCommand class encapsulates the variables and methods related to bye commands.","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    private static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        super(BYE_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    public String execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        return ui.showExit();","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":20}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":" * The abstract Command class encapsulates the variables and methods related to commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    private final String commandName;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of a Command.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"     * @param commandName String name of the command created.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    public Command(String commandName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"     * Executes the command and returns the response as a String.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"     * @param taskList the list of tasks the command may manipulate.","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"     * @param ui an instance of Ui that prints the outcome of a command.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"     * @return outcome of command as a String","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException upon input errors for a command.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"    public abstract String execute(TaskList taskList, Ui ui) throws DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"     * Checks whether the command is an instance of Bye command.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"     * @return true if the command is an instance of the Bye command and false otherwise.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"        return this instanceof ByeCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":38}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":" * The DeadlineCommand class encapsulates the variables and methods related to Deadline commands.","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    private final Deadline deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"     * Constructor creates an instance of DeadlineCommand.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     * @param deadline An instance of Deadline.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    public DeadlineCommand(Deadline deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        super(DEADLINE_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    public String execute(TaskList lst, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        lst.addTask(this.deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        return ui.showDeadline(this.deadline, lst.getSize());","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":" * The DeleteCommand class encapsulates the variables and methods related to Delete commands.","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    private final int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"     * Constructor creates an instance of DeleteCommand.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     * @param index int index of task to be deleted.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        super(DELETE_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    public String execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        Task task \u003d taskList.getTask(this.index);","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        taskList.deleteTask(this.index);","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"        return ui.showDeletedTask(task, taskList.getSize());","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":30}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":" * The EventCommand class encapsulates the variables and methods related to Event commands.","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    private final Event event;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"     * Constructor creates an instance of EventCommand.","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"     * @param event An instance of Event.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        super(EVENT_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    public String execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"        taskList.addTask(this.event);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        return ui.showEvent(this.event, taskList.getSize());","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":28}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":" * The FindCommand class encapsulates the variables and methods related to Find commands.","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    private static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    private final String keyword;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"     * Constructor creates an instance of FindCommand.","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"     * @param keyword String keyword.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        super(FIND_COMMAND);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    public String execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"        String response \u003d taskList.printMatchingList(this.keyword);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        response +\u003d ui.showLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        return response;","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"wendy0107":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":" * The ListCommand class encapsulates the variables and methods related to List commands.","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        super(LIST_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    public String execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        return ui.showList(taskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":20}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":" * The MarkCommand class encapsulates the variables and methods related to Mark commands.","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    private static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    private final int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"     * Constructor creates an instance of MarkCommand.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     * @param index int index of task to marked as completed.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        super(MARK_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    public String execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        taskList.mark(this.index);","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        return ui.showMarkedTask(taskList.getTask(this.index));","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":29}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":" * The TodoCommand class encapsulates the variables and methods related to Todo commands.","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    private final Todo todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"     * Constructor creates an instance of TodoCommand.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     * @param todo An instance of Todo.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    public ToDoCommand(Todo todo) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        super(TODO_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    public String execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        taskList.addTask(this.todo);","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        return ui.showTodo(this.todo, taskList.getSize());","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":29}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":" * The UnmarkCommand class encapsulates the variables and methods related to Unmark commands.","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    private static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    private final int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"     * Constructor creates an instance of UnmarkCommand","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"     * @param index int index of task to be mark an incomplete.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        super(UNMARK_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    public String execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"        taskList.unmark(this.index);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        return ui.showUnmarkedTask(taskList.getTask(this.index));","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":28}},{"path":"src/main/java/duke/command/ViewCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    private static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    private LocalDate date;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    public ViewCommand(LocalDate date) {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        super(FIND_COMMAND);","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    public String execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        return ui.showSchedule(taskList, this.date);","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"wendy0107":21}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.exception;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"/** Class contains all exceptions thrown by Duke. */","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"    protected ArrayList\u003cString\u003e commandError \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"            Arrays.asList(\"todo\", \"deadline\", \"event\", \"view\", \"missing details\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    protected ArrayList\u003cString\u003e indexError \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"            Arrays.asList(\"mark\", \"unmark\", \"delete\"));","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    protected ArrayList\u003cString\u003e fileError \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"            Arrays.asList(\"file already exists\", \"creating new file\",","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"                    \"updating file\", \"saving changes to file\", \"file not found\", \"empty line in file\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    protected ArrayList\u003cString\u003e formatError \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"            Arrays.asList(\"date format\", \"wrong order\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    protected ArrayList\u003cString\u003e findError \u003d new ArrayList\u003c\u003e(Arrays.asList(\"find\", \"empty keyword\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    protected String errorMsg;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of DukeException.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"     * @param command type of exception thrown.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    public DukeException(String command) {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"        if (commandError.contains(command)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"The \" + command + \" description/date cannot be empty.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        } else if (indexError.contains(command)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"Please remember to enter an index!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"        } else if (fileError.contains(command)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"An error occurred when/as \" + command;","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"        } else if (findError.contains(command)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"Find keyword cannot be empty!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"            switch (command) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"            case \"bounds\":","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"                this.errorMsg \u003d \"This index is out of bounds!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            case \"timing\":","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"                this.errorMsg \u003d \"The task timings cannot be empty!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"            case \"missing details\":","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"                this.errorMsg \u003d \"The task input is missing some details!\";","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"            case \"date format\":","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"                this.errorMsg \u003d \"The date is not the correct format!\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"                        + \"Please enter a date with this format: yyyy-mm-dd\";","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"            case \"wrong order\":","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"                this.errorMsg \u003d \"The dates entered are in the wrong order!\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"                        + \"The correct formats are as follows:\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"                        + \"deadline task_name/by yyyy-mm-dd\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"                        + \"event task_name/from yyyy-mm-dd/by yyyy-mm-dd\";","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"            case \"too many details\":","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"                this.errorMsg \u003d \"The command shouldn\u0027t be followed by other details!\";","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"            case \"input type\":","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"                this.errorMsg \u003d \"Input is the wrong type!!\";","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"            default:","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"                this.errorMsg \u003d \"I\u0027m sorry but I don\u0027t know what that means :(\";","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"     * Overrides toString and returns a String containing exception message.","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"     * @return String containing exception message.","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"        return \"Oh no!! \" + this.errorMsg;","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wendy0107":74}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":" * The Storage class contains variables and methods related to handling a data file for Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    private String filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    private File file;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of Storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"     * @param filePath Path of the file containing data for Duke or destination file to","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"     *                 contain data for Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"     * Creates a file if the file does not exist.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"     * @param filePath Path of the file containing data for Duke or destination file to contain","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"     *                 data for Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If file does not exist.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"    public void createFile(String filePath) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            this.filePath \u003d filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"            this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(\"file already exists\");","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"                file.getAbsoluteFile().getParentFile().mkdirs();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"                System.out.println(\"Successfully created new file.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"creating new file\");","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"     * Stores data in given list of tasks into the file path of Storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"     * @param taskList contains list of tasks from an instance of Duke.","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"    public void saveToFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"            assert writer !\u003d null : \"Error saving to file\";","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"                String taskText \u003d taskList.getTask(i).toFile();","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"                writer.write(taskText);","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"            writer.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"saving changes to file\");","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"     * Loads file data into a TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"     * @param taskList TaskList file data is to be laoded into.","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If file does not exist.","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"    public void loadFileInto(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"            Scanner fileData \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"            while (fileData.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"                String taskString \u003d fileData.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"                assert !taskString.isEmpty() : \"File contains invalid inputs\";","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"                taskList.addTaskFromString(taskString);","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"            fileData.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"            this.createFile(this.filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"            this.loadFileInto(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"wendy0107":87}},{"path":"src/main/java/duke/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":" * Class contains variables and methods related to modifying a list of Tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"public class TaskList {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    protected LinkedList\u003cTask\u003e lst;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        this.lst \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"     * @param t Task to be added.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"        this.lst.add(t);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"     * Returns task at given index of the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"     * @param index index of task to be retrieved.","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"     * @return Task at given index of the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"        if (index \u003c 0 || index \u003e this.getSize() - 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"bounds\");","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"            return this.lst.get(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"     * Marks the task at the given index of the TaskList as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"     * @param taskNum index of task to be marked as done in the TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If index given is out of bounds.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"    public void mark(int taskNum) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        if (taskNum \u003c 0 || taskNum \u003e lst.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"bounds\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"        Task t \u003d this.getTask(taskNum);","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"        t.markAsDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"     * Marks the task at the given index in TaskList as unDone.","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"     * @param taskNum index of task to be marked as unDone.","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If index given is out of bounds.","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"    public void unmark(int taskNum) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"        if (taskNum \u003c 0 || taskNum \u003e lst.size() - 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"bounds\");","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"        Task t \u003d this.getTask(taskNum);","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"        t.markAsUndone();","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"     * Removes task at given index of TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"     * @param taskNum index of task to be removed.","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If index given is out of bounds.","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"    public void deleteTask(int taskNum) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"        if (taskNum \u003c 0 || taskNum \u003e lst.size() - 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"bounds\");","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"            Task t \u003d this.lst.remove(taskNum);","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"     * Returns the TaskList as a String.","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"     * @return String containing all the tasks in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"    public String printList() {","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"        for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"            String elem \u003d lst.get(i).toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"            String formattedElem \u003d String.format(\"%d. %s\\n\", i + 1, elem);","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"wendy0107"},"content":"            response +\u003d formattedElem;","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"wendy0107"},"content":"        return response;","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"wendy0107"},"content":"     * Returns all tasks in the list which contain the keyword as a String.","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"     * @param keyword String keyword from find command.","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"wendy0107"},"content":"     * @return String containing all tasks in the list which contain the keyword.","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"wendy0107"},"content":"    public String printMatchingList(String keyword) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"empty keyword\");","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"wendy0107"},"content":"        String response \u003d \"Here are the matching tasks in your list :)\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"wendy0107"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"wendy0107"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"wendy0107"},"content":"            Task task \u003d this.getTask(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"wendy0107"},"content":"            String taskName \u003d task.getTaskName();","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"wendy0107"},"content":"            if (taskName.contains(keyword)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"wendy0107"},"content":"                count++;","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"wendy0107"},"content":"                response +\u003d String.format(\"%d. %s\\n\", count, task);","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"wendy0107"},"content":"        return response;","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"wendy0107"},"content":"     * Parses String into a Task and adds it to the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"wendy0107"},"content":"     * @param data contains inputs to creating a Task.","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If given input is empty or if the given input is of the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"    public void addTaskFromString(String data) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"wendy0107"},"content":"        if (data.trim().isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"empty line in file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"wendy0107"},"content":"        String[] details \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"wendy0107"},"content":"        // T/D/E || completed || descr || deadline/start || end","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"wendy0107"},"content":"        String taskType \u003d details[0];","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"wendy0107"},"content":"        String doneData \u003d details[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"wendy0107"},"content":"        String descr \u003d details[2];","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"wendy0107"},"content":"            switch (taskType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"wendy0107"},"content":"            case \"T\":","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"wendy0107"},"content":"                task \u003d Todo.toTodoFromFileStr(descr, doneData);","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"wendy0107"},"content":"            case \"D\":","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"wendy0107"},"content":"                String deadlineData \u003d details[3];","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"wendy0107"},"content":"                task \u003d Deadline.toDeadlineFromFileStr(descr, doneData, deadlineData);","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"wendy0107"},"content":"            case \"E\":","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"wendy0107"},"content":"                String startData \u003d details[3];","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"wendy0107"},"content":"                String endData \u003d details[4];","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"wendy0107"},"content":"                task \u003d Event.toEventFromFileStr(descr, doneData, startData, endData);","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"wendy0107"},"content":"            default:","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(\"none\");","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"wendy0107"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"missing details\");","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"wendy0107"},"content":"        this.lst.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"wendy0107"},"content":"    public String printSchedule(LocalDate date) {","lastModifiedDate":"2023-02-13"},{"lineNumber":161,"author":{"gitId":"wendy0107"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":162,"author":{"gitId":"wendy0107"},"content":"        String schedule \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":163,"author":{"gitId":"wendy0107"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":164,"author":{"gitId":"wendy0107"},"content":"            Task task \u003d this.lst.get(i);","lastModifiedDate":"2023-02-13"},{"lineNumber":165,"author":{"gitId":"wendy0107"},"content":"            if (task.isTaskInSchedule(date)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":166,"author":{"gitId":"wendy0107"},"content":"                schedule +\u003d String.format(\"%d. %s\\n\", count, task);","lastModifiedDate":"2023-02-13"},{"lineNumber":167,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":168,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":169,"author":{"gitId":"wendy0107"},"content":"        return schedule;","lastModifiedDate":"2023-02-13"},{"lineNumber":170,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":171,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":172,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":173,"author":{"gitId":"wendy0107"},"content":"     * Returns size of list.","lastModifiedDate":"2023-01-28"},{"lineNumber":174,"author":{"gitId":"wendy0107"},"content":"     * @return int size of list.","lastModifiedDate":"2023-01-28"},{"lineNumber":175,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":176,"author":{"gitId":"wendy0107"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"wendy0107"},"content":"        return this.lst.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wendy0107":179}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":" * Class contains variables and methods related to a Deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     * @param taskName String of Deadline task name.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"     * @param deadline contains LocalDate deadline of Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    public Deadline(String taskName, LocalDate deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        super(taskName);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    public boolean isTaskInSchedule(LocalDate date) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        return this.deadline.equals(date);","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"        return String.format(\"D | %s | %s\\n\", super.toFile(), deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"     * Creates Deadline task from String from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"     * @param taskNameData String containing taskName from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"     * @param doneData String containing whether task is done from file string.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"     * @param deadlineData String containing deadline from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"     * @return Deadline created from file input.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If string input is empty or of the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    public static Deadline toDeadlineFromFileStr(String taskNameData, String doneData, String deadlineData)","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"        doneData \u003d doneData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        deadlineData \u003d deadlineData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        taskNameData \u003d taskNameData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        if (taskNameData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        if (doneData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"missing details\");","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"        if (deadlineData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"timing\");","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"            LocalDate deadline \u003d LocalDate.parse(deadlineData);","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"            Deadline d \u003d new Deadline(taskNameData, deadline);","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"            boolean completed \u003d Integer.parseInt(doneData) \u003d\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"            d.setCompleted(completed);","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"            return d;","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"date format\");","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"        String s;","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"        String deadline \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"        return s;","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wendy0107":80}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":" * Class contains variables and methods related to Event tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of Event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"     * @param taskName name of Event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"     * @param start LocalDate start date of Event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"     * @param end LocalDate end date of Event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    public Event(String taskName, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"        super(taskName);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"        return String.format(\"E | %s | %s | %s\\n\", super.toFile(), this.start, this.end);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"    public boolean isTaskInSchedule(LocalDate date) {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"        boolean checkStart \u003d this.start.compareTo(date) \u003c\u003d 0;","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"        boolean checkEnd \u003d this.end.compareTo(date) \u003e\u003d 0;","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"        return checkStart \u0026\u0026 checkEnd;","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"     * Creates Event task from string from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"     * @param taskNameData String containing taskName from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"     * @param doneData String containing whether task is done from file string.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"     * @param startData String containing start date from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"     * @param endData String containing end date from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"     * @return Event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If String from file input is empty or of the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"    public static Event toEventFromFileStr(String taskNameData, String doneData,","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"                                                String startData, String endData) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        doneData \u003d doneData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        startData \u003d startData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"        endData \u003d endData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"        taskNameData \u003d taskNameData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"        if (taskNameData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"        if (doneData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"missing details\");","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"        if (startData.isEmpty() || endData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"timing\");","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"            LocalDate start \u003d LocalDate.parse(startData);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"            LocalDate end \u003d LocalDate.parse(endData);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"            Event event \u003d new Event(taskNameData, start, end);","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"            boolean completed \u003d Integer.parseInt(doneData) \u003d\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"            event.setCompleted(completed);","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"            return event;","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"date format\");","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"        String s;","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"        String start \u003d this.start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"        String endDate \u003d this.end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[E]\" + super.toString()","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"                    + \" (from: \" + start + \" to: \" + endDate + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[E]\" + super.toString()","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"                    + \" (from: \" + start + \" to: \" + endDate + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"        return s;","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wendy0107":93}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":" * Abstract class contains variables and methods related to Tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    protected String taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of a Task.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"     * @param taskname String name of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    public Task(String taskname) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"        this.taskName \u003d taskname;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"     * Marks task as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"     * Marks task as undone.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"        return this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"     * Checks whether task falls on the given date.","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"     * @param date Date to be checked against.","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"     * @return true if task falls on the date and false otherwise.","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"    public abstract boolean isTaskInSchedule(LocalDate date);","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"     * Marks task as done or undone depending on status.","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"     * @param status","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"    public void setCompleted(boolean status) {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        this.isCompleted \u003d status;","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"     * Returns Task as a String formatted for saving into a file.","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"     * @return String formatted for fie input.","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"            return String.format(\"1 | %s\", this.taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"            return String.format(\"0 | %s\", this.taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"     * Returns Task as a String.","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"     * @return Task formatted as a String.","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"        String s;","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[X] \" + this.taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[ ] \" + this.taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"        return s;","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"wendy0107":80}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":" * Class contains variables and methods related to Todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"        super(taskName);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"        return String.format(\"T | %s\\n\", super.toFile());","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    public boolean isTaskInSchedule(LocalDate date) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        return false;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of Todo from parsed String in file.","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"     * @param taskNameData String containing task name.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"     * @param doneData String containing whether task is completed.","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"     * @return An instance of Todo.","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException if any of the inputs are empty.","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"    public static Todo toTodoFromFileStr(String taskNameData, String doneData) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"        doneData \u003d doneData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"        taskNameData \u003d taskNameData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"        if (taskNameData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"        if (doneData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"missing details\");","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"        Todo t \u003d new Todo(taskNameData);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"        boolean completed \u003d Integer.parseInt(doneData) \u003d\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"        t.setCompleted(completed);","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"        return t;","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        String s;","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"        return s;","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wendy0107":57}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"//@@author wendy0107-reused","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"// Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor additions","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"wendy0107":18,"-":50}},{"path":"src/main/java/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.Main;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"public class Launcher {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"wendy0107":13}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//@@author wendy0107-reused","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with some modifications","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String HELLO_MSG \u003d \"Hello! I\u0027m Luffy.\\nWhat can I do for you today? :)\";","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Luffy.png\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/LuffyReply.png\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(HELLO_MSG, dukeImage));","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"wendy0107":12,"-":48}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":" * Class contains variables and methods related to interactions with the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    private final Scanner input;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of Ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"        this.input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"     * Prints a line.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"     * @return LINE.","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"    public String showLine() {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"        return LINE + \"\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"     * Prints error message from an exception.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"     * @param errorMsg String containing error message of exception.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"     * @return String containing error message.","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"    public String showError(String errorMsg) {","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"        return errorMsg + \"\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"     * Prints exit message.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"     * @return String containing exit message.","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"    public String showExit() {","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        return showLine() + \"Bye bye! Luffy will go to sleep now!\\nHope to see you again soon!! :\u003e\\n\" + showLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"     * Prints TaskList of Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"     * @param taskList TaskList to be printed.","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"     * @return Response after printing lst.","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"    public String showList(TaskList taskList) {","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"        return showLine() + \"Here are the tasks in your list:\\n\" + taskList.printList() + showLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"     * Prints command message after mark command is executed successfully.","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"     * @param task task marked as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"     * @return Response after task marked as done.","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"    public String showMarkedTask(Task task) {","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"        return showLine() + \"Okay! I\u0027ve marked this task as done:\\n\" + task.toString() + \"\\n\" + showLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"     * Prints response after unnmark commamnd is successfully executed.","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"     * @param task task marked as unDone.","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"     * @return Response after task marked as undone.","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"    public String showUnmarkedTask(Task task) {","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"        return showLine() + \"Okay! I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"                + task.toString() + \"\\n\" + showLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"     * Prints command message after delete command is successfully executed.","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"     * @param task task deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"     * @param size current size of the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"     * @return Response after delete is successful.","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"    public String showDeletedTask(Task task, int size) {","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"        return showLine() + \"Okay! I\u0027ve removed this task from the list:\\n\" + task.toString() + \"\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"                + String.format(\"Now you have %d tasks in the list!\\n\", size) + showLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"     * Prints command message after todoCommand is successfully executed.","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"     * @param todo Todo task created.","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"wendy0107"},"content":"     * @param size current size of the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"wendy0107"},"content":"     * @return Response after todo successfully created.","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"    public String showTodo(Todo todo, int size) {","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"wendy0107"},"content":"        return showLine() + \"Got it! I\u0027ve added: \\n\" + \" \" + todo.toString() + \"\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"wendy0107"},"content":"                + String.format(\"Now you have %d tasks in the list!\\n\", size) + showLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"wendy0107"},"content":"     * Prints command message after deadline command is successfully executed.","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"wendy0107"},"content":"     * @param deadline Deadline task created.","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"wendy0107"},"content":"     * @param size current size of the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"     * @return Response after deadline successfully created.","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"wendy0107"},"content":"    public String showDeadline(Deadline deadline, int size) {","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"wendy0107"},"content":"        return showLine() + \"Got it! I\u0027ve added: \\n\" + \" \" + deadline.toString() + \"\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"wendy0107"},"content":"                + String.format(\"Now you have %d tasks in the list!\\n\", size) + showLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"wendy0107"},"content":"     * Prints command message after event command is successfully executed.","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"wendy0107"},"content":"     * @param event Event task created.","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"wendy0107"},"content":"     * @param size current size of the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"wendy0107"},"content":"     * @return Response after event successfully created.","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"wendy0107"},"content":"    public String showEvent(Event event, int size) {","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"wendy0107"},"content":"        return showLine() + \"Got it! I\u0027ve added: \\n\" + \" \" + event.toString() + \"\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"wendy0107"},"content":"                + String.format(\"Now you have %d tasks in the list!\\n\", size) + showLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":124,"author":{"gitId":"wendy0107"},"content":"    public String showSchedule(TaskList taskList, LocalDate date) {","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"wendy0107"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"        return showLine() + \"Here is your schedule for \" + formattedDate + \":)\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"                + taskList.printSchedule(date) + showLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":129,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":129}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"\u003c!-- Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with some modifications--\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"            \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"wendy0107":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"\u003c!-- Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with some modifications--\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"            \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"wendy0107":25}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    public void toFileTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"        // test undone","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"        String expected \u003d \"D | 0 | toFileTest | 2023-01-01\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"        Deadline d \u003d new Deadline(\"toFileTest\", LocalDate.parse(\"2023-01-01\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"        String actual \u003d d.toFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        // test done","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        expected \u003d \"D | 1 | toFileTest | 2023-01-01\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        d.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        actual \u003d d.toFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    public void toDeadlineFromFileStrTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"            // test undone","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"            String expected \u003d \"[D][ ] toDeadlineFromFileStrTest (by: Jan 1 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"            Deadline d \u003d Deadline.toDeadlineFromFileStr(\"toDeadlineFromFileStrTest\",","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"                    \"0\", \"2023-01-01\");","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"            String actual \u003d d.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"            // test done","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            expected \u003d \"[D][X] toDeadlineFromFileStrTest (by: Jan 1 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"            d.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            actual \u003d d.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        // test undone","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"        String expected \u003d \"[D][ ] toStringTest (by: Jan 1 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        Deadline d \u003d new Deadline(\"toStringTest\", LocalDate.parse(\"2023-01-01\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"        String actual \u003d d.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        // test done","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"        expected \u003d \"[D][X] toStringTest (by: Jan 1 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"        d.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"        actual \u003d d.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"wendy0107":58}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"public class EventTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    public void toFileTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        // test for undone event","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"        String testExpected \u003d \"E | 0 | toFileTestStr | 2022-01-01 | 2023-12-12\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"        Event e \u003d new Event(\"toFileTestStr\", LocalDate.parse(\"2022-01-01\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"                LocalDate.parse(\"2023-12-12\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"        String testActual \u003d e.toFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        assertEquals(testExpected, testActual);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        // test for done event","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        testExpected \u003d \"E | 1 | toFileTestStr | 2022-01-01 | 2023-12-12\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        e.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        testActual \u003d e.toFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"        assertEquals(testExpected, testActual);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    public void toEventFromFileStrTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"        Event eventExpected \u003d new Event(\"toEventFromFileStrTest\",","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"                LocalDate.parse(\"2022-01-01\"), LocalDate.parse(\"2023-12-12\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"            // test for unDone event","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"            Event eventActual \u003d Event.toEventFromFileStr(\"toEventFromFileStrTest\", \"0\",","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"                    \"2022-01-01\", \"2023-12-12\");","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"            assertEquals(eventExpected.toString(), eventActual.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"            // test for done event","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            eventExpected.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"            eventActual \u003d Event.toEventFromFileStr(\"toEventFromFileStrTest\", \"1\",","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"                    \"2022-01-01\", \"2023-12-12\");","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"            assertEquals(eventExpected.toString(), eventActual.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        // test for undone event","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"        String expected \u003d \"[E][ ] toStringTest (from: Jan 1 2022 to: Dec 12 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        Event e \u003d new Event(\"toStringTest\", LocalDate.parse(\"2022-01-01\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"                LocalDate.parse(\"2023-12-12\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        String actual \u003d e.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"        // test for undone event","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"        expected \u003d \"[E][X] toStringTest (from: Jan 1 2022 to: Dec 12 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"        e.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"        actual \u003d e.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"wendy0107":59}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    public void toFileTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"        // test undone","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        String expected \u003d \"T | 0 | toFileTest\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"        Todo t \u003d new Todo(\"toFileTest\");","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"        String actual \u003d t.toFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"        // test done","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        expected \u003d \"T | 1 | toFileTest\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        t.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        actual \u003d t.toFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    public void toTodoFromFileStrTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"            // test undone","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"            String expected \u003d \"[T][ ] toTodoFromFileStrTest\";","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"            Todo t \u003d Todo.toTodoFromFileStr(\"toTodoFromFileStrTest\", \"0\");","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"            String actual \u003d t.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"            // test dont","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"            expected \u003d \"[T][X] toTodoFromFileStrTest\";","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"            t.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"            actual \u003d t.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"        // test undone","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"        String expected \u003d \"[T][ ] toStringTest\";","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        Todo t \u003d new Todo(\"toStringTest\");","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        String actual \u003d t.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        // test done","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"        expected \u003d \"[T][X] toStringTest\";","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        t.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        actual \u003d t.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"wendy0107":55}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"task 1","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"todo homework","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"deadline math/by tomorrow 6pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"event project meeting/from Mon 2pm/to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wendy0107":10}}]
