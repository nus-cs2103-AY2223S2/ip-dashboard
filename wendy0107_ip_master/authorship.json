[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"1. Open Intellij (if you are not in the welcome screen, click `duke.Storage` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wendy0107":3,"-":21}},{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"T | 1 | read book","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"D | 0 | test1 | 2023-01-25","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"E | 0 | breakinus | 2023-01-25 | 2023-01-26","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"E | 0 | briefing | 2023-02-03 | 2023-02-03","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"D | 1 | test2 | 2023-01-25","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"T | 0 | lalala","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"/** The Duke class contains variables and methods related to running an instance of Duke. */","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"    protected static final String PATH \u003d \"src/data/duke.txt\";","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"    protected TaskList lst;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"    protected final Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    protected final Parser parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    protected final Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"     * @param filePath path of the file containing data for Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"            this.lst \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"            this.storage.loadFileInto(this.lst);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"            ui.showError(e.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"     * Reads user input and loads data from file into an instance of Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"                String userInput \u003d this.ui.readCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"                Command command \u003d parser.parse(userInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"                command.execute(this.lst, this.ui);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"                storage.saveToFile(this.lst);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"                ui.showError(e.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        new Duke(PATH).run();","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wendy0107":51,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"/** Class contains all exceptions thrown by Duke. */","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"    protected ArrayList\u003cString\u003e commandError \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"            Arrays.asList(\"todo\", \"deadline\", \"event\", \"missing details\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    protected ArrayList\u003cString\u003e indexError \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"            Arrays.asList(\"mark\", \"unmark\", \"delete\"));","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    protected ArrayList\u003cString\u003e fileError \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"            Arrays.asList(\"file already exists\", \"creating new file\",","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"                    \"updating file\", \"saving changes to file\", \"file not found\", \"empty line in file\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    protected ArrayList\u003cString\u003e formatError \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"            Arrays.asList(\"date format\", \"wrong order\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    protected ArrayList\u003cString\u003e findError \u003d new ArrayList\u003c\u003e(Arrays.asList(\"empty keyword\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    protected String errorMsg;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of DukeException.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"     * @param command type of exception thrown.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    public DukeException(String command) {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"        if (commandError.contains(command)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"The task description cannot be empty.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        } else if (indexError.contains(command)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"Please remember to enter an index!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"        } else if (command.equals(\"bounds\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"This index is out of bounds!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"        } else if (command.equals(\"timing\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"The task timings cannot be empty!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"        } else if (command.equals(\"missing details\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"The task input is missing some details!\";","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"        } else if (fileError.contains(command)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"An error occurred when/as \" + command;","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"        } else if (command.equals(\"date format\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"The date is not the correct format!\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"                    + \"Please enter a date with this format: yyyy-mm-dd\";","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"        } else if (command.equals(\"wrong order\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"The dates entered are in the wrong order!\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"                    + \"The correct formats are as follows:\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"                    + \"deadline task_name/by yyyy-mm-dd\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"                    + \"event task_name/from yyyy-mm-dd/by yyyy-mm-dd\";","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"        } else if (command.equals(\"too many details\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"The command shouldn\u0027t be followed by other details!\";","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        } else if (command.equals(\"input type\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"The input following the command is the wrong type!\";","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        } else if (findError.contains(command)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"Find keyword cannot be empty!\";","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"            this.errorMsg \u003d \"I\u0027m sorry but I don\u0027t know what that means :(\";","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"     * Overrides toString and returns a String containing exception message.","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"     * @return String containing exception message.","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"        return \"Oh no!! \" + this.errorMsg;","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wendy0107":64}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.command.*;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"/** Class parses user input into commands. */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    /** Empty constructor creates an instance of Parser. */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    public Parser() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"     * Returns an appropriate command based on user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"     * @param userInput String containing user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"     * @return Command object based on user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If user provides an inappropriate command format.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    public Command parse(String userInput) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"        String[] commandDetails \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"        boolean single \u003d commandDetails.length \u003c 2;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        String commandType \u003d commandDetails[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        String arguments \u003d single ? \"\" : commandDetails[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"        int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"        String taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"        LocalDate startDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"        LocalDate endDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"        Command command \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"        switch (commandType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            if (!single) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(\"too many details\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"            command \u003d new ByeCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"        case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"            if (!single) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(\"too many details\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"            if (single) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(commandType);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"            index \u003d parseIntArg(arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"            command \u003d new MarkCommand(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"            if (single) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(commandType);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"            index \u003d parseIntArg(arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"            command \u003d new UnmarkCommand(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"            if (single) {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(commandType);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"            index \u003d parseIntArg(arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"            command \u003d new DeleteCommand(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"        case \"find\":","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"            if (single) {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(\"empty keyword\");","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"            command \u003d new FindCommand(arguments);","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"            if (single) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(commandType);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"            Todo todo \u003d new Todo(parseTodo(arguments));","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"            command \u003d new ToDoCommand(todo);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"            if (single) {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(commandType);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"            String[] deadlineDetails \u003d parseDeadline(arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"            taskName \u003d deadlineDetails[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"            endDate \u003d LocalDate.parse(deadlineDetails[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"            Deadline deadline \u003d new Deadline(taskName, endDate);","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"            command \u003d new DeadlineCommand(deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"        case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"            if (single) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(commandType);","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"wendy0107"},"content":"            String[] eventDetails \u003d parseEvent(arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"wendy0107"},"content":"            taskName \u003d eventDetails[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"            startDate \u003d LocalDate.parse(eventDetails[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"wendy0107"},"content":"            endDate \u003d LocalDate.parse(eventDetails[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"wendy0107"},"content":"            Event event \u003d new Event(taskName, startDate, endDate);","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"wendy0107"},"content":"            command \u003d new EventCommand(event);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"wendy0107"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"none\");","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"wendy0107"},"content":"        return command;","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"wendy0107"},"content":"     * Returns an integer from parsed string argument if a valid argument is given.","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"wendy0107"},"content":"     * @param argument Parsed string argument that should contain an integer.","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"wendy0107"},"content":"     * @return Parsed integer.","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If argument given is empty or not an integer.","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"wendy0107"},"content":"    public int parseIntArg(String argument) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"wendy0107"},"content":"        int intArgument;","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"wendy0107"},"content":"            intArgument \u003d Integer.parseInt(argument.trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"wendy0107"},"content":"            return intArgument;","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"wendy0107"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"input type\");","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"wendy0107"},"content":"     * Returns the taskname for a Todotask from the given argument.","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"     * @param argument String containing user input for a Todotask command.","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"     * @return taskName for a Todotask.","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If argument is empty.","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"wendy0107"},"content":"    public String parseTodo(String argument) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"wendy0107"},"content":"        String taskName \u003d argument.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"wendy0107"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"wendy0107"},"content":"            return taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"wendy0107"},"content":"     * Returns parsed inputs for creating a Deadline from the given user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"wendy0107"},"content":"     * @param argument String contains user input for creating a Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"wendy0107"},"content":"     * @return An array of strings containing the taskName and deadline for creating a Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If any of the user inputs are empty or of the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"wendy0107"},"content":"    public String[] parseDeadline(String argument) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"wendy0107"},"content":"        argument \u003d argument.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"wendy0107"},"content":"        if (argument.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"deadline\");","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"wendy0107"},"content":"        String[] deadlineDetails \u003d argument.split(\"/by \");","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"wendy0107"},"content":"        if (deadlineDetails.length !\u003d 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"timing\");","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"wendy0107"},"content":"            LocalDate end \u003d LocalDate.parse(deadlineDetails[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"wendy0107"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"date format\");","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"wendy0107"},"content":"        return deadlineDetails;","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"wendy0107"},"content":"     * Returns parsed inputs for creating an Event from the given user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":164,"author":{"gitId":"wendy0107"},"content":"     * @param argument String contains user input for creating an Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":165,"author":{"gitId":"wendy0107"},"content":"     * @return An array of strings containing the taskName, startDate and endDate for creating an Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":166,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If any of the user inputs are empty or of the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":167,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":168,"author":{"gitId":"wendy0107"},"content":"    public String[] parseEvent(String argument) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"wendy0107"},"content":"        argument \u003d argument.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"wendy0107"},"content":"        if (argument.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"deadline\");","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"wendy0107"},"content":"        String[] eventDetails \u003d argument.split(\"/from |/by \");","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"wendy0107"},"content":"        if (eventDetails.length !\u003d 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"timing\");","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"wendy0107"},"content":"        } else if (argument.indexOf(\"/from\") \u003e argument.indexOf(\"/by\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"wrong order\");","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"wendy0107"},"content":"            LocalDate start \u003d LocalDate.parse(eventDetails[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"wendy0107"},"content":"            LocalDate end \u003d LocalDate.parse(eventDetails[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"wendy0107"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":183,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"date format\");","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"wendy0107"},"content":"        return eventDetails;","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":187,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":187}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":" * The Storage class contains variables and methods related to handling a data file for Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    private String filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    private File file;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of Storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"     * @param filePath Path of the file containing data for Duke or destination file to","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"     *                 contain data for Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"     * Creates a file if the file does not exist.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"     * @param filePath Path of the file containing data for Duke or destination file to contain","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"     *                 data for Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If file does not exist.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"    public void createFile(String filePath) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"            this.filePath \u003d filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"            this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(\"file already exists\");","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"                file.getAbsoluteFile().getParentFile().mkdirs();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"                System.out.println(\"Successfully created new file.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"creating new file\");","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"     * Stores data in given list of tasks into the file path of Storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"     * @param lst contains list of tasks from an instance of Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"    public void saveToFile(TaskList lst) {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"            for (int i \u003d 0; i \u003c lst.getSize(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"                String taskText \u003d lst.getTask(i).toFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"                writer.write(taskText);","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"            writer.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"            System.out.println(String.format(\"I wasn\u0027t able to write the data into %s\", filePath));","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"     * Loads file data into a TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"     * @param lst TaskList file data is to be laoded into.","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If file does not exist.","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"    public void loadFileInto(TaskList lst) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"            Scanner fileData \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"            while (fileData.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"                String taskString \u003d fileData.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"                lst.addTaskFromString(taskString);","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"            fileData.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"            this.createFile(this.filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"            this.loadFileInto(lst);","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"wendy0107":83}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":" * Class contains variables and methods related to modifying a list of Tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"public class TaskList {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    protected LinkedList\u003cTask\u003e lst;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        this.lst \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"     * Marks the task at the given index of the TaskList as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"     * @param taskNum index of task to be marked as done in the TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If index given is out of bounds.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"    public void mark(int taskNum) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"        if (taskNum \u003c 0 || taskNum \u003e lst.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"bounds\");","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"        Task t \u003d this.getTask(taskNum);","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"        t.markAsDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"     * Marks the task at the given index in TaskList as unDone.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"     * @param taskNum index of task to be marked as unDone.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If index given is out of bounds.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    public void unmark(int taskNum) throws DukeException{","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"        if (taskNum \u003c 0 || taskNum \u003e lst.size() - 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"bounds\");","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        Task t \u003d this.getTask(taskNum);","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"        t.markAsUndone();","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"     * Removes task at given index of TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"     * @param taskNum index of task to be removed.","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If index given is out of bounds.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"    public void deleteTask(int taskNum) throws DukeException{","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"        if (taskNum \u003c 0 || taskNum \u003e lst.size() - 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"bounds\");","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"        Task t \u003d this.lst.remove(taskNum);","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"     * Prints all the tasks in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"    public void printList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"        for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"            String elem \u003d lst.get(i).toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"            System.out.println(String.format(\"%d. %s\", i + 1, elem));","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"     * Prints all tasks in the list which contain the keyword.","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"     * @param keyword String keyword from find command.","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If keyword is empty.","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"    public void printMatchingList(String keyword) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"empty keyword\");","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\"Here are the matching tasks in your list :)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"            Task task \u003d this.getTask(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"            String taskName \u003d task.getTaskName();","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"            if (taskName.contains(keyword)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"                count++;","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"                System.out.println(String.format(\"%d. %s\", count, task));","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"     * Returns task at given index of the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"wendy0107"},"content":"     * @param index index of task to be retrieved.","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"wendy0107"},"content":"     * @return Task at given index of the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"wendy0107"},"content":"        return this.lst.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"wendy0107"},"content":"     * @param t Task to be added.","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"wendy0107"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"wendy0107"},"content":"        this.lst.add(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"wendy0107"},"content":"     * Parses String into a Task and adds it to the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"wendy0107"},"content":"     * @param data contains inputs to creating a Task.","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If given input is empty or if the given input is of the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"wendy0107"},"content":"    public void addTaskFromString(String data) throws DukeException{","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"wendy0107"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"wendy0107"},"content":"        if (data.trim().isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"empty line in file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"wendy0107"},"content":"        String[] details \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"wendy0107"},"content":"        // T/D/E || completed || descr || deadline/start || end","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"wendy0107"},"content":"        String taskType \u003d details[0];","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"        String doneData \u003d details[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"        String descr \u003d details[2];","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"wendy0107"},"content":"            switch (taskType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"wendy0107"},"content":"            case \"T\":","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"wendy0107"},"content":"                task \u003d Todo.toTodoFromFileStr(descr, doneData);","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"wendy0107"},"content":"            case \"D\":","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"wendy0107"},"content":"                String deadlineData \u003d details[3];","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"wendy0107"},"content":"                task \u003d Deadline.toDeadlineFromFileStr(descr, doneData, deadlineData);","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"wendy0107"},"content":"            case \"E\":","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"wendy0107"},"content":"                String startData \u003d details[3];","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"wendy0107"},"content":"                String endData \u003d details[4];","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"wendy0107"},"content":"                task \u003d Event.toEventFromFileStr(descr, doneData, startData, endData);","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"wendy0107"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"wendy0107"},"content":"            default:","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"wendy0107"},"content":"                throw new DukeException(\"none\");","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"wendy0107"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"missing details\");","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"wendy0107"},"content":"        this.lst.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"wendy0107"},"content":"     * Returns size of list.","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"wendy0107"},"content":"     * @return int size of list.","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":155,"author":{"gitId":"wendy0107"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"wendy0107"},"content":"        return this.lst.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"wendy0107"},"content":"    public void printSize() {","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"wendy0107"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list!\", this.getSize()));","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wendy0107":163}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":" * Class contains variables and methods related to interactions with the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    private static final String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    private final Scanner input;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of Ui.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        this.input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"     * Reads user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"     * @return user input as a String.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"        return input.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"     * Prints a line.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"        System.out.println(line);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"     * Prints welcome message.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\"Hello! I\u0027m Kirby!\\n\" + \"What can I do for you? :)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\"Sorry I wasn\u0027t able to load the file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"     * Prints error message from an exception.","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"     * @param errorMsg String containing error message of exception.","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"    public void showError(String errorMsg) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"        System.out.println(errorMsg);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"     * Prints exit message.","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"    public void showExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\"Bye bye! Hope to see you again soon!! :\u003e\");","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"     * Prints TaskList of Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"     * @param lst TaskList to be printed.","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"    public void showList(TaskList lst) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"        lst.printList();","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"     * Prints command message after mark command is executed successfully.","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"     * @param task task marked as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\"Okay! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"wendy0107"},"content":"     * Prints command message after unmark command is executed successfully.","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"wendy0107"},"content":"     * @param task task marked as unDone.","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"    public void showUnmarkedTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\"Okay! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"wendy0107"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"wendy0107"},"content":"     * Prints command message after delete command is successfully executed.","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"     * @param task task deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"wendy0107"},"content":"     * @param size current size of the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"wendy0107"},"content":"    public void showDeletedTask(Task task, int size) {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\"Okay! I\u0027ve removed this task from the list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"wendy0107"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"wendy0107"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list!\", size));","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"wendy0107"},"content":"     * Prints command message after todoCommand is successfully executed.","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"wendy0107"},"content":"     * @param todo Todo task created.","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"wendy0107"},"content":"     * @param size current size of the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"wendy0107"},"content":"    public void showTodo(Todo todo, int size) {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\"Got it! I\u0027ve added: \");","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\" \" + todo);","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list!\", size));","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"wendy0107"},"content":"     * Prints command message after deadline command is successfully executed.","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"wendy0107"},"content":"     * @param deadline Deadline task created.","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"wendy0107"},"content":"     * @param size current size of the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"wendy0107"},"content":"    public void showDeadline(Deadline deadline, int size) {","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\"Got it! I\u0027ve added: \");","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\" \" + deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"wendy0107"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list!\", size));","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"wendy0107"},"content":"     * Prints command message after event command is successfully executed.","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"wendy0107"},"content":"     * @param event Event task created.","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"wendy0107"},"content":"     * @param size current size of the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"wendy0107"},"content":"    public void showEvent(Event event, int size) {","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\"Got it! I\u0027ve added: \");","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"wendy0107"},"content":"        System.out.println(\" \" + event);","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"wendy0107"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list!\", size));","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"wendy0107"},"content":"        showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":155}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"    public static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"        super(BYE_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    public void execute(TaskList lst, Ui ui) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"        ui.showExit();","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":17}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":" * The abstract Command class encapsulates the variables and methods related to commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    private final String commandName;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of a Command.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"     * @param commandName String name of the command created.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    public Command(String commandName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"     * @param lst the list of tasks the command may manipulate.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"     * @param ui an instance of Ui that prints the outcome of a command.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException upon input errors for a command.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    public abstract void execute(TaskList lst, Ui ui) throws DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"     * Checks whether the command is an instance of Bye command.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"     * @return true if the command is an instance of the Bye command and false otherwise.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"        return this instanceof ByeCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":36}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    private final Deadline deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    public DeadlineCommand(Deadline deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        super(DEADLINE_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    public void execute(TaskList lst, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        lst.addTask(this.deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        ui.showDeadline(this.deadline, lst.getSize());","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":22}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    private final int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        super(DELETE_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    public void execute(TaskList lst, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        Task t \u003d lst.getTask(this.index);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        lst.deleteTask(this.index);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        ui.showDeletedTask(t, lst.getSize());","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":23}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    private final Event event;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"        super(EVENT_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    public void execute(TaskList lst, Ui ui) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        lst.addTask(this.event);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        ui.showEvent(this.event, lst.getSize());","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":21}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"    public static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    private final String keyword;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"        super(FIND_COMMAND);","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    public void execute(TaskList lst, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        lst.printMatchingList(this.keyword);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"wendy0107":22}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"        super(LIST_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    public void execute(TaskList lst, Ui ui) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"        ui.showList(lst);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":17}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"    public static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    private final int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"        super(MARK_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    public void execute(TaskList lst, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        lst.mark(this.index);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        ui.showMarkedTask(lst.getTask(this.index));","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":21}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    private final Todo todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    public ToDoCommand(Todo todo) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        super(TODO_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    public void execute(TaskList lst, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        lst.addTask(this.todo);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        ui.showTodo(this.todo, lst.getSize());","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":22}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"    public static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    private final int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"        super(UNMARK_COMMAND);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    public void execute(TaskList lst, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        lst.unmark(this.index);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        ui.showUnmarkedTask(lst.getTask(this.index));","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wendy0107":21}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":" * Class contains variables and methods related to a Deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     * @param taskName String of Deadline task name.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"     * @param deadline contains LocalDate deadline of Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    public Deadline(String taskName, LocalDate deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        super(taskName);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    public static void processDeadline(String command, TaskList lst) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        String info \u003d command.trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        if (info.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"deadline\");","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"        String[] details \u003d info.split(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"        if (details.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"timing\");","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"            String deadlineString \u003d details[1].split(\" \", 2)[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            LocalDate deadline \u003d LocalDate.parse(deadlineString);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"            Deadline d \u003d new Deadline(details[0], deadline);","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            lst.addTask(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"date format\");","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        return String.format(\"D | %s | %s\\n\", super.toFile(), deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"     * Creates Deadline task from String from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"     * @param taskNameData String containing taskName from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"     * @param doneData String containing whether task is done from file string.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"     * @param deadlineData String containing deadline from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"     * @return Deadline created from file input.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If string input is empty or of the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"    public static Deadline toDeadlineFromFileStr(String taskNameData, String doneData, String deadlineData)","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"        Deadline d \u003d null;","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"        doneData \u003d doneData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"        deadlineData \u003d deadlineData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"        taskNameData \u003d taskNameData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"        if (taskNameData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"        if (doneData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"missing details\");","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"        if (deadlineData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"timing\");","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"            LocalDate deadline \u003d LocalDate.parse(deadlineData);","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"            d \u003d new Deadline(taskNameData, deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"            boolean completed \u003d Integer.parseInt(doneData) \u003d\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"            d.setCompleted(completed);","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"date format\");","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"        return d;","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"        String s;","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"        String deadline \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"        if (this.completed) {","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"        return s;","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wendy0107":94}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":" * Class contains variables and methods related to Event tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of Event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"     * @param taskName name of Event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"     * @param start LocalDate start date of Event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"     * @param end LocalDate end date of Event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    public Event(String taskName, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"        super(taskName);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    public static void processEvent(String command, TaskList lst) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"        String info \u003d command.trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"        if (info.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"event\");","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"        String[] details \u003d info.split(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"        if (details.length \u003c 3) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"timing\");","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            String startString \u003d details[1].split(\" \", 2)[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"            String endString \u003d details[2].split(\" \", 2)[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"            LocalDate start \u003d LocalDate.parse(startString);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"            LocalDate end \u003d LocalDate.parse(endString);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"            Event e \u003d new Event(details[0], start, end);","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"            lst.addTask(e);","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"date format\");","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        return String.format(\"E | %s | %s | %s\\n\", super.toFile(), this.start, this.end);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"     * Creates Event task from string from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"     * @param taskNameData String containing taskName from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"     * @param doneData String containing whether task is done from file string.","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"     * @param startData String containing start date from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"     * @param endData String containing end date from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"     * @return Event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"     * @throws DukeException If String from file input is empty or of the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"    public static Event toEventFromFileStr(String taskNameData, String doneData,","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"                                                String startData, String endData) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"        Event event \u003d null;","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"        doneData \u003d doneData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"        startData \u003d startData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"        endData \u003d endData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"        taskNameData \u003d taskNameData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"        if (taskNameData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"        if (doneData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"missing details\");","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"        if (startData.isEmpty() || endData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"timing\");","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"            LocalDate start \u003d LocalDate.parse(startData);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"            LocalDate end \u003d LocalDate.parse(endData);","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"            event \u003d new Event(taskNameData, start, end);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"            boolean completed \u003d Integer.parseInt(doneData) \u003d\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"            event.setCompleted(completed);","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"date format\");","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"        return event;","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"        String s;","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"wendy0107"},"content":"        String start \u003d this.start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"wendy0107"},"content":"        String endDate \u003d this.end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"wendy0107"},"content":"        if (this.completed) {","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[E]\" + super.toString()","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"wendy0107"},"content":"                    + \" (from: \" + start + \" to: \" + endDate + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[E]\" + super.toString()","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"                    + \" (from: \" + start + \" to: \" + endDate + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"wendy0107"},"content":"        return s;","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wendy0107":106}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":" * Abstract class contains variables and methods related to Tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"    protected boolean completed;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"    protected String taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"     * Creates an instance of a Task.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"     * @param taskname String name of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    public Task(String taskname) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"        this.taskName \u003d taskname;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"     * Marks task as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"     * Marks task as undone.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"        return this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"        return this.completed;","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"     * Marks task as done or undone depending on status.","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"     * @param status","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"    public void setCompleted(boolean status) { ","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        this.completed \u003d status; ","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"     * Returns Task as a String formatted for saving into a file.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"     * @return String formatted for fie input.","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"        if (this.completed) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"            return String.format(\"1 | %s\", this.taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"            return String.format(\"0 | %s\", this.taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"     * Returns Task as a String.","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"     * @return Task formatted as a String.","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"        String s;","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"        if (this.completed) {","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[X] \" + this.taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[ ] \" + this.taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"        return s;","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"wendy0107":76}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":" * Class contains variables and methods related to Todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"        super(taskName);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    public static void processTodo(String command, TaskList lst) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"        String taskName \u003d command.trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"            Todo todo \u003d new Todo(taskName);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"            lst.addTask(todo);","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        return String.format(\"T | %s\\n\", super.toFile());","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"    public static Todo toTodoFromFileStr(String taskNameData, String doneData) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"        doneData \u003d doneData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"        taskNameData \u003d taskNameData.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"        if (taskNameData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"        if (doneData.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            throw new DukeException(\"missing details\");","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"        Todo t \u003d new Todo(taskNameData);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"        boolean completed \u003d Integer.parseInt(doneData) \u003d\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"        t.setCompleted(completed);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"        return t;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        String s;","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        if (this.completed) {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"            s \u003d \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        return s;","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wendy0107":54}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    public void toFileTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"        // test undone","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"        String expected \u003d \"D | 0 | toFileTest | 2023-01-01\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"        Deadline d \u003d new Deadline(\"toFileTest\", LocalDate.parse(\"2023-01-01\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        String actual \u003d d.toFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        // test done","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        expected \u003d \"D | 1 | toFileTest | 2023-01-01\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        d.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"        actual \u003d d.toFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    public void toDeadlineFromFileStrTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"            // test undone","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"            String expected \u003d \"[D][ ] toDeadlineFromFileStrTest (by: Jan 1 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"            Deadline d \u003d Deadline.toDeadlineFromFileStr(\"toDeadlineFromFileStrTest\",","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"                    \"0\", \"2023-01-01\");","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"            String actual \u003d d.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            // test done","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"            expected \u003d \"[D][X] toDeadlineFromFileStrTest (by: Jan 1 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            d.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"            actual \u003d d.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"        // test undone","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        String expected \u003d \"[D][ ] toStringTest (by: Jan 1 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"        Deadline d \u003d new Deadline(\"toStringTest\", LocalDate.parse(\"2023-01-01\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        String actual \u003d d.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"        // test done","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"        expected \u003d \"[D][X] toStringTest (by: Jan 1 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"        d.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"        actual \u003d d.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"wendy0107":59}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"public class EventTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    public void toFileTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        // test for undone event","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"        String testExpected \u003d \"E | 0 | toFileTestStr | 2022-01-01 | 2023-12-12\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"        Event e \u003d new Event(\"toFileTestStr\", LocalDate.parse(\"2022-01-01\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"                LocalDate.parse(\"2023-12-12\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"        String testActual \u003d e.toFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        assertEquals(testExpected, testActual);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        // test for done event","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        testExpected \u003d \"E | 1 | toFileTestStr | 2022-01-01 | 2023-12-12\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        e.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        testActual \u003d e.toFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"        assertEquals(testExpected, testActual);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    public void toEventFromFileStrTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"        Event eventExpected \u003d new Event(\"toEventFromFileStrTest\",","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"                LocalDate.parse(\"2022-01-01\"), LocalDate.parse(\"2023-12-12\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"            // test for unDone event","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"            Event eventActual \u003d Event.toEventFromFileStr(\"toEventFromFileStrTest\", \"0\",","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"                    \"2022-01-01\", \"2023-12-12\");","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"            assertEquals(eventExpected.toString(), eventActual.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"            // test for done event","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            eventExpected.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"            eventActual \u003d Event.toEventFromFileStr(\"toEventFromFileStrTest\", \"1\",","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"                    \"2022-01-01\", \"2023-12-12\");","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"            assertEquals(eventExpected.toString(), eventActual.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        // test for undone event","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"        String expected \u003d \"[E][ ] toStringTest (from: Jan 1 2022 to: Dec 12 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        Event e \u003d new Event(\"toStringTest\", LocalDate.parse(\"2022-01-01\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"                LocalDate.parse(\"2023-12-12\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        String actual \u003d e.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"        // test for undone event","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"        expected \u003d \"[E][X] toStringTest (from: Jan 1 2022 to: Dec 12 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"        e.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"        actual \u003d e.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"wendy0107":59}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    public void toFileTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"        // test undone","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        String expected \u003d \"T | 0 | toFileTest\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"        Todo t \u003d new Todo(\"toFileTest\");","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"        String actual \u003d t.toFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"        // test done","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        expected \u003d \"T | 1 | toFileTest\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        t.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        actual \u003d t.toFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    public void toTodoFromFileStrTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"            // test undone","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"            String expected \u003d \"[T][ ] toTodoFromFileStrTest\";","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"            Todo t \u003d Todo.toTodoFromFileStr(\"toTodoFromFileStrTest\", \"0\");","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"            String actual \u003d t.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"            // test dont","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"            expected \u003d \"[T][X] toTodoFromFileStrTest\";","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"            t.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"            actual \u003d t.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"        // test undone","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"        String expected \u003d \"[T][ ] toStringTest\";","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        Todo t \u003d new Todo(\"toStringTest\");","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        String actual \u003d t.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        // test done","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"        expected \u003d \"[T][X] toStringTest\";","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"        t.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        actual \u003d t.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"wendy0107":55}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"task 1","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"todo homework","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"deadline math/by tomorrow 6pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"event project meeting/from Mon 2pm/to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wendy0107":10}}]
