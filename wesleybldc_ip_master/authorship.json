[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wesleybldc"},"content":"# Willy Bot - How to use?","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wesleybldc"},"content":"For the Willy Bot, we can take and save 3 different types of task","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wesleybldc"},"content":"Please enter commands into the terminal in the following format.","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wesleybldc"},"content":"Task Type Name, Example ","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wesleybldc"},"content":"todo -\u003e todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wesleybldc"},"content":"Note: \"todo\" keyword must be infront.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wesleybldc"},"content":"deadline -\u003e deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wesleybldc"},"content":"Note: \"deadline\" keyword must be infront and the date must come after the first instance of \"/\"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wesleybldc"},"content":"event -\u003e event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wesleybldc"},"content":"Note: \"event\" keyword must be infront. the from and to must be in said order and come after the first and second instance of \"/\" in order accordingly.","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wesleybldc"},"content":"# Additional commands","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"wesleybldc"},"content":"mark %d: It will mark the task in the index of the list as done","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"wesleybldc"},"content":"unmark %d: It will mark the task in the index of the list as undone","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"wesleybldc"},"content":"delete %d: It will delete the task in the said position in the list","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"wesleybldc"},"content":"list: to generate the list of Tasks","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wesleybldc"},"content":"bye: to close the program","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wesleybldc":26,"-":24}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesleybldc"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"wesleybldc"},"content":"    private String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wesleybldc"},"content":"    private String code;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wesleybldc"},"content":"    public Deadline(String msg, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wesleybldc"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wesleybldc"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wesleybldc"},"content":"        this.code \u003d \"[D]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wesleybldc"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wesleybldc"},"content":"    public String getCode(){","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wesleybldc"},"content":"        return this.code;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wesleybldc"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wesleybldc"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wesleybldc"},"content":"        return code + super.toString() + \" (\" + by + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wesleybldc"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"wesleybldc"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wesleybldc":20}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesleybldc"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"wesleybldc"},"content":"    private String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wesleybldc"},"content":"    private String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wesleybldc"},"content":"    private String code;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wesleybldc"},"content":"    public Event(String msg, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wesleybldc"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wesleybldc"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wesleybldc"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wesleybldc"},"content":"        this.code \u003d \"[E]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wesleybldc"},"content":"    public String getCode(){","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wesleybldc"},"content":"        return this.code;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wesleybldc"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wesleybldc"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wesleybldc"},"content":"        return code + super.toString() + \" (\" + from + to + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"wesleybldc"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"wesleybldc"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wesleybldc":23}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesleybldc"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"wesleybldc"},"content":"    private String msg;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wesleybldc"},"content":"    private Boolean status;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wesleybldc"},"content":"    public Task(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wesleybldc"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wesleybldc"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wesleybldc"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wesleybldc"},"content":"        return (status ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wesleybldc"},"content":"    public String getMsg() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wesleybldc"},"content":"        return msg;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wesleybldc"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wesleybldc"},"content":"        status \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"wesleybldc"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + getStatusIcon() + msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"wesleybldc"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wesleybldc"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + getStatusIcon() + msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wesleybldc"},"content":"        status \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"wesleybldc"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"wesleybldc"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"wesleybldc"},"content":"        return this.getStatusIcon() + msg;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"wesleybldc"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wesleybldc":32}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesleybldc"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"wesleybldc"},"content":"    private String code;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wesleybldc"},"content":"    public ToDos(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wesleybldc"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wesleybldc"},"content":"        this.code \u003d \"[T]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wesleybldc"},"content":"    public String getCode() {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wesleybldc"},"content":"        return this.code;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wesleybldc"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wesleybldc"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wesleybldc"},"content":"        return code + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wesleybldc"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wesleybldc":18}},{"path":"src/main/java/Willy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesleybldc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"wesleybldc"},"content":"import java.util.List;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wesleybldc"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wesleybldc"},"content":"public class Willy {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wesleybldc"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wesleybldc"},"content":"        String logo \u003d \"Willy\";","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wesleybldc"},"content":"        System.out.println(\"Hello! I\u0027m \" + logo +","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wesleybldc"},"content":"                \"\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wesleybldc"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wesleybldc"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wesleybldc"},"content":"        while (true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wesleybldc"},"content":"            // Init scanner","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wesleybldc"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wesleybldc"},"content":"            // For marking","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"wesleybldc"},"content":"            String[] temp \u003d command.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"wesleybldc"},"content":"            // For adding","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"wesleybldc"},"content":"            String[] tempAdd \u003d command.split(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wesleybldc"},"content":"            // Task tempAddTask \u003d lst.get(Integer.parseInt(temp[1]) - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"wesleybldc"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"wesleybldc"},"content":"                if (command.contains(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"wesleybldc"},"content":"                    Task tempTask \u003d lst.get(Integer.parseInt(temp[1]) - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"wesleybldc"},"content":"                    tempTask.mark();","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"wesleybldc"},"content":"                } else if (command.contains(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"wesleybldc"},"content":"                    Task tempTask \u003d lst.get(Integer.parseInt(temp[1]) - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"wesleybldc"},"content":"                    tempTask.unmark();","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"wesleybldc"},"content":"                } else if (command.contains(\"delete\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"wesleybldc"},"content":"                    System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"wesleybldc"},"content":"                    Task tempTask \u003d lst.get(Integer.parseInt(temp[1]) - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"wesleybldc"},"content":"                    System.out.println(tempTask.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"wesleybldc"},"content":"                    lst.remove(Integer.parseInt(temp[1]) - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"wesleybldc"},"content":"                    System.out.format(\"Now you have %d things in your list%n\", lst.size());","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"wesleybldc"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"wesleybldc"},"content":"                    for (int index \u003d 0; index \u003c lst.size(); index++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"wesleybldc"},"content":"                        Task curr \u003d lst.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"wesleybldc"},"content":"                        System.out.println((index + 1) + \") \" + curr.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"wesleybldc"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"wesleybldc"},"content":"                } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"wesleybldc"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"wesleybldc"},"content":"                    System.exit(0);","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"wesleybldc"},"content":"                    sc.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"wesleybldc"},"content":"                } else if (command.equals(\"blah\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"wesleybldc"},"content":"                    throw new WillyException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"wesleybldc"},"content":"                } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"wesleybldc"},"content":"                    if (command.contains(\"todo\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"wesleybldc"},"content":"                        if (command.length() \u003e 4) {","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"wesleybldc"},"content":"                            ToDos newT \u003d new ToDos(command);","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"wesleybldc"},"content":"                            lst.add(newT);","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"wesleybldc"},"content":"                            System.out.println(newT.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"wesleybldc"},"content":"                            System.out.format(\"Now you have %d things in your list%n\", lst.size());","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"wesleybldc"},"content":"                        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"wesleybldc"},"content":"                            throw new WillyException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"wesleybldc"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"wesleybldc"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"wesleybldc"},"content":"                    if (command.contains(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"wesleybldc"},"content":"                        Deadline newD \u003d new Deadline(tempAdd[0], tempAdd[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"wesleybldc"},"content":"                        lst.add(newD);","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"wesleybldc"},"content":"                        System.out.println(newD.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"wesleybldc"},"content":"                        System.out.format(\"Now you have %d things in your list %n\", lst.size());","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"wesleybldc"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"wesleybldc"},"content":"                    if (command.contains(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"wesleybldc"},"content":"                        Event newE \u003d new Event(tempAdd[0], tempAdd[1], tempAdd[2]);","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"wesleybldc"},"content":"                        lst.add(newE);","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"wesleybldc"},"content":"                        System.out.println(newE.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"wesleybldc"},"content":"                        System.out.format(\"Now you have %d things in your list %n\", lst.size());","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"wesleybldc"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"wesleybldc"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"wesleybldc"},"content":"            } catch (WillyException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"wesleybldc"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"wesleybldc"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"wesleybldc"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"wesleybldc"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"wesleybldc"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wesleybldc":83}},{"path":"src/main/java/WillyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesleybldc"},"content":"public class WillyException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"wesleybldc"},"content":"    public WillyException(String message){","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wesleybldc"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wesleybldc"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wesleybldc"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wesleybldc":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wesleybldc"},"content":"java -classpath ..\\bin Willy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wesleybldc":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"wesleybldc"},"content":"java -classpath ../bin Willy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wesleybldc":1,"-":37}}]
