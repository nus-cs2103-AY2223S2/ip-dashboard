[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"    id \u0027org.beryx.jlink\u0027 version \u00272.25.0\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"javafx {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"    version \u003d \u002717.0.2\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"    sourceSets.main.java.srcDirs \u003d [\u0027src/main/java\u0027]","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"winsonheng":24,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"[T][ ] alkjsa","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"[E][X] hi (from: now to: then)","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"[D][X] pldlslsdj (by: Feb 03 2023)","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import duke.util.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"    private boolean isTaskListLoaded;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"        loadTasks(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"    public boolean loadTasks(String filePath) {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"        storage \u003d Storage.createStorage(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"            isTaskListLoaded \u003d true;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"            isTaskListLoaded \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"        return isTaskListLoaded;","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"        assert c !\u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"            response \u003d c.execute(taskList, storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"        return response;","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"    public boolean getLoadedStatus() {","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"        return isTaskListLoaded;","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"winsonheng":46,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"public class Launcher {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"winsonheng":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.view.MainWindow;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.csv\");","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"            MainWindow controller \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"            controller.setDuke(duke);","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"            controller.showWelcomeMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"            if (!duke.getLoadedStatus()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"                controller.showLoadingErrorMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"            stage.show();","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"winsonheng":39}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.exception;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":8}},{"path":"src/main/java/duke/exception/ERROR.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.exception;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"public enum ERROR {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"    TODO_EMPTY(\"☹ OOPS!!! The description of a todo cannot be empty.\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"    DEADLINE_EMPTY(\"☹ OOPS!!! The description of a deadline cannot be empty.\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"    EVENT_EMPTY(\"☹ OOPS!!! The description of an event cannot be empty.\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"    INVALID_INPUT(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"    INVALID_INDEX(\"Invalid index!\\nThere are only %d tasks in the list.\"),","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"    CORRUPTED_TASK_DATA(\"The task data file may have been corrupted.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"    private final String message;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    ERROR(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"        return this.message;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":20}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"    private String deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"    private LocalDate date;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    private boolean isDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"    private static final DateTimeFormatter DATE_OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"     * Creates an instance of Deadline with a description and a deadline where an attempt","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"     * is made to parse into a LocalDate, else it remains as a String.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"     * @param description Describes the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"     * @param deadline Represents the deadline of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"        // Checks if the deadline provided is a valid date","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"            this.date \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"            this.isDate \u003d true;","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"            this.isDate \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"     * String representation of the task with the deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"     * If the deadline is in LocalDate format, display as MMM dd yyyy.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"        assert !this.isDate || (this.deadline !\u003d null);","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"        String dateToPrint \u003d this.isDate ? this.date.format(DATE_OUTPUT_FORMAT) : this.deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), dateToPrint);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"    public String toCsvString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"        String dateToPrint \u003d this.isDate ? this.date.format(DATE_OUTPUT_FORMAT) : this.deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"        return String.format(\"D,%s,%s\", super.toCsvString(), dateToPrint);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":53}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":" * Represents an event which has to from and to period.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"    private String startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"    private String endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"     * Creates an instance of Event with the start and end dates.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"     * @param description Describes the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"     * @param startDate Event starts at this time.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"     * @param endDate Event ends at this time.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"     * Returns a String representation of the Event.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"     * @return String representation of the Event.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.startDate, this.endDate);","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"    public String toCsvString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"        return String.format(\"E,%s,%s,%s\", super.toCsvString(), this.startDate, this.endDate);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import duke.exception.ERROR;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":" * An abstraction of all Tasks which contain a description and an isDone flag indicating its completion.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"    private String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"     * Creates a new Task with a description.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"     * @param description Describes the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"     * Parses a line which came from user input and creates the corresponding Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"     * @param s User input line describing the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"     * @return The task with a type and parameters defined by the user\u0027s input.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    public static Task parseTaskFromInput(String s) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"        s \u003d s.trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"        if (s.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"            String desc \u003d s.replace(\"todo\", \"\").trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"            if (desc.isBlank()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"                throw new DukeException(ERROR.TODO_EMPTY.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"            task \u003d new Todo(desc);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"        } else if (s.startsWith(\"deadline\"))  {","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"            String desc \u003d s.replace(\"deadline\", \"\").trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"            if (desc.isBlank()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"                throw new DukeException(ERROR.DEADLINE_EMPTY.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"            String[] params \u003d desc.split(\" /by \");","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"            assert params.length \u003d\u003d 2;","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"            task \u003d new Deadline(params[0], params[1]);","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"        } else if (s.startsWith(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"            String desc \u003d s.replace(\"event\", \"\").trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"            if (desc.isBlank()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"                throw new DukeException(ERROR.EVENT_EMPTY.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"            String[] params \u003d desc.split(\"( /from | /to )\");","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"            assert params.length \u003d\u003d 3;","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"            task \u003d new Event(params[0], params[1], params[2]);","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"        return task;","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"     * Parses a line which came from the database and creates the corresponding Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"     * It is effectively a reverse of Task.toString().","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"winsonheng"},"content":"     * @param s Input line from database describing the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"winsonheng"},"content":"     * @return The task with a type and parameters defined by the input line.","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"winsonheng"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"winsonheng"},"content":"    public static Task parseTaskFromText(String s) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"        s \u003d s.trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"        Task task;","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"winsonheng"},"content":"        assert s.length() \u003e\u003d 8;","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"winsonheng"},"content":"        assert s.charAt(4) \u003d\u003d \u0027X\u0027 || s.charAt(4) \u003d\u003d \u0027 \u0027;","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"winsonheng"},"content":"        if (s.charAt(1) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"winsonheng"},"content":"            String desc \u003d s.substring(7);","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"winsonheng"},"content":"            task \u003d new Todo(desc);","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"winsonheng"},"content":"        } else if (s.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"winsonheng"},"content":"            String desc \u003d s.substring(7);","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"winsonheng"},"content":"            String[] params \u003d desc.split(\"( \\\\(by: |\\\\))\");","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"winsonheng"},"content":"            assert params.length \u003d\u003d 2;","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"winsonheng"},"content":"            task \u003d new Deadline(params[0], params[1]);","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"winsonheng"},"content":"        } else if (s.charAt(1) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"winsonheng"},"content":"            String desc \u003d s.substring(7);","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"winsonheng"},"content":"            String[] params \u003d desc.split(\"( \\\\(from: | to: |\\\\))\");","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"winsonheng"},"content":"            assert params.length \u003d\u003d 3;","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"winsonheng"},"content":"            task \u003d new Event(params[0], params[1], params[2]);","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"winsonheng"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"winsonheng"},"content":"            throw new DukeException(ERROR.CORRUPTED_TASK_DATA.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"winsonheng"},"content":"        if (s.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"winsonheng"},"content":"            task.markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"winsonheng"},"content":"        return task;","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"winsonheng"},"content":"    public static Task parseTaskFromCsv(String s) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"winsonheng"},"content":"        s \u003d s.trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"winsonheng"},"content":"        Task task;","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"winsonheng"},"content":"        String[] params \u003d s.split(\",\");","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"winsonheng"},"content":"        assert params.length \u003e\u003d 3;","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"winsonheng"},"content":"        switch (params[0]) {","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"winsonheng"},"content":"            case \"T\":","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"winsonheng"},"content":"                task \u003d new Todo(params[2]);","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"winsonheng"},"content":"            case \"D\":","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"winsonheng"},"content":"                task \u003d new Deadline(params[2], params[3]);","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"winsonheng"},"content":"            case \"E\":","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"winsonheng"},"content":"                task \u003d new Event(params[2], params[3], params[4]);","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"winsonheng"},"content":"            default:","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"winsonheng"},"content":"                throw new DukeException(ERROR.CORRUPTED_TASK_DATA.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"winsonheng"},"content":"        if (params[1].equals(\"X\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"winsonheng"},"content":"            task.markAsDone();","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"winsonheng"},"content":"        return task;","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"winsonheng"},"content":"     * Marks the current task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"winsonheng"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"winsonheng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"winsonheng"},"content":"     * Marks the current task as undone.","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"winsonheng"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"winsonheng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"winsonheng"},"content":"     * Returns an \u0027X\u0027 if the Task is done, else a space \u0027 \u0027.","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":147,"author":{"gitId":"winsonheng"},"content":"     * @return \u0027X\u0027 if the Task is done, else a space \u0027 \u0027.","lastModifiedDate":"2023-02-02"},{"lineNumber":148,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"winsonheng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"winsonheng"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":154,"author":{"gitId":"winsonheng"},"content":"     * Returns a String representation of this Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":155,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"winsonheng"},"content":"     * @return String representation of this Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"winsonheng"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"winsonheng"},"content":"    public String toCsvString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":164,"author":{"gitId":"winsonheng"},"content":"        return String.format(\"%s,%s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-02-09"},{"lineNumber":165,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":166}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import duke.exception.ERROR;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":" * Representation of an ArrayList of Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"     * Creates an empty ArrayList of Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"        super();","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"     * Creates a TaskList populated with Tasks from the parameter.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"     * @param tasks Collection of initial Tasks to add to the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    public TaskList(Collection\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"        super(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"     * Adds a Task to the list.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"     * @param task Task to add.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"        super.add(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"     * Deletes a Task from the list based on a given index.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"     * @param index 1-based index to delete.","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"     * @return The Task which has been deleted.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"        checkValidIndex(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"        assert index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d super.size();","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"        Task task \u003d super.get(index - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"        super.remove(index - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"        return task;","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"     * Marks a Task as complete based on a given index.","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"     * @param index 1-based index to mark.","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"     * @return The Task which has been marked.","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"    public Task markTask(int index) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"        checkValidIndex(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"        assert index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d super.size();","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"        Task task \u003d super.get(index - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"        task.markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"winsonheng"},"content":"        return task;","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"winsonheng"},"content":"     * Unmarks a Task as incomplete based on a given index.","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"     * @param index 1-based index to unmark.","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"     * @return The Task which has been unmarked.","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"winsonheng"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"winsonheng"},"content":"    public Task unmarkTask(int index) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"winsonheng"},"content":"        checkValidIndex(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"winsonheng"},"content":"        assert index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d super.size();","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"winsonheng"},"content":"        Task task \u003d super.get(index - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"winsonheng"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"winsonheng"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"winsonheng"},"content":"        return task;","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"winsonheng"},"content":"     * Checks if the index given is valid based on the list size and returns true if it is valid.","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"winsonheng"},"content":"     * @param index 1-based index to check.","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"winsonheng"},"content":"     * @return If index is valid, return true, else false.","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"winsonheng"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"winsonheng"},"content":"    private boolean checkValidIndex(int index) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"winsonheng"},"content":"        if (index \u003d\u003d 0 || index \u003e super.size()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"winsonheng"},"content":"            throw new DukeException(String.format(ERROR.INVALID_INDEX.getMessage(), super.size()));","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"winsonheng"},"content":"        return true;","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"winsonheng"},"content":"     * Returns a new TaskList containing all the Tasks containing a given keyword.","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"winsonheng"},"content":"     * @param toFind The keyword to search for.","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"winsonheng"},"content":"     * @return New TaskList containing the relevant tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"winsonheng"},"content":"    public TaskList findTasks(String toFind) {","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"winsonheng"},"content":"        TaskList results \u003d new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"winsonheng"},"content":"        for (int i \u003d 0; i \u003c super.size(); ++i) {","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"winsonheng"},"content":"            Task task \u003d super.get(i);","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"winsonheng"},"content":"            assert task !\u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"winsonheng"},"content":"            if (task.toString().substring(7).contains(toFind)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"winsonheng"},"content":"                results.addTask(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"winsonheng"},"content":"        return results;","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":120}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":" * Represents a Todo task which has no given deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"     * Creates a new Todo task with a description.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"     * @param description Describes the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"     * Returns a String representation of the Todo task.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    public String toCsvString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"        return String.format(\"T,%s\", super.toCsvString());","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":31}},{"path":"src/main/java/duke/util/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.util;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import duke.exception.ERROR;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":" * Class to encapsulate a parsed command which has a defined command type and specific parameters.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"public class Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"     * All available command types.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"    public enum CommandType {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"        EXIT,","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"        LIST,","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"        MARK,","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        UNMARK,","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"        ADD_TASK,","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"        DELETE_TASK,","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"        FIND_TASK,","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"        INVALID_COMMAND","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    private static final String LIST_OUTPUT \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    private static final String MARK_TASK_OUTPUT \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    private static final String UNMARK_TASK_OUTPUT \u003d \"Okay! I\u0027ve marked this task as undone:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    private static final String ADD_TASK_OUTPUT \u003d \"Got it. I\u0027ve added this task:\\n\\t%s\\n\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"            \"Now you have %d tasks in the list.\";","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    private static final String DELETE_TASK_OUTPUT \u003d \"Noted. I\u0027ve removed this task:\\n\\t%s\\n\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"            \"Now you have %d tasks in the list.\";","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"    private static final String FIND_TASK_OUTPUT \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"    private static final String EXIT_OUTPUT \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"    private CommandType commandType;","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    private String param;","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"     * Creates an instance of Command with the type defined but no parameters.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"     * @param commandType The type of command.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    public Command(CommandType commandType) {","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"     * Creates an instance of Command with the type defined and one parameter.","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"     * @param commandType The type of command.","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"     * @param param A paramter used for the given type of command.","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"    public Command(CommandType commandType, String param) {","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"        this.param \u003d param;","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"     * Returns the command type.","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"     * @return The command type.","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"        return this.commandType;","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"winsonheng"},"content":"     * Returns the parameter in this command.","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"winsonheng"},"content":"     * @return The command parameter.","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"winsonheng"},"content":"    public String getParam() {","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"        return this.param;","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"winsonheng"},"content":"     * Executes the current command using a given TaskList, UI, and StorageTextFile.","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"winsonheng"},"content":"     * @param taskList TaskList containing tasks to use for this command.","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"winsonheng"},"content":"     * @param ui The UI to print output to.","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"winsonheng"},"content":"     * @param storage StorageTextFile to save the TaskList to if this command changes the TaskList.","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"winsonheng"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"winsonheng"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"winsonheng"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"winsonheng"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"winsonheng"},"content":"        switch (this.commandType) {","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"winsonheng"},"content":"            case EXIT:","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"winsonheng"},"content":"                output \u003d EXIT_OUTPUT;","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"winsonheng"},"content":"            case LIST:","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"winsonheng"},"content":"                output \u003d LIST_OUTPUT;","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"winsonheng"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); ++i) {","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"winsonheng"},"content":"                    assert taskList.get(i) !\u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"winsonheng"},"content":"                    output +\u003d String.format(\"\\n%d.%s\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"winsonheng"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"winsonheng"},"content":"            case MARK:","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"winsonheng"},"content":"                int index \u003d Integer.parseInt(param);","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"winsonheng"},"content":"                Task task \u003d taskList.markTask(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"winsonheng"},"content":"                output \u003d MARK_TASK_OUTPUT + task.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"winsonheng"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"winsonheng"},"content":"            case UNMARK:","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"winsonheng"},"content":"                index \u003d Integer.parseInt(param);","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"winsonheng"},"content":"                task \u003d taskList.unmarkTask(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"winsonheng"},"content":"                output \u003d UNMARK_TASK_OUTPUT + task.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"winsonheng"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"winsonheng"},"content":"            case DELETE_TASK:","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"winsonheng"},"content":"                index \u003d Integer.parseInt(param);","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"winsonheng"},"content":"                task \u003d taskList.deleteTask(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"winsonheng"},"content":"                output \u003d String.format(DELETE_TASK_OUTPUT, task.toString(), taskList.size());","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"winsonheng"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"winsonheng"},"content":"            case ADD_TASK:","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"winsonheng"},"content":"                task \u003d Task.parseTaskFromInput(param);","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"winsonheng"},"content":"                taskList.addTask(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"winsonheng"},"content":"                output \u003d String.format(ADD_TASK_OUTPUT, task.toString(), taskList.size());","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"winsonheng"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"winsonheng"},"content":"            case FIND_TASK:","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"winsonheng"},"content":"                TaskList results \u003d taskList.findTasks(param);","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"winsonheng"},"content":"                output \u003d FIND_TASK_OUTPUT;","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"winsonheng"},"content":"                for (int i \u003d 0; i \u003c results.size(); ++i) {","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"winsonheng"},"content":"                    assert taskList.get(i) !\u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"winsonheng"},"content":"                    output +\u003d String.format(\"\\n%d.%s\", i + 1, results.get(i).toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"winsonheng"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"winsonheng"},"content":"            case INVALID_COMMAND:","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"winsonheng"},"content":"                throw new DukeException(ERROR.INVALID_INPUT.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"winsonheng"},"content":"        return output;","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":137}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.util;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.util.Command.CommandType;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"public class Parser {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.EXIT);","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.LIST);","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"        } else if (input.matches(\"mark \\\\d+\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"            String index \u003d input.replace(\"mark \", \"\");","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.MARK, index);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"        } else if (input.matches(\"unmark \\\\d+\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"            String index \u003d input.replace(\"unmark \", \"\");","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.UNMARK, index);","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        } else if (input.matches(\"delete \\\\d+\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"            String index \u003d input.replace(\"delete \", \"\");","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.DELETE_TASK, index);","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"        } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.ADD_TASK, input);","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"            String toFind \u003d input.replace(\"find \", \"\");","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.FIND_TASK, toFind);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.INVALID_COMMAND);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":32}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.util;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import duke.exception.ERROR;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import java.io.*;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"public abstract class Storage {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"    private static final String FILEPATH_DIRECTORY \u003d \"data/\";","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"    private String filePath;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    public static Storage createStorage(String filePath) {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"        String extension \u003d getFileExtension(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"        Storage storage \u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"        switch (extension) {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"            case \"txt\":","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"                storage \u003d new StorageTextFile(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"            case \"csv\":","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"                storage \u003d new StorageCsvFile(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"        return storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"    private static String getFileExtension(String filePath) {","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"        String extension \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        int index \u003d filePath.lastIndexOf(\".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"        if (index \u003e 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"            extension \u003d filePath.substring(index + 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"        return extension;","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"    public String getFilePath() {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"        return filePath;","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"    public abstract TaskList load() throws DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"    public abstract boolean save(TaskList list);","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":53}},{"path":"src/main/java/duke/util/StorageCsvFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.util;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import duke.exception.ERROR;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import java.io.*;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"public class StorageCsvFile extends Storage {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"    public StorageCsvFile(String filePath) {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"        super(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(super.getFilePath()))) {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"            String line;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"                taskList.addTask(Task.parseTaskFromCsv(line));","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"            throw new DukeException(ERROR.CORRUPTED_TASK_DATA.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"            throw new DukeException(ERROR.CORRUPTED_TASK_DATA.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        return taskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    public boolean save(TaskList list) {","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"            // Create data dir if it doesn\u0027t exist","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"            Files.createDirectories(Paths.get(\"data/\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"            PrintWriter pw \u003d new PrintWriter(super.getFilePath());","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"            for (Task task: list) {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"                pw.println(task.toCsvString());","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"            pw.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"            return true;","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"            ex.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"            ex.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"        return false;","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"winsonheng":54}},{"path":"src/main/java/duke/util/StorageTextFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.util;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import duke.exception.ERROR;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import java.io.*;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"public class StorageTextFile extends Storage {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"    public StorageTextFile(String filePath) {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"        super(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(super.getFilePath()))) {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"            String line;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"                taskList.add(Task.parseTaskFromText(line));","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"            throw new DukeException(ERROR.CORRUPTED_TASK_DATA.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"            throw new DukeException(ERROR.CORRUPTED_TASK_DATA.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        return taskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    public boolean save(TaskList list) {","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"            // Create data dir if it doesn\u0027t exist","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"            Files.createDirectories(Paths.get(\"data/\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"            PrintWriter pw \u003d new PrintWriter(super.getFilePath());","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"            for (Task task: list) {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"                pw.println(task.toString());","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"            pw.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"            return true;","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"            ex.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"            ex.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"        return false;","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"winsonheng":54}},{"path":"src/main/java/duke/view/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.view;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"    private void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"        db.flip();","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"        return db;","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"winsonheng":61}},{"path":"src/main/java/duke/view/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.view;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"import javax.swing.*;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"import javax.swing.filechooser.FileNameExtensionFilter;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    private MenuItem loadCsvMenuItem;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"    private Image userImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/userIcon.jpg\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    private Image dukeImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/dukeIcon.jpg\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"    private static final String LOAD_SUCCESS_OUTPUT \u003d \"Tasks loaded successfully!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello I\u0027m Duke, your personal task manager!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"    private static final String LOAD_ERROR_MESSAGE \u003d \"Unable to load tasks from database!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"    private void loadDataFromCsv() {","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"winsonheng"},"content":"        JFileChooser chooser \u003d new JFileChooser();","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"winsonheng"},"content":"        FileNameExtensionFilter filter \u003d new FileNameExtensionFilter(\"CSV Files\", \"csv\");","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"winsonheng"},"content":"        chooser.setFileFilter(filter);","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"winsonheng"},"content":"        int returnVal \u003d chooser.showOpenDialog(null);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"        if (returnVal !\u003d JFileChooser.APPROVE_OPTION) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"            return;","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"winsonheng"},"content":"        String fileName \u003d chooser.getSelectedFile().getPath();","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"winsonheng"},"content":"        boolean isLoadSuccess \u003d this.duke.loadTasks(fileName);","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"winsonheng"},"content":"        if (isLoadSuccess) {","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"winsonheng"},"content":"            showLoadSuccess();","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"winsonheng"},"content":"    private void showLoadSuccess() {","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"winsonheng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"winsonheng"},"content":"                DialogBox.getDukeDialog(LOAD_SUCCESS_OUTPUT, dukeImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"winsonheng"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"winsonheng"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"winsonheng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"winsonheng"},"content":"                DialogBox.getDukeDialog(WELCOME_MESSAGE, dukeImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"winsonheng"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"winsonheng"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"winsonheng"},"content":"    public void showLoadingErrorMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"winsonheng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"winsonheng"},"content":"                DialogBox.getDukeDialog(LOAD_ERROR_MESSAGE, dukeImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"winsonheng"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"winsonheng":103}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"winsonheng":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.view.MainWindow\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"      \u003cMenuBar prefHeight\u003d\"25.0\" prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"        \u003cmenus\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"            \u003citems\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"              \u003cMenuItem fx:id\u003d\"loadCsvMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#loadDataFromCsv\" text\u003d\"Load csv\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"            \u003c/items\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"        \u003c/menus\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"      \u003c/MenuBar\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"winsonheng":31}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"    public void testValidDate(){","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"        Deadline deadline \u003d new Deadline(\"do this\", \"2023-02-05\");","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"        String expected \u003d \"[D][ ] do this (by: Feb 05 2023)\";","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"    public void testNonDate(){","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"        Deadline deadline \u003d new Deadline(\"do that\", \"tomorrow\");","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"        String expected \u003d \"[D][ ] do that (by: tomorrow)\";","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":21}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.util;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"    public void testBye(){","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"        Command bye \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"        assertEquals(Command.CommandType.EXIT, bye.getCommandType());","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"        assertEquals(null, bye.getParam());","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"    public void testAddTodo(){","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"        Command addTodo \u003d Parser.parse(\"todo something later\");","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"        String expected \u003d \"todo something later\";","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        assertEquals(Command.CommandType.ADD_TASK, addTodo.getCommandType());","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"        assertEquals(expected, addTodo.getParam());","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"    public void testInvalid(){","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"        Command invalid \u003d Parser.parse(\"random input\");","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"        assertEquals(Command.CommandType.INVALID_COMMAND, invalid.getCommandType());","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"        assertEquals(null, invalid.getParam());","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"event Lecture /from 1400 /to 1600","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"deadline lecture quiz /by tomorrow","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"list","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"winsonheng":1,"-":20}}]
