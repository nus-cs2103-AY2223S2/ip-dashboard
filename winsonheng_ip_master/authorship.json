[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"    sourceSets.main.java.srcDirs \u003d [\u0027src\u0027]","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"winsonheng":2,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"[T][ ] alkjsa","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"[D][X] osjocjod (by: tmr)","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"[E][ ] hi (from: now to: then)","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"[D][ ] pldlslsdj (by: Feb 03 2023)","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":4}},{"path":"src/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import duke.util.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import duke.util.UI;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"    private UI ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    public void run() {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"            try {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"                Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"                isExit \u003d c.getCommandType() \u003d\u003d Command.CommandType.EXIT;","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"                ui.printFormattedOutput(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"winsonheng":43,"-":2}},{"path":"src/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.exception;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":8}},{"path":"src/duke/exception/ERROR.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.exception;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"public enum ERROR {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"    TODO_EMPTY(\"☹ OOPS!!! The description of a todo cannot be empty.\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"    DEADLINE_EMPTY(\"☹ OOPS!!! The description of a deadline cannot be empty.\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"    EVENT_EMPTY(\"☹ OOPS!!! The description of an event cannot be empty.\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"    INVALID_INPUT(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"    INVALID_INDEX(\"Invalid index!\\nThere are only %d tasks in the list.\"),","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"    CORRUPTED_TASK_DATA(\"The task data file may have been corrupted.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"    private final String message;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    ERROR(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"        return this.message;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":20}},{"path":"src/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"    private String deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"    private LocalDate date;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"    private boolean isDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"    private static final DateTimeFormatter DATE_OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"        // Checks if the deadline provided is a valid date","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"            this.date \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"            this.isDate \u003d true;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"            this.isDate \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"        String dateToPrint \u003d this.isDate ? this.date.format(DATE_OUTPUT_FORMAT) : this.deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), dateToPrint);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":30}},{"path":"src/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"    private String startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"    private String endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.startDate, this.endDate);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":17}},{"path":"src/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import duke.exception.ERROR;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"    private String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"    public static Task parseTaskFromInput(String s) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"        s \u003d s.trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        if (s.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"            String desc \u003d s.replace(\"todo\", \"\").trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"            if (desc.isBlank()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"                throw new DukeException(ERROR.TODO_EMPTY.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"            task \u003d new Todo(desc);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"        } else if (s.startsWith(\"deadline\"))  {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"            String desc \u003d s.replace(\"deadline\", \"\").trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"            if (desc.isBlank()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"                throw new DukeException(ERROR.DEADLINE_EMPTY.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"            String[] params \u003d desc.split(\" /by \");","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"            task \u003d new Deadline(params[0], params[1]);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        } else if (s.startsWith(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"            String desc \u003d s.replace(\"event\", \"\").trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"            if (desc.isBlank()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"                throw new DukeException(ERROR.EVENT_EMPTY.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"            String[] params \u003d desc.split(\"( /from | /to )\");","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"            task \u003d new Event(params[0], params[1], params[2]);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"        return task;","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"    public static Task parseTaskFromDB(String s) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"        s \u003d s.trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"        if (s.charAt(1) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"            String desc \u003d s.substring(7);","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"            task \u003d new Todo(desc);","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"        } else if (s.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"            String desc \u003d s.substring(7);","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"            String[] params \u003d desc.split(\"( \\\\(by: |\\\\))\");","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"            task \u003d new Deadline(params[0], params[1]);","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"        } else if (s.charAt(1) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"            String desc \u003d s.substring(7);","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"            String[] params \u003d desc.split(\"( \\\\(from: | to: |\\\\))\");","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"            task \u003d new Event(params[0], params[1], params[2]);","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"            throw new DukeException(ERROR.CORRUPTED_TASK_DATA.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"        if (s.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"            task.markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"winsonheng"},"content":"        return task;","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"winsonheng"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"winsonheng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"winsonheng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"winsonheng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"winsonheng"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"winsonheng"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":86}},{"path":"src/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import duke.exception.ERROR;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"        super();","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"    public TaskList(Collection\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"        super(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"        super.add(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"        checkSize(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"        Task task \u003d super.get(index - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"        super.remove(index - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"        return task;","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    public Task markTask(int index) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"        checkSize(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        Task task \u003d super.get(index - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"        task.markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"        return task;","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"    public Task unmarkTask(int index) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"        checkSize(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        Task task \u003d super.get(index - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"        return task;","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"    private boolean checkSize(int index) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"        if (index \u003d\u003d 0 || index \u003e super.size()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"            throw new DukeException(String.format(ERROR.INVALID_INDEX.getMessage(), super.size()));","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"        return true;","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":50}},{"path":"src/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":13}},{"path":"src/duke/util/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.util;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import duke.exception.ERROR;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import duke.util.UI;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"public class Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"    public enum CommandType {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"        EXIT,","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"        LIST,","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"        MARK,","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"        UNMARK,","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"        ADD_TASK,","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"        DELETE_TASK,","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"        INVALID_COMMAND","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"    private static final String ADD_TASK_OUTPUT \u003d \"Got it. I\u0027ve added this task:\\n\\t%s\\nNow you have %d tasks in the list.\";","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    private static final String DELETE_TASK_OUTPUT \u003d \"Noted. I\u0027ve removed this task:\\n\\t%s\\nNow you have %d tasks in the list.\";","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"    private CommandType commandType;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    private String param;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    public Command(CommandType commandType) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"    public Command(CommandType commandType, String param) {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"        this.param \u003d param;","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"        return this.commandType;","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"    public String getParam() {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        return this.param;","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"        switch (this.commandType) {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"            case EXIT:","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"                ui.exit();","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"            case LIST:","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"                output \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); ++i) {","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"                    output +\u003d String.format(\"\\n%d.%s\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"            case MARK:","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"                int index \u003d Integer.parseInt(param);","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"                Task task \u003d taskList.markTask(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"                output \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"            case UNMARK:","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"                index \u003d Integer.parseInt(param);","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"                task \u003d taskList.unmarkTask(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"                output \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"winsonheng"},"content":"            case DELETE_TASK:","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"winsonheng"},"content":"                index \u003d Integer.parseInt(param);","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"winsonheng"},"content":"                task \u003d taskList.deleteTask(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"winsonheng"},"content":"                output \u003d String.format(DELETE_TASK_OUTPUT, task.toString(), taskList.size());","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"winsonheng"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"            case ADD_TASK:","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"                task \u003d Task.parseTaskFromInput(param);","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"winsonheng"},"content":"                taskList.addTask(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"winsonheng"},"content":"                output \u003d String.format(ADD_TASK_OUTPUT, task.toString(), taskList.size());","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"winsonheng"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"winsonheng"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"winsonheng"},"content":"            case INVALID_COMMAND:","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"winsonheng"},"content":"                throw new DukeException(ERROR.INVALID_INPUT.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"winsonheng"},"content":"        ui.printFormattedOutput(output);","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":85}},{"path":"src/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.util;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.util.Command.CommandType;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"public class Parser {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.EXIT);","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.LIST);","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"        } else if (input.matches(\"mark \\\\d+\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"            String index \u003d input.replace(\"mark \", \"\");","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.MARK, index);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"        } else if (input.matches(\"unmark \\\\d+\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"            String index \u003d input.replace(\"unmark \", \"\");","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.UNMARK, index);","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        } else if (input.matches(\"delete \\\\d+\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"            String index \u003d input.replace(\"delete \", \"\");","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.DELETE_TASK, index);","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"        } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.ADD_TASK, input);","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"            return new Command(CommandType.INVALID_COMMAND);","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":29}},{"path":"src/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.util;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import duke.exception.ERROR;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import java.io.*;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"public class Storage {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"    private String filePath;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(this.filePath))) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"            String line \u003d null;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"                taskList.add(Task.parseTaskFromDB(line));","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"            throw new DukeException(ERROR.CORRUPTED_TASK_DATA.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"            throw new DukeException(ERROR.CORRUPTED_TASK_DATA.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"        return taskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"    public boolean save(TaskList list) {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"            // Create data dir if it doesn\u0027t exist","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"            Files.createDirectories(Paths.get(\"data/\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"            PrintWriter pw \u003d new PrintWriter(this.filePath);","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"            for (Task task: list) {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"                pw.println(task.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"            pw.close();","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"            return true;","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"            ex.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"            ex.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"        return false;","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":56}},{"path":"src/duke/util/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package duke.util;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"public class UI {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"    private static final String FULL_LINE \u003d \"_______________________________________________\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"    private static final String WELCOME_TEXT \u003d \"Hello I\u0027m Duke, your personal task manager!\";","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"    private static final String BYE_TEXT \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"    private static final String LOADING_ERROR_TEXT \u003d \"Unable to load tasks from database!\";","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"    private Scanner sc;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"    public UI() {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"        printFormattedOutput(WELCOME_TEXT);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    public void exit() {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"        printFormattedOutput(BYE_TEXT);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        printFormattedOutput(LOADING_ERROR_TEXT);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    public void printFormattedOutput(String output) {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"        output \u003d FULL_LINE + output + \"\\n\" + FULL_LINE;","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"winsonheng":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"event Lecture /from 1400 /to 1600","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"deadline lecture quiz /by tomorrow","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"list","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"winsonheng":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"winsonheng":1,"-":20}}]
