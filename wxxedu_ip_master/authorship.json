[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wxxedu":5,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"checkstyle {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    testImplementation group: \u0027org.mockito\u0027, name: \u0027mockito-core\u0027, version:","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"            \u00273.+\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    testImplementation group: \u0027org.mockito\u0027, name: \u0027mockito-junit-jupiter\u0027, version:","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"            \u00275.+\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"application {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wxxedu":25,"-":34}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"![Duke Ui](./Ui.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"### Feature-Task Manager","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"Duke can help you manage 3 types of tasks:","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"- Deadline: a task that has a ddl;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"- Todo: a normal task;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"- Event: a task that has a start time and an end time.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"It also supports other features such as echoing what you\u0027ve said,","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"but they are disabled. Feel free to enable them yourself, the","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"details of which I am too lazy to write about.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"### `todo` - Adds a todo","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"This will add a todo to the task list that duke persists.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"``` ","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"todo CS2109S Mini Project","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"added: [T][ ] CS2109S Mini Project","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"![outcome](./assets/outcome-todo.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"Duke will tell you that it has added the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"### `deadline` - Adds a deadline.","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"This will add a deadline to the task list. Please remember to","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"include the `/by` command, after-with a date of the style `YYYY-MM-DD`","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"should be passed in.","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"task add do laundry /by 2023-02-12 ","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"### `event` - Adds an event.","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"This will add an event to the task list. Please remember to","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"include the `/from` and `/to` command, after-with a date of the","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"style `YYYY-MM-DD`","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"should be passed in.","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"task add do laundry /from 2023-02-12 /to 2023-02-13","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"This will list all tasks in the task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"![outcome](./assets/outcome-list.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"### `mark` - Marks a task as done","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"This will mark a task as done. To use this command, you will need to specify","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"the index of the task you want to mark as done.","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"mark 1","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"![outcome](./assets/outcome-mark.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"### `unmark` - Marks a task as undone","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"This will mark a task as undone. To use this command, you will need to specify","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"the index of the task you want to mark as undone.","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"unmark 1","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"![outcome](./assets/outcome-unmark.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"This will delete a task. To use this command, you will need to specify","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"the index of the task you want to delete.","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"delete 1","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"![outcome](./assets/outcome-delete.png)","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"wxxedu":92,"-":30}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.LoadException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.WriteException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import core.singletons.Singletons;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import core.utils.TokenUtilities;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import data.DataLoaderImpl;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import data.DataSaverImpl;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import domain.entities.DataLoader;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import domain.entities.DataSaver;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import domain.usecases.ByeUsecase;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import domain.usecases.EchoUsecase;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import domain.usecases.TaskManagerUsecase;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import domain.usecases.UnknownCommandUsecase;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import presentation.controllers.DukeEventLoop;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"import presentation.gui.MainWindow;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"import presentation.ui.DummyWritable;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"import presentation.ui.SystemErr;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"import presentation.ui.SystemOut;","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":" * The main class for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    private static DukeEventLoop initOrCrash(Writable target) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"            registerSingletons(target);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        } catch (WriteException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"            System.err.println(\"Unable to initialize app.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"            System.exit(1);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        } catch (LoadException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"            System.err.println(\"Unable to initialize app.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"            System.exit(1);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        DukeEventLoop loop \u003d DukeEventLoop.createInitializingLoop();","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        loop.run();","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        return DukeEventLoop.createEventLoop(target);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * This would register the singletons that we would be using later on.","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    private static void registerSingletons(Writable target) throws WriteException,","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"            LoadException {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        Singletons.registerSingleton(DateTimeFormatter.class,","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        // Persistence related","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        final String fileName \u003d \"duke.txt\";","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        final DataLoader dataLoader \u003d new DataLoaderImpl(fileName);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        final DataSaver dataSaver \u003d new DataSaverImpl(fileName);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        Singletons.registerSingleton(DataSaver.class, dataSaver);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        Singletons.registerSingleton(DataLoader.class, dataLoader);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        // Output related","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        Singletons.registerLazySingleton(SystemErr.class, SystemErr::new);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        Singletons.registerLazySingleton(SystemOut.class, SystemOut::new);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"        Singletons.registerLazySingleton(DummyWritable.class, DummyWritable::new);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        // Use cases","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        Singletons.registerLazySingleton(","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"                ByeUsecase.class, () -\u003e new ByeUsecase(target)","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        Singletons.registerLazySingleton(","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"                EchoUsecase.class, () -\u003e new EchoUsecase(target)","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        Singletons.registerLazySingleton(","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"                TaskManagerUsecase.class, () -\u003e new TaskManagerUsecase(","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"                        Singletons.get(DummyWritable.class),","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"                        target,","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"                        Singletons.get(DataSaver.class))","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        Singletons.registerLazySingleton(","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"                UnknownCommandUsecase.class, () -\u003e new UnknownCommandUsecase(target)","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        Singletons.registerLazySingleton(","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"                TokenUtilities.class,","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"                TokenUtilities::new","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"            final FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"                    \"/presentation/gui/MainWindow.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"            MainWindow window \u003d fxmlLoader.getController();","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"            final DukeEventLoop loop \u003d initOrCrash(window);","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"            window.setDukeEventLoop(loop);","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"            primaryStage.show();","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wxxedu":104,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * A launcher class to workaround classpath issues for JavaFX.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class Launcher {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"wxxedu":10}},{"path":"src/main/java/core/exceptions/DisposableException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package core.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception that is thrown when an error occurs while disposing of a","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" * resource.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"public class DisposableException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     * Creates a new disposable exception with the given message.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     * @param message the message of the exception.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    public DisposableException(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"        super(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":16}},{"path":"src/main/java/core/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package core.exceptions;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception thrown when the argument does not match the expected.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class InvalidArgumentException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * The tokens that caused this exception to be thrown, may be null.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    final String[] tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     * Creates a new exception due to not having a valid argument.","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * @param message the message, if any.","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * @param tokens  the tokens because of which this exception is thrown.","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public InvalidArgumentException(String message, String[] tokens) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * Creates a new exception due to not having a valid argument.","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * @param message the message of the argument.","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"        this(message, null);","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"        if (tokens \u003d\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"            return \"InvalidArgumentException: \" + super.getMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"            return \"InvalidArgumentException: \" + super.getMessage()","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"                    + \"[\" + String.join(\", \", tokens) + \"]\";","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":41}},{"path":"src/main/java/core/exceptions/LoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package core.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception that is thrown when an error occurs while loading from a file.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class LoadException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Creates a new load exception with the given message.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * @param message the message of the exception.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    public LoadException(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"        super(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":15}},{"path":"src/main/java/core/exceptions/WriteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package core.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception that is thrown when an error occurs while writing to a file.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class WriteException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Creates a new write exception with the given message.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * @param message the message of the exception.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    public WriteException(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"        super(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":15}},{"path":"src/main/java/core/singletons/Singletons.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package core.singletons;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * The utilities class for handling the registering singletons. To use it, call","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * \u003ccode\u003eSingletons.registerSingleton(Hello.class, new Hello());\u003c/code\u003e","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * This way, it can provide a new layer of abstraction, and if any concrete","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * implementations were to change, any code calling \u003ccode\u003eSingletons.get\u003c/code\u003e","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * would not need to be changed, unless, or course, you directly call the","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * class itself.","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"public class Singletons {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * The dependencies stored in this dependencies section.","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    private static final Map\u003cClass\u003c?\u003e, Object\u003e singletons \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * The dependency suppliers, used for lazy registration.","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    private static final Map\u003cClass\u003c?\u003e, Supplier\u003c?\u003e\u003e lazySingletons \u003d","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"            new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * Registers a class as a singleton, therefore, it would only be created","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * once.","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * @param cls    the class of the object.","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * @param object the object itself.","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e    the type of the object.","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e void registerSingleton(Class\u003cT\u003e cls,","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"                                             T object) {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        assert (!singletons.containsKey(cls)) || (!lazySingletons","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"                .containsKey(cls)) : \"The class is already registered as a \"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"                + \"singleton\";","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        singletons.put(cls, object);","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     * Registers a class as a lazy singleton. A lazy singleton will only get","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     * instantiated if it was used.","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     * @param cls      the class of the object","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * @param supplier the lazy singleton of the object.","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e      the type of the object.","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e void registerLazySingleton(Class\u003cT\u003e cls,","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"                                                 Supplier\u003cT\u003e supplier) {","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        assert (!singletons.containsKey(cls)) || (!lazySingletons","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"                .containsKey(cls)) : \"The class is already registered as a \"","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"                + \"singleton\";","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        lazySingletons.put(cls, supplier);","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     * Re-registers a class as a singleton, therefore, it would only be created","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     * once.","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     * @param cls the class of the object.","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e void reRegisterSingleton(Class\u003cT\u003e cls,","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"                                               T object) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        singletons.put(cls, object);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"     * Re-registers a class as a lazy singleton. A lazy singleton will only get","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     * instantiated if it was used.","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     * @param cls the class of the object","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e void reRegisterLazySingleton(Class\u003cT\u003e cls,","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"                                                   Supplier\u003cT\u003e supplier) {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        singletons.remove(cls);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        lazySingletons.put(cls, supplier);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     * Gets an instance of the specified class.","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     * @param cls the class of the class.","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e the type of the object.","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * @return the object that has been registered for this class.","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e T get(Class\u003cT\u003e cls) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        assert (singletons.containsKey(cls) || lazySingletons.containsKey(cls))","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"                : \"The class \" + cls.getName() + \" has not been registered.\";","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        if (singletons.containsKey(cls)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"            return cls.cast(singletons.get(cls));","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        } else if (lazySingletons.containsKey(cls)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"            final T object \u003d cls.cast(lazySingletons.get(cls).get());","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"            singletons.put(cls, object);","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"            lazySingletons.remove(cls);","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"            return object;","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        throw new RuntimeException(\"This should never happen.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"wxxedu":102}},{"path":"src/main/java/core/utils/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package core.utils;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * A Pair of objects.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * @param \u003cL\u003e the type of the left object.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * @param \u003cR\u003e the type of the right object.","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"public class Pair\u003cL, R\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     * The left object.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    private final L left;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * The right object.","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    private final R right;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * Creates a new pair of objects.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * @param left  the object stored as the left.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * @param right the object stored as the right.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    public Pair(L left, R right) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        this.left \u003d left;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"        this.right \u003d right;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * Gets the left object.","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * @return the object stored as left.","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    public L getLeft() {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        return left;","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     * Gets the right object.","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     * @return the object stored as right.","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    public R getRight() {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        return right;","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":47}},{"path":"src/main/java/core/utils/TokenUtilities.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package core.utils;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * A helper class for joining the tokens to strings according to the delim","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * provided.","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"public class TokenUtilities {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     * Instantiates a TokenUtilities.","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    public TokenUtilities() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * Joins the tokens together","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * @param tokens the tokens to be joined","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * @param delim  a hashset containing the potential delimiters, a delimiter","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     *               is a string that splits the tokens.","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * @return a pair, the left of which would be a string if the token does","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     *         not start with a delimiter. The right would be a hash set containing the","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     *         information.","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    public Pair\u003cString, Map\u003cString, String\u003e\u003e joinTokens(","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"            String[] tokens, Set\u003cString\u003e delim) {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        String currentDelim \u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"        final StringBuilder left \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        final HashMap\u003cString, StringBuilder\u003e rightBuilders \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        for (String token : tokens) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"            if (delim.contains(token)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"                currentDelim \u003d token;","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"                rightBuilders.put(token, new StringBuilder());","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"                continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            if (currentDelim \u003d\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"                left.append(token);","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"                left.append(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"                final StringBuilder builder \u003d rightBuilders.get(currentDelim);","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"                builder.append(token);","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"                builder.append(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        final HashMap\u003cString, String\u003e right \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        for (final String key : rightBuilders.keySet()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"            right.put(key, rightBuilders.get(key).toString().trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        return new Pair\u003c\u003e(left.toString().trim(), right);","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     * Gets the subsequence of the tokens.","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     * @param tokens   the tokens from which the subsequence is get.","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     * @param startIdx the start index of the subsequence.","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     * @param endIdx   the end index of the subsequence.","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     * @return the subsequence starting from the startIdx ending with the","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     *         endIdx, inclusive of both sides.","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    public String[] getSubsequence(String[] tokens, int startIdx, int endIdx) {","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        assert (endIdx \u003c tokens.length) : \"The end index should be smaller than\"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"                + \"the length of the tokens.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        if (startIdx \u003e endIdx) {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"            return new String[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        final int length \u003d endIdx - startIdx + 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        String[] res \u003d new String[length];","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        System.arraycopy(tokens, startIdx, res, 0, length);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        return res;","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"     * Returns an array with the first item removed.","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     * @param tokens the list of tokens.","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"     * @return the tokens with the first item removed.","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    public String[] removeFirst(String[] tokens) {","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        if (tokens.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"            return new String[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        return getSubsequence(tokens, 1, tokens.length - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":88}},{"path":"src/main/java/core/utils/fp/ThrowingFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package core.utils.fp;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The functional interface for a function that can throw an exception.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the type of the parameter.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * @param \u003cR\u003e the return type of the function.","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * @param \u003cE\u003e the type of the exception that can be thrown.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"@FunctionalInterface","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"public interface ThrowingFunction\u003cT, R, E extends Exception\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     * Applies the function to the given parameter.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * @param param the parameter to which the function will be applied.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * @return the result of the function.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * @throws E if an exception occurs.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    R apply(T param) throws E;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":20}},{"path":"src/main/java/core/utils/fp/ThrowingSupplier.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package core.utils.fp;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The functional interface for a supplier that can throw an exception.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * @param \u003cR\u003e the return type of the supplier, i.e. the type of the object to","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" *            be supplied.","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * @param \u003cE\u003e the type of the exception that can be thrown.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"@FunctionalInterface","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"public interface ThrowingSupplier\u003cR, E extends Exception\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     * Supplies an object.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * @return the object supplied.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * @throws E if an exception occurs.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    R supply() throws E;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":19}},{"path":"src/main/java/data/DataLoaderImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package data;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.LoadException;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import domain.entities.DataLoader;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * The implementation of the data loader, which will load the data from a file.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"public class DataLoaderImpl extends DataLoader {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    private final File file;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * Creates a new data loader that will load the data from the file with the","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * given path.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * @param path the path to the file from which the data will be loaded.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * @throws LoadException if the file could not be read.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    public DataLoaderImpl(String path) throws LoadException {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"            // try to create the file","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"                throw new LoadException(\"Could not create file: \" + path + \" \" + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"            this.scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"            throw new LoadException(\"Could not read file: \" + path + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    public void dispose() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        scanner.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    public String nextLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    public boolean hasNextLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        return scanner.hasNextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":54}},{"path":"src/main/java/data/DataSaverImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package data;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.DisposableException;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.WriteException;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import domain.entities.DataSaver;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * The implementation of the data saver, which will save the data to a file.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"public class DataSaverImpl extends DataSaver {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * The name of the file to which the data will be saved.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    final String fileName;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * The file to which the data will be saved.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    final File file;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * The file writer.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    final FileWriter fileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * The buffered writer.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    final BufferedWriter bufferedWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * Creates a new data saver that will save the data to file with the","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * given file name.","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * @param fileName the name of the file to which the data will be saved.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     * @throws WriteException if the file could not be created or written to.","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    public DataSaverImpl(String fileName) throws WriteException {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        this.file \u003d new File(fileName);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        // create the file if it doesn\u0027t exist","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"                throw new WriteException(\"Could not create file: \" + fileName + \" \" + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"            this.fileWriter \u003d new FileWriter(file, true);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"            throw new WriteException(\"Could not read file: \" + fileName);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        this.bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    public void write(Object content) throws WriteException {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"            bufferedWriter.append(content.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"            throw new WriteException(\"Could not write to file: \" + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    public void writeln(Object content) throws WriteException {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"            bufferedWriter.append(content.toString().trim() + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"            throw new WriteException(\"Could not write to file: \" + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    public void clear() throws WriteException {","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"            final FileWriter fileWriter1 \u003d new FileWriter(file, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"            final PrintWriter printWriter \u003d new PrintWriter(fileWriter1);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"            printWriter.print(\"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"            printWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"            fileWriter1.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"            throw new WriteException(\"Could not clear file: \" + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"    public void dispose() throws DisposableException {","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"            throw new DisposableException(\"Could not close file writer: \" + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":101}},{"path":"src/main/java/domain/entities/DataLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Disposable;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.StringReadable;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * The interface that represents a data loader, i.e. something that can load","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * new lines of Strings.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * This could be used as  abstraction over the {@link java.util.Scanner}","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * class.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"public abstract class DataLoader implements Disposable, StringReadable {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":14}},{"path":"src/main/java/domain/entities/DataSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Disposable;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.ThrowingWritable;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * The interface that represents a data saver, i.e. something that can save","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * new lines of Strings.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * This could be used as abstraction over the {@link java.io.FileWriter} and","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * many other similar classes.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"public abstract class DataSaver implements Disposable, ThrowingWritable {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":14}},{"path":"src/main/java/domain/entities/core/CommandRegisterable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.core;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The interface that can registers its commands to the event loop. This","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" * will allow us to keep the business logic inside the relevant class,","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * instead of leaving it in the main method.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"public interface CommandRegisterable {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * Registers the executables related to this interface to the nestable.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * @param nestable the root executable to which the executable of this","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     *                 interface shall be registered.","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    void register(NestedCommandableObject nestable);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":16}},{"path":"src/main/java/domain/entities/core/Commandable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.core;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The interface for objects that can be executed.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public interface Commandable {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Executes the executable.","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * @param tokens the tokens, i.e. the arguments, for the executable. They","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     *               should include the first word.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * @return the exit status of the runnable, which decides what to do with","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     *         the next executable in line.","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    ExitStatus execute(String[] tokens);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":17}},{"path":"src/main/java/domain/entities/core/Disposable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.core;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.DisposableException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * The interface for objects that can be disposed of. Dispose means cleaning","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * up the resources that the object uses. Although a bit hacky, it can also","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * be used to persist the state of the object.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"public interface Disposable {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * Disposes the object.","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    void dispose() throws DisposableException;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":15}},{"path":"src/main/java/domain/entities/core/EventLoop.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.core;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.DisposableException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * This shall serve as the base for implementing an event loop. An event loop","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * loops forever unless the executable in it returns ExitStatus.terminate.","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * Also, when the loop terminates, it will call the dispose method, which","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * will dispose the things that are registered to the disposables.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"public abstract class EventLoop implements Disposable {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     * The root executable that shall be executed in the loop.","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    private final Commandable rootCommandable;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * The StringReadable that shall be used for providing the next line of","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * input to the event loop.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    private final StringReadable reader;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * The writer for writing the error messages.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    private final Writable errorWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * Creates a new event loop.","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * @param rootCommandable the root command in the event loop.","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * @param reader          the reader that\u0027s responsible for feeding the event loop.","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * @param errorWriter     the writer that\u0027s responsible for writing the error.","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    public EventLoop(Commandable rootCommandable, StringReadable reader,","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"                     Writable errorWriter) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        this.rootCommandable \u003d rootCommandable;","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        this.reader \u003d reader;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        this.errorWriter \u003d errorWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * Returns the tokens from the string.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * @param string the string to get the tokens from.","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    public static String[] getTokens(String string) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        return string.trim().split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * Starts the event loop.","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    public void run() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        while (reader.hasNextLine()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"            String command \u003d reader.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"            ExitStatus status \u003d rootCommandable.execute(getTokens(command));","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"            if (status \u003d\u003d ExitStatus.terminate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        dispose();","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    public ExitStatus runWithCommand(String command) {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        return rootCommandable.execute(getTokens(command));","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    public void dispose() {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        if (rootCommandable instanceof Disposable) {","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"                final Disposable disposable \u003d (Disposable) rootCommandable;","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"                disposable.dispose();","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"            } catch (DisposableException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"                errorWriter.writeln(\"Failed to dispose the root \"","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"                        + \"executable: \" + e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        if (reader instanceof Disposable) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"                final Disposable disposable \u003d (Disposable) reader;","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"                disposable.dispose();","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"            } catch (DisposableException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"                errorWriter.writeln(\"Failed to close the reader: \"","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"                        + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":88}},{"path":"src/main/java/domain/entities/core/ExitStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.core;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * This is the return type of executing any command. It should signify what the","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" * event loop in the input manager shall do after executing it.","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * \u003cli\u003e","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * If a command returns skipCurrentLoop, then it means that all the commands","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * that could be executed after this would be skipped.","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * \u003c/li\u003e","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * \u003cli\u003e","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * If a command returns terminate, then it means that the event loop shall","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * terminate.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * \u003c/li\u003e","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" * \u003cli\u003e","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * If a command returns continueCurrentLoop, then it means that all the event","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" * loop will continue executing the commands after this in the same iteration.","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" * \u003c/li\u003e","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"public enum ExitStatus {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * This means that the event loop shall skip the rest of the commands in the","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * current iteration and continue to the next iteration.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    finishCurrentIteration,","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * This means that the event loop shall terminate.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    terminate,","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * This means that the event loop shall continue executing the commands in","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * the current iteration.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    continueExecute","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":34}},{"path":"src/main/java/domain/entities/core/Identifiable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.core;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * An interface for objects that have a id, so that in a sense they could be","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" * located in hash tables using this key.","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"public interface Identifiable {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     * Gets the id of the Keyable object, which can be stored as keys for a","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * HashMap.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * @return the id of the Keyable object.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    String getId();","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":15}},{"path":"src/main/java/domain/entities/core/IdentifiedCommandable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.core;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The interface for objects that have both ids and can be executed. This is","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" * here just so that when we need it, we can require the object that\u0027s passed","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * in to a method to be both identifiable and executable.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"public interface IdentifiedCommandable extends Commandable, Identifiable {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":9}},{"path":"src/main/java/domain/entities/core/NestedCommandableObject.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.core;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.DisposableException;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import core.singletons.Singletons;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import core.utils.TokenUtilities;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * This class shall contain several executable objects, hence it shall be","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" * considered \u0027nestable\u0027 executable.","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"public class NestedCommandableObject implements Commandable, Disposable {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * The commands that are executed in sequence before executing the","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * tokenedCommands in an execution iteration.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * \u003cp\u003eIt shall be noted that this","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * iteration may not continue after executing a certain command, depending","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * on the command\u0027s return value upon execution.\u003c/p\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    private final List\u003cCommandable\u003e preCommandables;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * The commands that are executed in the sequence after executing the","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * keywordCommands.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * \u003cp\u003eIt shall be noted that this","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * iteration may not continue after executing a certain command, depending","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * on the command\u0027s return value upon execution.\u003c/p\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    private final List\u003cCommandable\u003e postCommandables;","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * The commands that are executed in the middle. They will be matched","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * against the keyword to decide whether if they wil be executed.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * \u003cp\u003eIt shall be noted that this","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * iteration may not continue after executing a certain command, depending","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     * on the command\u0027s return value upon execution.\u003c/p\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    private final Map\u003cString, IdentifiedCommandable\u003e identifiedExecutables;","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     * The list of disposables that will be disposed when this object is","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * disposed. This can be used to do some bookkeeping such as saving the","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     * data to the disk.","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    private final List\u003cDisposable\u003e disposables \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * The writer to which the error messages will be written.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    private final Writable errorWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * Instantiates a new TokensManager.","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     * @param preCommandables       the executables to be executed first in an","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     *                              iteration.","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"     * @param postCommandables      the executables to be executed last in an","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     *                              iteration.","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     * @param identifiedExecutables the commands to be executed in the middle in","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     *                              an iteration, with a mapping from tokens to","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     *                              the commands themselves.","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     * @param errorWriter           the writer to which the error messages shall","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     *                              be written.","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    public NestedCommandableObject(","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"            ArrayList\u003cCommandable\u003e preCommandables,","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"            ArrayList\u003cCommandable\u003e postCommandables,","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"            HashMap\u003cString, IdentifiedCommandable\u003e identifiedExecutables,","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"            Writable errorWriter","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        this.preCommandables \u003d preCommandables;","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        this.postCommandables \u003d postCommandables;","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        this.identifiedExecutables \u003d identifiedExecutables;","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        this.errorWriter \u003d errorWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     * Instantiates a new TokensManager with all the values defaulting to empty","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     * collections.","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"     * @param errorWriter the writer to which the error messages shall be","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"     *                    written.","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"    public NestedCommandableObject(Writable errorWriter) {","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        this(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new HashMap\u003c\u003e(),","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"                errorWriter);","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     * Registers a commandable to be executed before the tokened commands.","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"     * @param commandable the commandable to be put into the preCommand loop.","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    public void registerPreExecutable(Commandable commandable) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"        this.preCommandables.add(commandable);","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"     * Registers a commandable to be exe","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"     * @param commandable the commandable to be put into the postCommand loop.","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"    public void registerPostExecutable(Commandable commandable) {","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        this.postCommandables.add(commandable);","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"     * Registers a keyword executable. A keyword executable is a KeywordCommand that","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"     * will be activated if the line inputted has the keyword corresponding","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"     * to that executable.","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"     * @param executable the executable to be put into the keyword executable loop.","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"    public void registerIdentifiableExecutable(IdentifiedCommandable executable) {","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"        final String key \u003d executable.getId();","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"        identifiedExecutables.put(key, executable);","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"     * Runs a list of commandables.","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"     * @param commandables the list of commandables to be run.","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"     * @param tokens       the array of tokens to be passed to the list of commandables","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"     *                     as argument.","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"     * @return the ExitStatus of executing the commandables.","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"    private ExitStatus runExecutablesList(List\u003cCommandable\u003e commandables,","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"                                          String[] tokens) {","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"        ExitStatus status \u003d ExitStatus.continueExecute;","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"        for (Commandable commandable : commandables) {","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"            status \u003d commandable.execute(tokens);","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"            if (status !\u003d ExitStatus.continueExecute) {","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"                return status;","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"        return status;","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"     * Registers a disposable to be disposed when this object is disposed.","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"     * @param disposable the disposable to be registered.","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"    public void registerDisposable(Disposable disposable) {","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"        disposables.add(disposable);","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"    public ExitStatus execute(String[] tokens) {","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"        ExitStatus status \u003d runExecutablesList(preCommandables, tokens);","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        if (status !\u003d ExitStatus.continueExecute) {","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"            return status;","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"        if (!identifiedExecutables.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"            final Commandable commandable \u003d identifiedExecutables.get(tokens[0]);","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"            if (commandable !\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"                final String[] newTokens \u003d","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"                        Singletons.get(TokenUtilities.class).removeFirst(tokens);","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"                status \u003d commandable.execute(newTokens);","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"                if (status !\u003d ExitStatus.continueExecute) {","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"                    return status;","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"        return runExecutablesList(postCommandables, tokens);","lastModifiedDate":"2023-01-27"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"    public void dispose() {","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"        for (Disposable disposable : disposables) {","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"                disposable.dispose();","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"            } catch (DisposableException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"                errorWriter.write(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":180}},{"path":"src/main/java/domain/entities/core/Serializable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.core;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * Interface for data that can be serialized.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public interface Serializable {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Serializes the data.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * @return the serialized String representation of the data.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    String serialize();","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":13}},{"path":"src/main/java/domain/entities/core/StringReadable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.core;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The interface for things that can be read from. This can be used to wrap","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" * around files, System.in, etc.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"public interface StringReadable {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     * Read the next line from the interface. Will employ a blocking read.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     * @return the next line from the interface.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    String nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * Check if there is a next line to be read.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * @return true if there is a next line to be read, false otherwise.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    boolean hasNextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":21}},{"path":"src/main/java/domain/entities/core/ThrowingWritable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.core;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.WriteException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * An interface wrapping around things that can be written to. This interface","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * can throw exceptions.","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"public interface ThrowingWritable {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     * Write the content to the interface. This will not add a new line to the","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * method. The content\u0027s toString method will be called.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * @param content the content to be written to the interface.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * @throws WriteException if the content could not be written to the","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     *                        interface.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    void write(Object content) throws WriteException;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * Write the content to the interface. This will add a new line to the","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * method. The content\u0027s toString method will be called.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * @param content the content to be written to the interface.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * @throws WriteException if the content could not be written to the","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     *                        interface.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    void writeln(Object content) throws WriteException;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * Clear the interface.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * @throws WriteException if the interface could not be cleared.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    void clear() throws WriteException;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":36}},{"path":"src/main/java/domain/entities/core/Writable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.core;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The interface that represents a target object that can be written to.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * If throwing exception can happen during the writing process, please use the","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * {@link ThrowingWritable} interface instead.","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"public interface Writable extends ThrowingWritable {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     * Writes a line of content to the target object.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     * @param content the content to be written.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    void writeln(Object content);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * Writes a line of content to the target object.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * @param content the content to be written to the interface.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    void write(Object content);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * Clears the target object, i.e. removes all content from it.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    void clear();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"wxxedu":31}},{"path":"src/main/java/domain/entities/taskmanager/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.taskmanager;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import core.singletons.Singletons;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import core.utils.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import core.utils.TokenUtilities;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * A Deadline is a Task with a deadline.","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * The key used for retrieving the deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    private static final String deadlineKey \u003d \"/by\";","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * The set of keys for retrieving the data.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    private static final Set\u003cString\u003e delims \u003d Set.of(deadlineKey,","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"            Task.COMPLETE_KEY);","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * The deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * \u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * Creates a new Deadline object from the tokens.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @param tokens The keywords after which we retrieve the important","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     *               information.","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     * @throws InvalidArgumentException for a deadline object to be valid,","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     *                                  its name must not be null, and it must have a deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    public Deadline(String[] tokens) throws InvalidArgumentException {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        super(tokens, delims);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        final Pair\u003cString, Map\u003cString, String\u003e\u003e tmp \u003d","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"                Singletons.get(TokenUtilities.class).joinTokens(tokens, delims);","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        if (tmp.getRight().get(deadlineKey) \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidArgumentException(\"☹ OOPS, did you forgot to \"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"                    + \"type \" + deadlineKey + \" for your deadline?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"            this.deadline \u003d","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"                    LocalDate.parse(tmp.getRight().get(deadlineKey));","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidArgumentException(\"☹ OOPS, the deadline you typed \"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"                    + \"is not in the correct format. Please type it in the \"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"                    + \"format of yyyy-mm-dd\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    public boolean containsDate(LocalDate date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        return deadline.equals(date);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    public String serialize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"        return \"deadline \" + super.serialize() + \" \" + deadlineKey + \" \"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"                + deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        final DateTimeFormatter formatter \u003d Singletons.get(DateTimeFormatter.class);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(formatter)","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"                + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"    public int compareTo(Task o) {","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        final int res \u003d super.compareTo(o);","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        if (res !\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"            return res;","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        if (o instanceof Event) {","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"            return 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        } else if (o instanceof ToDo) {","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"            return -1;","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        final Deadline ddl \u003d (Deadline) o;","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        if (this.deadline.isBefore(ddl.deadline)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"            return -1;","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        } else if (this.deadline.isEqual(ddl.deadline)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"            return this.name.compareTo(ddl.name);","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"            return 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":97}},{"path":"src/main/java/domain/entities/taskmanager/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.taskmanager;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import core.singletons.Singletons;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import core.utils.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import core.utils.TokenUtilities;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * An Event is a Task with a starting time and a ending time.","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * The token for getting the start time.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    private static final String startAtKey \u003d \"/from\";","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * The token for getting the end time.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    private static final String endAtKey \u003d \"/to\";","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * The set for retrieval of the values from the Token Utils","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    private static final Set\u003cString\u003e delims \u003d Set.of(startAtKey, endAtKey,","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"            Task.COMPLETE_KEY);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    private final LocalDate startAt;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    private final LocalDate endAt;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * Creates a new Event object from the tokens.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @param tokens The keywords after which we retrieve the important","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     *               information.","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * @throws InvalidArgumentException for an event object to be valid,","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     *                                  its name must not be null, and it must","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     *                                  have a starting time and an ending time.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    public Event(String[] tokens) throws InvalidArgumentException {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        super(tokens, delims);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        final Pair\u003cString, Map\u003cString, String\u003e\u003e tmp \u003d","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"                Singletons.get(TokenUtilities.class).joinTokens(tokens, delims);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        if (tmp.getLeft().isBlank()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidArgumentException(\"☹ OOPS, the name for an \"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"                    + \"event \" + \"should not be null\", tokens);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        } else if (tmp.getRight().get(startAtKey) \u003d\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidArgumentException(\"☹ OOPS, did you forgot to \"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"                    + \"type \" + startAtKey + \" for your event?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        } else if (tmp.getRight().get(endAtKey) \u003d\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidArgumentException(\"☹ OOPS, did you forgot to \"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"                    + \"type \" + endAtKey + \" for your event?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"            startAt \u003d LocalDate.parse(tmp.getRight().get(startAtKey));","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"            endAt \u003d LocalDate.parse(tmp.getRight().get(endAtKey));","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidArgumentException(\"☹ OOPS, the date format for \"","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"                    + \"your event is wrong. Please use yyyy-mm-dd\", tokens);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    public boolean containsDate(LocalDate date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        return date.isAfter(startAt) \u0026\u0026 date.isBefore(endAt);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    public String serialize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        return \"event \" + super.serialize() + \" \" + startAtKey + \" \"","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"                + startAt + \" \" + endAtKey + \" \" + endAt;","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        final DateTimeFormatter formatter \u003d","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"                Singletons.get(DateTimeFormatter.class);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startAt.format(formatter)","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"                + \" to: \" + endAt.format(formatter) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"    public int compareTo(Task o) {","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        final int res \u003d super.compareTo(o);","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        if (res !\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"            return res;","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        // Events should be placed first in the list","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"            return -1;","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"        final Event event \u003d (Event) o;","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"        // We sort primarily by their time. If their time is the same, then","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"        // we consider the name.","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"        if (this.startAt.isBefore(event.startAt)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"            return -1;","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        } else if (this.startAt.isEqual(event.startAt)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"            return this.name.compareTo(event.name);","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"            return 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":106}},{"path":"src/main/java/domain/entities/taskmanager/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.taskmanager;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import core.singletons.Singletons;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import core.utils.Pair;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import core.utils.TokenUtilities;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Serializable;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" * This shall resemble a Task. The reason that no modifiers was added was","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * because this class shall be package private.","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"public abstract class Task implements Serializable, Comparable\u003cTask\u003e {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * The key for identifying if the object is marked as complete or not.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    protected static final String COMPLETE_KEY \u003d \"/complete\";","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    protected static final String completeKey \u003d \"/complete\";","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * The name of the list item.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * It is set to final now as we do not allow the change of names for now.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    protected final String name;","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * If the object is complete or not.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    protected boolean isComplete;","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * Creates a new task with the given tokens.","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * @param tokens the list of String to be processed.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     * @param delims the keywords after which we retrieve relevant data.","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * @throws InvalidArgumentException if the name is null.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    public Task(String[] tokens, Set\u003cString\u003e delims) throws InvalidArgumentException {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        final Pair\u003cString, Map\u003cString, String\u003e\u003e tmp \u003d","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"                Singletons.get(TokenUtilities.class).joinTokens(tokens, delims);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        if (tmp.getLeft().isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidArgumentException(\"☹ OOPS, the name for a task \"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"                    + \"should not be null\", tokens);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        this.name \u003d tmp.getLeft();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        if (tmp.getRight().get(COMPLETE_KEY) !\u003d null) {","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"            this.isComplete \u003d tmp.getRight().get(COMPLETE_KEY).equals(\"true\");","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"            this.isComplete \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     * Sets the isComplete to complete.","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     * @param complete the value to set the isComplete to.","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    public void setComplete(boolean complete) {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        isComplete \u003d complete;","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"     * Toggles the isComplete value, i.e. if it were true, then set it to false;","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"     * if it were false, then set it to true.","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    public void toggleIsComplete() {","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        isComplete \u003d !isComplete;","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     * If the task contains the given date, i.e. if the task is a deadline,","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"     * then if the deadline is the same as the given date. If the task is an","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     * event, then if the event contains the given date.","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"     * @param date the date to be checked.","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"     * @return true if the task contains the date, false otherwise.","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"    public boolean containsDate(LocalDate date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     * Whether if the name of the task contains the given str.","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     * @param str the str to be checked.","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"     * @return true if the name contains the str, false otherwise.","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"    public boolean nameContains(String str) {","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        return this.name.contains(str);","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"    public String serialize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        if (isComplete) {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"            return name + \" \" + COMPLETE_KEY + \" true\";","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"            return name;","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"        String prefix;","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        if (isComplete) {","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"            prefix \u003d \"[x] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"            prefix \u003d \"[ ] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        return prefix + name;","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"     * Note: this class has a natural ordering that\u0027s different from the equals.","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"     * @param o the object to be compared.","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"     * @return 1 if this thing is completed and other is not; -1 if this","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"     *         thing is not completed but other is; 0 if both are completed or not","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"     *         completed.","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"    public int compareTo(Task o) {","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"        // If this thing has been completed but the other has not, then we","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"        // put this after than the other.","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"        if (o.isComplete \u0026\u0026 !this.isComplete) {","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"            return 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        } else if (this.isComplete \u0026\u0026 !o.isComplete) {","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"            return -1;","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"        return 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":136}},{"path":"src/main/java/domain/entities/taskmanager/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.entities.taskmanager;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * A {@link ToDo} is just a very boring task.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * Creates a new {@link ToDo} object from the tokens.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * @param tokens The keywords after which we retrieve the important","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     *               information.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * @throws InvalidArgumentException for a {@link ToDo} object to be","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     *                                  valid, it has to have a name.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    public ToDo(String[] tokens) throws InvalidArgumentException {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        super(tokens, Set.of(Task.COMPLETE_KEY));","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public String serialize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        return \"todo \" + super.serialize();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    public int compareTo(Task o) {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        final int res \u003d super.compareTo(o);","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        if (res !\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"            return res;","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        // Todos should be placed last","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        if (!(o instanceof ToDo)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"            return 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        // for todos, we sort them by their name.","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        return this.name.compareTo(o.name);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":46}},{"path":"src/main/java/domain/usecases/ByeUsecase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.usecases;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.CommandRegisterable;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.ExitStatus;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.IdentifiedCommandable;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.NestedCommandableObject;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * A {@link ByeUsecase} is a usecase that would terminate the program. It can","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * be triggered when the user types in \"bye\".","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"public class ByeUsecase implements IdentifiedCommandable, CommandRegisterable {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * The destination that this ByeUsecase would write its content to.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    private final Writable writable;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * Creates a new Bye Usecase.","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * @param writable the destination that this ByeUsecase would write its","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     *                 content to.","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    public ByeUsecase(Writable writable) {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        this.writable \u003d writable;","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    public ExitStatus execute(String[] tokens) {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"        writable.writeln(\"Bye! See you next time:-)\");","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        return ExitStatus.terminate;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    public String getId() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        return \"bye\";","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    public void register(NestedCommandableObject nestable) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        nestable.registerIdentifiableExecutable(this);","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":44}},{"path":"src/main/java/domain/usecases/EchoUsecase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.usecases;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.CommandRegisterable;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Commandable;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.ExitStatus;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.NestedCommandableObject;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * A {@link EchoUsecase} is a usecase that would echo the tokens that it","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * receives.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"public class EchoUsecase implements Commandable, CommandRegisterable {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * The writable that this usecase writes to.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    private final Writable writable;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * Creates a new EchoUsecase.","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * @param writable the writable that this EchoUsecase writes to.","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public EchoUsecase(Writable writable) {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        this.writable \u003d writable;","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public ExitStatus execute(String[] tokens) {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        assert (tokens.length \u003e 0) : \"The tokens should not be empty.\";","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"        writable.writeln(String.join(\" \", tokens));","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        // after this, we would want it to skip the current execution loop.","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    public void register(NestedCommandableObject nestable) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        nestable.registerPostExecutable(this);","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":40}},{"path":"src/main/java/domain/usecases/TaskManagerUsecase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.usecases;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.WriteException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import core.utils.fp.ThrowingFunction;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import domain.entities.DataSaver;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.CommandRegisterable;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Disposable;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.ExitStatus;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.IdentifiedCommandable;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.NestedCommandableObject;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import domain.entities.taskmanager.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import domain.entities.taskmanager.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import domain.entities.taskmanager.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import domain.entities.taskmanager.ToDo;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":" * A {@link TaskManagerUsecase} is an usecase that manages a list of","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":" * {@link Task}s. It provides many anonymous classes that can be registered","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":" * to a {@link NestedCommandableObject}. These anonymous classes will be","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":" * used to execute the commands.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":" * To register the anonymous classes, use the register method.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"public class TaskManagerUsecase implements CommandRegisterable {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * The data saver","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    private final DataSaver dataSaver;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * The list of tasks that this manager contains.","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * The writable for writing errors.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    private Writable errorWritable;","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     * The writable that this manager writes to.","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    private Writable writable;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * Creates a new TaskManagerUsecase with the todos set to items.","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     * @param items     the todos that this TaskManagerUsecase starts with.","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * @param writable  the writable that this manager writes to.","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * @param dataSaver the data saver to save the data.","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    public TaskManagerUsecase(Writable writable, ArrayList\u003cTask\u003e items,","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"                              DataSaver dataSaver, Writable errorWritable) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        this.tasks \u003d items;","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        this.writable \u003d writable;","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        this.dataSaver \u003d dataSaver;","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        this.errorWritable \u003d errorWritable;","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     * Creates a new TaskManagerUsecase with the todos set to empty.","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"     * @param writable  the writable that this manager writes to.","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"     * @param dataSaver the data saver to save the data.","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    public TaskManagerUsecase(Writable writable, Writable errorWritable,","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"                              DataSaver dataSaver) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        this(writable, new ArrayList\u003c\u003e(), dataSaver, errorWritable);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     * Adds a Task to the todoItems.","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     * @param task the Task.","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        Collections.sort(tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     * The executable for adding a Task to this class.","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     * @param taskSupplier the function for creating a task instance.","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"     * @param id           the id of the task instance.","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     * @return the executable for adding a Task to this class.","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"    public IdentifiedCommandable getAddTaskCommand(ThrowingFunction\u003cString[],","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"            Task,","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"            InvalidArgumentException\u003e taskSupplier, String id) {","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"        return new IdentifiedCommandable() {","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"            @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"            public String getId() {","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"                return id;","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"            @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"            public ExitStatus execute(String[] tokens) {","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"                final Task task;","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"                    task \u003d taskSupplier.apply(tokens);","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"                } catch (InvalidArgumentException exception) {","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"                    errorWritable.writeln(exception.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"                    return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"                addTask(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"                writable.writeln(\"added: \" + task);","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"                return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        };","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"     * Gets the executable for listing TodoItems.","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"     * @return the executable for listing all the TodoItems.","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"    public IdentifiedCommandable getListTodoCommand() {","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        return new IdentifiedCommandable() {","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"            @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"            public String getId() {","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"                return \"list\";","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"            @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"            public ExitStatus execute(String[] tokens) {","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"                Collections.sort(tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"                    writable.writeln((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"                return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"        };","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"     * Gets a index number from the index string.","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"     * @param indexStr the string from which the index number is get.","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"     * @return the index as an int.","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"     * @throws InvalidArgumentException the exception whose value should be","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"     *                                  displayed.","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"    private int getIndex(String indexStr) throws InvalidArgumentException {","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"        final int index;","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"        if (indexStr.isBlank()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidArgumentException(\"☹ OOPS, please input a \"","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"                    + \"number!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"            index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidArgumentException(\"☹ OOPS, please input a \"","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"                    + \"number!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"        if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidArgumentException(\"☹ OOPS, please input a number\"","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"                    + \" that is within range!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"        return index;","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"     * Gets the executable that will mark an item\u0027s isComplete as isComplete.","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"     * @param id         the id for the marker executable.","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"     * @param isComplete whether if the marker executable will mark item as","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"     *                   complete or not.","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"     * @return the executable that will mark an item\u0027s isComplete.","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"    public IdentifiedCommandable getMarkerExecutable(boolean isComplete,","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"                                                     String id) {","lastModifiedDate":"2023-01-20"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"        return new IdentifiedCommandable() {","lastModifiedDate":"2023-01-27"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"            @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"            public ExitStatus execute(String[] tokens) {","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"                if (tokens.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"                    errorWritable.writeln(\"☹ OOPS, please input a number!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"                    return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-02-17"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"                final String indexStr \u003d tokens[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"                final int index;","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"                    index \u003d getIndex(indexStr);","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"                } catch (InvalidArgumentException exception) {","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"                    errorWritable.writeln(exception.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"                    return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"                final Task item \u003d tasks.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"wxxedu"},"content":"                item.setComplete(isComplete);","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"                writable.writeln(\"Nice, I\u0027ve marked this item as \"","lastModifiedDate":"2023-02-12"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"                        + (isComplete ? \"done\" : \"not done\") + \":\");","lastModifiedDate":"2023-02-12"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"                writable.writeln(\"\\t\" + item);","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"                return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-01-19"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"            @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"            public String getId() {","lastModifiedDate":"2023-01-19"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"                return id;","lastModifiedDate":"2023-01-19"},{"lineNumber":203,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"        };","lastModifiedDate":"2023-01-19"},{"lineNumber":205,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":207,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":208,"author":{"gitId":"wxxedu"},"content":"     * Gets the executable for deleting a TodoItem.","lastModifiedDate":"2023-01-26"},{"lineNumber":209,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"     * @return the executable for deleting a TodoItem.","lastModifiedDate":"2023-01-26"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"    public IdentifiedCommandable getDeleteExecutable() {","lastModifiedDate":"2023-01-27"},{"lineNumber":213,"author":{"gitId":"wxxedu"},"content":"        return new IdentifiedCommandable() {","lastModifiedDate":"2023-01-27"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"            @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"            public ExitStatus execute(String[] tokens) {","lastModifiedDate":"2023-01-19"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"                final String indexStr \u003d tokens[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"                final int index;","lastModifiedDate":"2023-01-19"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":219,"author":{"gitId":"wxxedu"},"content":"                    index \u003d getIndex(indexStr);","lastModifiedDate":"2023-01-19"},{"lineNumber":220,"author":{"gitId":"wxxedu"},"content":"                } catch (InvalidArgumentException exception) {","lastModifiedDate":"2023-01-19"},{"lineNumber":221,"author":{"gitId":"wxxedu"},"content":"                    writable.writeln(exception.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"                    return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-01-19"},{"lineNumber":223,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":224,"author":{"gitId":"wxxedu"},"content":"                final Task res \u003d tasks.remove(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":225,"author":{"gitId":"wxxedu"},"content":"                writable.writeln(\"removed: \" + res);","lastModifiedDate":"2023-01-20"},{"lineNumber":226,"author":{"gitId":"wxxedu"},"content":"                return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-01-19"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"            @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"            public String getId() {","lastModifiedDate":"2023-01-19"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"                return \"delete\";","lastModifiedDate":"2023-01-19"},{"lineNumber":232,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"        };","lastModifiedDate":"2023-01-19"},{"lineNumber":234,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":235,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":236,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":237,"author":{"gitId":"wxxedu"},"content":"     * Gets the executable for listing all the tasks that contains a date.","lastModifiedDate":"2023-01-27"},{"lineNumber":238,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":239,"author":{"gitId":"wxxedu"},"content":"     * @return the executable for listing all the tasks that contains a date.","lastModifiedDate":"2023-01-27"},{"lineNumber":240,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":241,"author":{"gitId":"wxxedu"},"content":"    IdentifiedCommandable getListWhenCommand() {","lastModifiedDate":"2023-01-27"},{"lineNumber":242,"author":{"gitId":"wxxedu"},"content":"        return new IdentifiedCommandable() {","lastModifiedDate":"2023-01-27"},{"lineNumber":243,"author":{"gitId":"wxxedu"},"content":"            @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":244,"author":{"gitId":"wxxedu"},"content":"            public ExitStatus execute(String[] tokens) {","lastModifiedDate":"2023-01-26"},{"lineNumber":245,"author":{"gitId":"wxxedu"},"content":"                final String dateStr \u003d tokens[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":246,"author":{"gitId":"wxxedu"},"content":"                final LocalDate date;","lastModifiedDate":"2023-01-26"},{"lineNumber":247,"author":{"gitId":"wxxedu"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":248,"author":{"gitId":"wxxedu"},"content":"                    date \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2023-01-26"},{"lineNumber":249,"author":{"gitId":"wxxedu"},"content":"                } catch (DateTimeParseException exception) {","lastModifiedDate":"2023-01-26"},{"lineNumber":250,"author":{"gitId":"wxxedu"},"content":"                    writable.writeln(\"☹ OOPS, please input a date \"","lastModifiedDate":"2023-01-26"},{"lineNumber":251,"author":{"gitId":"wxxedu"},"content":"                            + \"in the format yyyy-mm-dd!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":252,"author":{"gitId":"wxxedu"},"content":"                    return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-01-26"},{"lineNumber":253,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":254,"author":{"gitId":"wxxedu"},"content":"                boolean hasDate \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":255,"author":{"gitId":"wxxedu"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":256,"author":{"gitId":"wxxedu"},"content":"                    final Task task \u003d tasks.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":257,"author":{"gitId":"wxxedu"},"content":"                    if (task.containsDate(date)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":258,"author":{"gitId":"wxxedu"},"content":"                        writable.writeln((i + 1) + \". \" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":259,"author":{"gitId":"wxxedu"},"content":"                        hasDate \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":260,"author":{"gitId":"wxxedu"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":261,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":262,"author":{"gitId":"wxxedu"},"content":"                if (!hasDate) {","lastModifiedDate":"2023-01-26"},{"lineNumber":263,"author":{"gitId":"wxxedu"},"content":"                    writable.writeln(\"No tasks found on \" + dateStr);","lastModifiedDate":"2023-01-26"},{"lineNumber":264,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":265,"author":{"gitId":"wxxedu"},"content":"                return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-01-26"},{"lineNumber":266,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":267,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":268,"author":{"gitId":"wxxedu"},"content":"            @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":269,"author":{"gitId":"wxxedu"},"content":"            public String getId() {","lastModifiedDate":"2023-01-26"},{"lineNumber":270,"author":{"gitId":"wxxedu"},"content":"                return \"listwhen\";","lastModifiedDate":"2023-01-26"},{"lineNumber":271,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":272,"author":{"gitId":"wxxedu"},"content":"        };","lastModifiedDate":"2023-01-26"},{"lineNumber":273,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":274,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":275,"author":{"gitId":"wxxedu"},"content":"    IdentifiedCommandable getFindCommand() {","lastModifiedDate":"2023-01-27"},{"lineNumber":276,"author":{"gitId":"wxxedu"},"content":"        return new IdentifiedCommandable() {","lastModifiedDate":"2023-01-27"},{"lineNumber":277,"author":{"gitId":"wxxedu"},"content":"            @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":278,"author":{"gitId":"wxxedu"},"content":"            public ExitStatus execute(String[] tokens) {","lastModifiedDate":"2023-01-27"},{"lineNumber":279,"author":{"gitId":"wxxedu"},"content":"                final String keyword \u003d String.join(\" \", tokens);","lastModifiedDate":"2023-01-27"},{"lineNumber":280,"author":{"gitId":"wxxedu"},"content":"                boolean hasKeyword \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":281,"author":{"gitId":"wxxedu"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":282,"author":{"gitId":"wxxedu"},"content":"                    final Task task \u003d tasks.get(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":283,"author":{"gitId":"wxxedu"},"content":"                    if (task.nameContains(keyword)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":284,"author":{"gitId":"wxxedu"},"content":"                        writable.writeln((i + 1) + \". \" + task);","lastModifiedDate":"2023-01-27"},{"lineNumber":285,"author":{"gitId":"wxxedu"},"content":"                        hasKeyword \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":286,"author":{"gitId":"wxxedu"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":287,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":288,"author":{"gitId":"wxxedu"},"content":"                if (!hasKeyword) {","lastModifiedDate":"2023-01-27"},{"lineNumber":289,"author":{"gitId":"wxxedu"},"content":"                    writable.writeln(\"No tasks found with keyword \" + keyword);","lastModifiedDate":"2023-01-27"},{"lineNumber":290,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":291,"author":{"gitId":"wxxedu"},"content":"                return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-01-27"},{"lineNumber":292,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":293,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":294,"author":{"gitId":"wxxedu"},"content":"            @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":295,"author":{"gitId":"wxxedu"},"content":"            public String getId() {","lastModifiedDate":"2023-01-27"},{"lineNumber":296,"author":{"gitId":"wxxedu"},"content":"                return \"find\";","lastModifiedDate":"2023-01-27"},{"lineNumber":297,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":298,"author":{"gitId":"wxxedu"},"content":"        };","lastModifiedDate":"2023-01-27"},{"lineNumber":299,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":300,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":301,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":302,"author":{"gitId":"wxxedu"},"content":"     * Gets the disposable for disposing this class.","lastModifiedDate":"2023-01-26"},{"lineNumber":303,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":304,"author":{"gitId":"wxxedu"},"content":"     * @return the disposable for disposing this class.","lastModifiedDate":"2023-01-26"},{"lineNumber":305,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":306,"author":{"gitId":"wxxedu"},"content":"    public Disposable getDisposable() {","lastModifiedDate":"2023-01-27"},{"lineNumber":307,"author":{"gitId":"wxxedu"},"content":"        return () -\u003e {","lastModifiedDate":"2023-01-26"},{"lineNumber":308,"author":{"gitId":"wxxedu"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":309,"author":{"gitId":"wxxedu"},"content":"                dataSaver.clear();","lastModifiedDate":"2023-01-26"},{"lineNumber":310,"author":{"gitId":"wxxedu"},"content":"            } catch (WriteException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":311,"author":{"gitId":"wxxedu"},"content":"                errorWritable.writeln(\"Error while clearing data\"","lastModifiedDate":"2023-01-26"},{"lineNumber":312,"author":{"gitId":"wxxedu"},"content":"                        + \" saver: \" + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":313,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":314,"author":{"gitId":"wxxedu"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":315,"author":{"gitId":"wxxedu"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":316,"author":{"gitId":"wxxedu"},"content":"                    dataSaver.writeln(task.serialize());","lastModifiedDate":"2023-01-26"},{"lineNumber":317,"author":{"gitId":"wxxedu"},"content":"                } catch (WriteException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":318,"author":{"gitId":"wxxedu"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":319,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":320,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":321,"author":{"gitId":"wxxedu"},"content":"            dataSaver.dispose();","lastModifiedDate":"2023-01-26"},{"lineNumber":322,"author":{"gitId":"wxxedu"},"content":"        };","lastModifiedDate":"2023-01-26"},{"lineNumber":323,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":324,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":325,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":326,"author":{"gitId":"wxxedu"},"content":"    public void register(NestedCommandableObject nestable) {","lastModifiedDate":"2023-01-27"},{"lineNumber":327,"author":{"gitId":"wxxedu"},"content":"        registerReader(nestable);","lastModifiedDate":"2023-01-26"},{"lineNumber":328,"author":{"gitId":"wxxedu"},"content":"        nestable.registerIdentifiableExecutable(getListTodoCommand());","lastModifiedDate":"2023-01-27"},{"lineNumber":329,"author":{"gitId":"wxxedu"},"content":"        nestable.registerIdentifiableExecutable(","lastModifiedDate":"2023-01-19"},{"lineNumber":330,"author":{"gitId":"wxxedu"},"content":"                getMarkerExecutable(true, \"mark\")","lastModifiedDate":"2023-01-19"},{"lineNumber":331,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":332,"author":{"gitId":"wxxedu"},"content":"        nestable.registerIdentifiableExecutable(","lastModifiedDate":"2023-01-19"},{"lineNumber":333,"author":{"gitId":"wxxedu"},"content":"                getMarkerExecutable(false, \"unmark\")","lastModifiedDate":"2023-01-19"},{"lineNumber":334,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":335,"author":{"gitId":"wxxedu"},"content":"        nestable.registerIdentifiableExecutable(getDeleteExecutable());","lastModifiedDate":"2023-01-19"},{"lineNumber":336,"author":{"gitId":"wxxedu"},"content":"        nestable.registerDisposable(getDisposable());","lastModifiedDate":"2023-01-26"},{"lineNumber":337,"author":{"gitId":"wxxedu"},"content":"        nestable.registerIdentifiableExecutable(getFindCommand());","lastModifiedDate":"2023-02-17"},{"lineNumber":338,"author":{"gitId":"wxxedu"},"content":"        nestable.registerIdentifiableExecutable(getListWhenCommand());","lastModifiedDate":"2023-01-27"},{"lineNumber":339,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":340,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":341,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":342,"author":{"gitId":"wxxedu"},"content":"     * Registers the readers for this class to the given nestable.","lastModifiedDate":"2023-01-26"},{"lineNumber":343,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":344,"author":{"gitId":"wxxedu"},"content":"     * @param nestable the nestable for executing the readers.","lastModifiedDate":"2023-01-26"},{"lineNumber":345,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":346,"author":{"gitId":"wxxedu"},"content":"    public void registerReader(NestedCommandableObject nestable) {","lastModifiedDate":"2023-01-27"},{"lineNumber":347,"author":{"gitId":"wxxedu"},"content":"        nestable.registerIdentifiableExecutable(getAddTaskCommand(","lastModifiedDate":"2023-01-27"},{"lineNumber":348,"author":{"gitId":"wxxedu"},"content":"                ToDo::new,","lastModifiedDate":"2023-01-26"},{"lineNumber":349,"author":{"gitId":"wxxedu"},"content":"                \"todo\"","lastModifiedDate":"2023-01-26"},{"lineNumber":350,"author":{"gitId":"wxxedu"},"content":"        ));","lastModifiedDate":"2023-01-26"},{"lineNumber":351,"author":{"gitId":"wxxedu"},"content":"        nestable.registerIdentifiableExecutable(getAddTaskCommand(","lastModifiedDate":"2023-01-27"},{"lineNumber":352,"author":{"gitId":"wxxedu"},"content":"                Deadline::new,","lastModifiedDate":"2023-01-26"},{"lineNumber":353,"author":{"gitId":"wxxedu"},"content":"                \"deadline\"","lastModifiedDate":"2023-01-26"},{"lineNumber":354,"author":{"gitId":"wxxedu"},"content":"        ));","lastModifiedDate":"2023-01-26"},{"lineNumber":355,"author":{"gitId":"wxxedu"},"content":"        nestable.registerIdentifiableExecutable(getAddTaskCommand(","lastModifiedDate":"2023-01-27"},{"lineNumber":356,"author":{"gitId":"wxxedu"},"content":"                Event::new,","lastModifiedDate":"2023-01-26"},{"lineNumber":357,"author":{"gitId":"wxxedu"},"content":"                \"event\"","lastModifiedDate":"2023-01-26"},{"lineNumber":358,"author":{"gitId":"wxxedu"},"content":"        ));","lastModifiedDate":"2023-01-26"},{"lineNumber":359,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":360,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":361,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":362,"author":{"gitId":"wxxedu"},"content":"     * Redirects the output of this class to the given writable.","lastModifiedDate":"2023-01-26"},{"lineNumber":363,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":364,"author":{"gitId":"wxxedu"},"content":"     * @param writable the writable for this class.","lastModifiedDate":"2023-01-26"},{"lineNumber":365,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":366,"author":{"gitId":"wxxedu"},"content":"    public void redirectOutput(Writable writable) {","lastModifiedDate":"2023-01-26"},{"lineNumber":367,"author":{"gitId":"wxxedu"},"content":"        this.writable \u003d writable;","lastModifiedDate":"2023-01-26"},{"lineNumber":368,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":369,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":370,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":371,"author":{"gitId":"wxxedu"},"content":"     * Redirects the error output of this class to the given writable.","lastModifiedDate":"2023-01-31"},{"lineNumber":372,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":373,"author":{"gitId":"wxxedu"},"content":"     * @param writable the writable for this class.","lastModifiedDate":"2023-01-31"},{"lineNumber":374,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":375,"author":{"gitId":"wxxedu"},"content":"    public void redirectErrorOutput(Writable writable) {","lastModifiedDate":"2023-01-31"},{"lineNumber":376,"author":{"gitId":"wxxedu"},"content":"        this.errorWritable \u003d writable;","lastModifiedDate":"2023-01-31"},{"lineNumber":377,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":378,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":378}},{"path":"src/main/java/domain/usecases/UnknownCommandUsecase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.usecases;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.CommandRegisterable;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Commandable;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.ExitStatus;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.NestedCommandableObject;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * A {@link UnknownCommandUsecase} is a usecase that would be triggered when","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * the user types in a command that is not recognized by the program.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"public class UnknownCommandUsecase implements Commandable, CommandRegisterable {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * The destination that this UnknownCommandUsecase would write its","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * content. To show the flexibility of this design, you can choose to","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * pass in a {@link presentation.ui.SystemOut} or a","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * {@link presentation.ui.SystemOut} here, and it would write to either","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * system out or system err.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    private final Writable writable;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * Creates a new {@link UnknownCommandUsecase}.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * @param writable the destination that this {@link UnknownCommandUsecase}","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     *                 would write its content to.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public UnknownCommandUsecase(Writable writable) {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        this.writable \u003d writable;","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    public ExitStatus execute(String[] tokens) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        writable.writeln(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that \"","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"                + \"means :-(\");","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        return ExitStatus.finishCurrentIteration;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    public void register(NestedCommandableObject nestable) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        nestable.registerPostExecutable(this);","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":44}},{"path":"src/main/java/presentation/controllers/DukeEventLoop.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package presentation.controllers;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import core.singletons.Singletons;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import domain.entities.DataLoader;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Commandable;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.EventLoop;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.NestedCommandableObject;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.StringReadable;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import domain.usecases.ByeUsecase;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import domain.usecases.TaskManagerUsecase;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import domain.usecases.UnknownCommandUsecase;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import presentation.ui.SystemErr;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import presentation.ui.SystemIn;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" * The event loop for managing Duke.","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":" * To initialize and facilitate reading data from persistence, use the {@link","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":" * #createInitializingLoop()} method.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":" * To create the actual main event loop, use the {@link #createEventLoop(Writable)} ()}","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":" * method.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"public class DukeEventLoop extends EventLoop {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * Creates a {@link DukeEventLoop} instance.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * @param rootCommandable the root executable that this event loop would","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     *                        iterate over and over again.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * @param reader          the reader that this event loop would read from.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * @param errorWriter     the error writer that this event loop would write","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     *                        errors to.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    private DukeEventLoop(Commandable rootCommandable, StringReadable reader,","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"                          Writable errorWriter) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        super(rootCommandable, reader, errorWriter);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * Creates the main event loop for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * @return the main event loop for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    public static DukeEventLoop createEventLoop(Writable target) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        // creates a new system in instance. We want to make sure that","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        // the scanner is not closed for each event loop, because scanners","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        // are managed by the event loops.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        final StringReadable reader \u003d new SystemIn();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        final NestedCommandableObject executable \u003d","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"                new NestedCommandableObject(target);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        final ByeUsecase bye \u003d Singletons.get(ByeUsecase.class);","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        bye.register(executable);","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        final TaskManagerUsecase manager \u003d","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"                Singletons.get(TaskManagerUsecase.class);","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        manager.redirectOutput(target);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        manager.redirectErrorOutput(target);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        manager.register(executable);","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        final UnknownCommandUsecase unknown \u003d","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"                Singletons.get(UnknownCommandUsecase.class);","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        unknown.register(executable);","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        return new DukeEventLoop(executable, reader, target);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     * Creates the event loop for initializing Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"     * @return the event loop for initializing Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    public static DukeEventLoop createInitializingLoop() {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        final StringReadable readable \u003d Singletons.get(DataLoader.class);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        final Writable errorWriter \u003d Singletons.get(SystemErr.class);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        final NestedCommandableObject executable \u003d","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"                new NestedCommandableObject(errorWriter);","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        final TaskManagerUsecase manager \u003d","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"                Singletons.get(TaskManagerUsecase.class);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        manager.redirectOutput(Singletons.get(SystemErr.class));","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        manager.registerReader(executable);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        return new DukeEventLoop(executable, readable, errorWriter);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":81}},{"path":"src/main/java/presentation/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package presentation.gui;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":" * A box that shows dialogs.","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"            FXMLLoader fxmlLoader \u003d","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"                    new FXMLLoader(MainWindow.class.getResource(\"/presentation/gui/DialogBox.fxml\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        db.flip();","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        return db;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    private void flip() {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        ObservableList\u003cNode\u003e tmp \u003d","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"                FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"wxxedu":58}},{"path":"src/main/java/presentation/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package presentation.gui;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.ExitStatus;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import presentation.controllers.DukeEventLoop;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * The main window for duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"public class MainWindow extends AnchorPane implements Writable {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    private DukeEventLoop dukeEventLoop;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    public void setDukeEventLoop(DukeEventLoop dukeEventLoop) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        this.dukeEventLoop \u003d dukeEventLoop;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input,","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"                userImage));","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        final ExitStatus result \u003d dukeEventLoop.runWithCommand(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        if (result \u003d\u003d ExitStatus.terminate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"            dukeEventLoop.dispose();","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"            System.exit(0);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    public void writeln(Object content) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(content.toString(), dukeImage));","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"    public void write(Object content) {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        throw new UnsupportedOperationException();","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    public void clear() {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        dialogContainer.getChildren().clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"wxxedu":66}},{"path":"src/main/java/presentation/ui/DummyWritable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package presentation.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * A dummy implementation of the {@link Writable} interface.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"public class DummyWritable implements Writable {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    public void writeln(Object content) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    public void clear() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    public void write(Object content) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":23}},{"path":"src/main/java/presentation/ui/SystemErr.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package presentation.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * The {@link Writable} wrapper for the {@link System#err} object.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"public class SystemErr implements Writable {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    public void write(Object content) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"        System.err.print(content.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    public void clear() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"        System.err.print(\"\\033[H\\033[2J\");","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"        System.err.flush();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    public void writeln(Object content) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"        System.err.println(content.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":24}},{"path":"src/main/java/presentation/ui/SystemIn.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package presentation.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Disposable;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.StringReadable;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * The {@link StringReadable} wrapper for the {@link System#in} object.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"public class SystemIn implements StringReadable, Disposable {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * Creates a new instance of the {@link SystemIn} class.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    public SystemIn() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    public String nextLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    public boolean hasNextLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        return scanner.hasNextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    public void dispose() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        scanner.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"wxxedu":35}},{"path":"src/main/java/presentation/ui/SystemOut.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package presentation.ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * The {@link Writable} wrapper for the {@link System#out} object.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"public class SystemOut implements Writable {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    public void write(Object content) {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"        System.out.print(content.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    public void clear() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"        System.out.print(\"\\033[H\\033[2J\");","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"        System.out.flush();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    public void writeln(Object content) {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"        System.out.println(content.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"wxxedu":24}},{"path":"src/main/resources/presentation/gui/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"                \u003cInsets right\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"72.0\" fitWidth\u003d\"72.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"                \u003cInsets right\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"wxxedu":28}},{"path":"src/main/resources/presentation/gui/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" prefHeight\u003d\"400.0\"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"            prefWidth\u003d\"600.0\"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"            fx:controller\u003d\"presentation.gui.MainWindow\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"                   prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"                   AnchorPane.bottomAnchor\u003d\"8.0\" AnchorPane.leftAnchor\u003d\"8.0\"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"                   AnchorPane.rightAnchor\u003d\"92.0\"/\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"                mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"                AnchorPane.bottomAnchor\u003d\"8.0\" AnchorPane.rightAnchor\u003d\"8.0\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"                \u003cFont name\u003d\"Arial\" size\u003d\"13.0\"/\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"                    hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" vvalue\u003d\"1.0\"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"                    AnchorPane.bottomAnchor\u003d\"58.0\" AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\"/\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"wxxedu":35}},{"path":"src/test/java/domain/usecases/ByeUsecaseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.usecases;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static org.mockito.ArgumentMatchers.anyString;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.ExitStatus;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"public class ByeUsecaseTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    public void execute_invocation_shouldWriteToWriter() {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"        final Writable writer \u003d Mockito.mock(Writable.class);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"        final ByeUsecase usecase \u003d new ByeUsecase(writer);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"        usecase.execute(new String[0]);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(writer, Mockito.times(1)).writeln(anyString());","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public void execute_invocation_shouldReturnTerminate() {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        final Writable writer \u003d Mockito.mock(Writable.class);","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        final ByeUsecase usecase \u003d new ByeUsecase(writer);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"        final ExitStatus status \u003d usecase.execute(new String[0]);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        assert status \u003d\u003d ExitStatus.terminate;","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"wxxedu":30}},{"path":"src/test/java/domain/usecases/EchoUsecaseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.usecases;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"public class EchoUsecaseTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    void execute_invocation_shouldEchoPhrases() {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"        final Writable writer \u003d Mockito.mock(Writable.class);","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"        final EchoUsecase usecase \u003d new EchoUsecase(writer);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"        final String content \u003d \"hello world 123\";","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"        usecase.execute(content.split(\" \"));","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(writer, Mockito.times(1)).writeln(content);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"wxxedu":20}},{"path":"src/test/java/domain/usecases/TaskManagerUsecaseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package domain.usecases;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mock;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import core.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import core.utils.fp.ThrowingFunction;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import domain.entities.DataSaver;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.ExitStatus;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.IdentifiedCommandable;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import domain.entities.core.Writable;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import domain.entities.taskmanager.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"public class TaskManagerUsecaseTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    private Writable writer;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    private DataSaver dataSaver;","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    private Writable errorWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    private TaskManagerUsecase sut;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        sut \u003d new TaskManagerUsecase(writer, tasks, dataSaver, errorWriter);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    void getAddTaskCommand_invocation_shouldReturnCommandableWithCorrectId() {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        final String id \u003d \"add\";","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        final IdentifiedCommandable command \u003d sut.getAddTaskCommand((list) -\u003e Mockito.mock(Task.class), id);","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        assert command.getId().equals(id);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    void getAddTaskCommand_invocation_shouldInvokeTaskSupplier() {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        final String id \u003d \"add\";","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        final String[] tokens \u003d {\"hello\", \"world\"};","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        final ThrowingFunction\u003cString[], Task, InvalidArgumentException\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"                taskSupplier \u003d Mockito.mock(ThrowingFunction.class);","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        final IdentifiedCommandable command \u003d sut.getAddTaskCommand(","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"                taskSupplier, id","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        command.execute(tokens);","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertDoesNotThrow(() -\u003e Mockito.verify(taskSupplier, Mockito.times(1)).apply(tokens));","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    void getAddTaskCommand_invocation_shouldWriteMessageToErrorWriterOnException() throws InvalidArgumentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        final String id \u003d \"add\";","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        final String[] tokens \u003d {\"hello\", \"world\"};","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        final ThrowingFunction\u003cString[], Task, InvalidArgumentException\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"                taskSupplier \u003d Mockito.mock(ThrowingFunction.class);","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        Mockito.doThrow(new InvalidArgumentException(\"Message\")).when(taskSupplier).apply(tokens);","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        final IdentifiedCommandable command \u003d sut.getAddTaskCommand(","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"                taskSupplier, id","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        command.execute(tokens);","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(errorWriter, Mockito.times(1)).writeln(Mockito.anyString());","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    void getAddTaskCommand_invocation_shouldReturnFinishCurrentIterationOnException() throws InvalidArgumentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        final String id \u003d \"add\";","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        final String[] tokens \u003d {\"hello\", \"world\"};","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        final ThrowingFunction\u003cString[], Task, InvalidArgumentException\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"                taskSupplier \u003d Mockito.mock(ThrowingFunction.class);","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        Mockito.doThrow(new InvalidArgumentException(\"Message\")).when(taskSupplier).apply(tokens);","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        final IdentifiedCommandable command \u003d sut.getAddTaskCommand(","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"                taskSupplier, id","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertEquals(ExitStatus.finishCurrentIteration, command.execute(tokens));","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    void getAddTaskCommand_invocation_shouldAddTaskToTasks() {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"        final String id \u003d \"add\";","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"        final String[] tokens \u003d {\"hello\", \"world\"};","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"        final Task task \u003d Mockito.mock(Task.class);","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"        final IdentifiedCommandable command \u003d sut.getAddTaskCommand((list) -\u003e task, id);","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        command.execute(tokens);","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(tasks, Mockito.times(1)).add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"    void getListTodoCommand_invocation_shouldReturnCommandableWithCorrectId() {","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"        final String id \u003d \"list\";","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"        final IdentifiedCommandable command \u003d sut.getListTodoCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertEquals(id, command.getId());","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"    void getListTodoCommand_invocation_shouldWriteTasksToWriter() {","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"        final String id \u003d \"list\";","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"        final int count \u003d 5;","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        final IdentifiedCommandable command \u003d sut.getListTodoCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"        final Task task \u003d Mockito.mock(Task.class);","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(tasks.size()).thenReturn(count);","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(tasks.get(Mockito.anyInt())).thenReturn(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(task.toString()).thenReturn(\"Task\");","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"        command.execute(new String[]{});","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(writer, Mockito.times(count)).writeln(Mockito.anyString());","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"    void getListTodoCommand_invocation_shouldReturnFinishCurrentIteration() {","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"        final String id \u003d \"list\";","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"        final IdentifiedCommandable command \u003d sut.getListTodoCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertEquals(ExitStatus.finishCurrentIteration, command.execute(new String[]{}));","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"    void getFindCommand_invocation_shouldReturnCommandableWithCorrectId() {","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"        final String id \u003d \"find\";","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"        final IdentifiedCommandable command \u003d sut.getFindCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertEquals(id, command.getId());","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"    void getFindCommand_invocation_shouldWriteTasksWhoseNameContainsTheKeywordToWriter() {","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        final String id \u003d \"find\";","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"        final int count \u003d 6;","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"        final String keyword \u003d \"keyword\";","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        final IdentifiedCommandable command \u003d sut.getFindCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"        final Task task1 \u003d Mockito.mock(Task.class);","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"        final Task task2 \u003d Mockito.mock(Task.class);","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(tasks.size()).thenReturn(count);","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(tasks.get(Mockito.intThat(i -\u003e i \u003c count / 2))).thenReturn(task1);","lastModifiedDate":"2023-01-27"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(tasks.get(Mockito.intThat(i -\u003e i \u003e\u003d count / 2))).thenReturn(task2);","lastModifiedDate":"2023-01-27"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(task2.toString()).thenReturn(\"Task2\");","lastModifiedDate":"2023-01-27"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(task1.nameContains(Mockito.anyString())).thenReturn(false);","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(task2.nameContains(Mockito.anyString())).thenReturn(true);","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"        command.execute(new String[]{keyword});","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(writer, Mockito.times(0)).writeln(Mockito.endsWith(\"Task1\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(writer, Mockito.times(count / 2)).writeln(Mockito.endsWith(\"Task2\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"wxxedu":160}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"todo hello","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"deadline CS2103T Week 2 homework /by 23:59 Thursday 19th, Jan","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"event CS2101 Group Meeting /from Wednesday 7PM /to Wednesday 9PM","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"wxxedu":9}}]
