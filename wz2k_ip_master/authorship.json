[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"# TaskBotDuke","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"## Available functionalities","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"+ **create** tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"+ **mark/umark** tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"+ **delete** tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"+ **find** tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"## The following types of tasks are available:","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"1. Todos","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"2. Deadlines","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"3. Events","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"```java","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"todo read book","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"deadline return book /by 2023-05-20","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"event book sale /from 2023-01-30 /to 2023-03-06","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"```","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"\u003e All tasks can be displayed with the list command","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"### Why should you be using TaskBotDuke? :thinking:","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"- [x] *simple and easy* to use","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"- [x] ~~bot~~ human interaction","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"- [x] low disk space requirement","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"- [x] dates are handled by Java\u0027s ```java.time.LocalDate```","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"Releases are available [here](https://github.com/wz2k/ip/releases)","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"wz2k":25,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"checkstyle {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wz2k":21,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"\u003eDuke will remind you at the start if you have any deadlines that are due on the day.","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"## Commands","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"Type your commands into the text box and either click send or press the enter button.","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"### todo","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"Creates a todo task.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"```java","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"### deadline","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"Creates a deadline task.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"```java","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"deadline \u003cdescription\u003e /by \u003cdate\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"```\u003cdate\u003e``` has to follow `YYYY-MM-DD` format.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"### event","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"Creates a event task.","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"```java","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"event \u003cdescription\u003e /from \u003cstart date\u003e /to \u003cend date\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"```\u003cstart date\u003e``` and ```\u003cend date\u003e``` have to follow `YYYY-MM-DD` format.","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"### list","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"List all tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"```java","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"### find","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"Finds tasks using a keyword.","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"```java","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"### mark","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"Marks a task as done.","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"```java","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"mark \u003ctask number\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"```\u003ctask number\u003e``` can be obtained from ```list``` or ```find```","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"### unmark","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"Marks a task as not done.","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"```java","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"unmark \u003ctask number\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"```\u003ctask number\u003e``` can be obtained from ```list``` or ```find```","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"### delete","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"Deletes a task","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"```java","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"delete \u003ctask number\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"```\u003ctask number\u003e``` can be obtained from ```list``` or ```find```","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"### bye","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"Provides information on how to exit the program.","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"```java","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"bye","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"To exit the program, click on the X button in the top right corner.","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"wz2k":54,"-":14}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"    private Label name;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"    private DialogBox(String text, Image img, String name) {","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"        this.name.setText(name);","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"    private void flip() {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"     * Returns a user dialog box with the given image and text.","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"     * @param text User dialog box message.","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"     * @param img User dialog box picture.","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"     * @return User dialog box with image and text.","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"        return new DialogBox(text, img, \"User\");","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"     * Returns a chatbot dialog box with the given image and text.","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"     * @param text Chatbot dialog box message.","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"     * @param img Chatbot dialog box picture.","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"     * @return Chatbot dialog box with image and text.","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"        var db \u003d new DialogBox(text, img, \"Duke\");","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"        db.flip();","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"        return db;","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"wz2k":76}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import duke.command.GetRemindersCommand;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":" * The chatbot that users will be interacting with.","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"    /** The list of task maintained by the chatbot */","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"    /** The chatbot\u0027s storage of the tasks it maintains */","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"     * Creates a chatbot with the specified file path as storage.","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"     * @param filePath File path to store data for tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"        taskList \u003d new TaskList(storage.getTasks());","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"     * Returns the response of the chatbot based on the given input.","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"     * @param input User\u0027s CLI input.","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"     * @return Chatbot\u0027s response.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"            Command command \u003d Parser.parseCommand(input, taskList, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"            command.checkArguments();","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"            return command.execute();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"            String startOfErrorMessage \u003d \"An error has occurred!\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"            return startOfErrorMessage + exception.getMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"     * Reminds users of tasks that are due today.","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"     * @return List of tasks that are due today.","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"    public String getReminders() {","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"        Command getRemindersCommand \u003d new GetRemindersCommand(\"\", taskList);","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"        return getRemindersCommand.execute();","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wz2k":56,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":" * An exception specific to the chatbot.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"     * Creates a duke exception.","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"     * @param message Error message.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"wz2k":17}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":" * The main entry point of the application.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"public class Launcher {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"     * Starts off the chatbot.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"     * @param args Not used.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"wz2k":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"     * Starts the gui for users to interact with the chatbot.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"     * @param stage The primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"            stage.show();","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"            exception.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"wz2k":35}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Henry.png\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Scp.png\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"     * Initializes the window for the gui.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"            scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"            setDuke(new Duke(\"data/duke.txt\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"            String reminders \u003d duke.getReminders();","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"            String welcomeMessage \u003d \"Welcome!\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"                    DialogBox.getDukeDialog(welcomeMessage + reminders, dukeImage)","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"            );","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"            System.out.println(exception.getMessage());","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"     * Sets the chatbot that uses the gui.","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"     * @param d Chatbot.","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"        duke \u003d d;","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"        );","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"wz2k":73}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"import duke.command.CreateDeadlineCommand;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import duke.command.CreateEventCommand;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import duke.command.CreateTodoCommand;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"import duke.command.DeleteTaskCommand;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"import duke.command.EndChatCommand;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"import duke.command.FindTaskWithTextCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"import duke.command.ListTasksCommand;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"import duke.command.MarkTaskCommand;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"import duke.command.UnmarkTaskCommand;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":" * Helps to make sense of the user\u0027s commands.","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"public class Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"     * Returns an instance of the correct command from the user\u0027s input.","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"     * @param taskList List of task maintained by the chatbot.","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"     * @param storage Chatbot\u0027s storage of the tasks it maintains.","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"     * @return Command instance.","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If input is not recognized.","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"    public static Command parseCommand(String input, TaskList taskList, Storage storage)","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"        String type \u003d getType(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"        switch(type) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"            return new CreateTodoCommand(input, taskList, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"            return new CreateDeadlineCommand(input, taskList, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"        case \"event\":","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"            return new CreateEventCommand(input, taskList, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"            return new MarkTaskCommand(input, taskList, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"            return new UnmarkTaskCommand(input, taskList, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"            return new DeleteTaskCommand(input, taskList, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"        case \"list\":","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"            return new ListTasksCommand(input, taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"        case \"find\":","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"            return new FindTaskWithTextCommand(input, taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"            return new EndChatCommand(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"        default:","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(\"Input is not recognized.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"     * Returns the type of command.","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"     * @return Type of command.","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"    public static String getType(String input) {","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"        return input.split(\" \", 2)[0];","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":67}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":" * The task storage of the chatbot.","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"public class Storage {","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"    /** File for storage of tasks */","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"    private File file;","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"    /** Task storage file reader */","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"    private BufferedReader reader;","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"    /** Task storage file writer */","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"    private BufferedWriter writer;","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"     * Creates a storage for tasks at the specified file path.","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"     * @param path Storage file path.","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"    public Storage(String path) throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"        file \u003d new File(path);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"        file.createNewFile();","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"        writer \u003d new BufferedWriter(new FileWriter(path, true));","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"        reader \u003d new BufferedReader(new FileReader(path));","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"     * Returns the list of tasks in the storage.","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"     * @return List of tasks from storage.","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"    public ArrayList\u003cTask\u003e getTasks() throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"            String taskStorageString \u003d reader.readLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"            while (taskStorageString !\u003d null) {","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"                String[] data \u003d taskStorageString.split(\"\\\\|\");","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"                taskList.add(parseTaskData(data));","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"                taskStorageString \u003d reader.readLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"            return taskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"            System.out.println(exception.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"     * Identifies the task type from its storage string.","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"     * @param data Storage string from file.","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"     * @return Task instance.","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If parsing of data fails.","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"wz2k"},"content":"    private Task parseTaskData(String[] data) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"wz2k"},"content":"        switch (data[0]) {","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"wz2k"},"content":"        case \"T\":","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"wz2k"},"content":"            assert data.length \u003d\u003d 3 : \"todo data should have 3 parts\";","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"wz2k"},"content":"            return new Todo(data[2], Boolean.parseBoolean(data[1]));","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"wz2k"},"content":"        case \"D\":","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"wz2k"},"content":"            assert data.length \u003d\u003d 4 : \"deadline data should have 4 parts\";","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"wz2k"},"content":"            return new Deadline(data[2], Boolean.parseBoolean(data[1]), data[3]);","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"wz2k"},"content":"        case \"E\":","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"wz2k"},"content":"            assert data.length \u003d\u003d 5 : \"event data should have 5 parts\";","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"wz2k"},"content":"            return new Event(data[2], Boolean.parseBoolean(data[1]), data[3], data[4]);","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"wz2k"},"content":"        default:","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"wz2k"},"content":"            String exceptionMessage \u003d \"Error parsing storage data.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(exceptionMessage);","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"wz2k"},"content":"     * Writes task details to file to store it.","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"wz2k"},"content":"     * @param task Task to be stored.","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"wz2k"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"wz2k"},"content":"    public void storeTask(Task task) throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"wz2k"},"content":"        writer.write(task.toTaskStorageString());","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"wz2k"},"content":"        writer.newLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"wz2k"},"content":"        writer.flush();","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":107,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"wz2k"},"content":"     * Updates task file storage based on current task list details.","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"wz2k"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"wz2k"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"wz2k"},"content":"    public void restructure(TaskList taskList) throws IOException {","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"wz2k"},"content":"        new FileWriter(file.getPath(), false).close();","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"wz2k"},"content":"        int size \u003d taskList.getSize();","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"wz2k"},"content":"        for (int i \u003d 1; i \u003c\u003d size; i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"wz2k"},"content":"            storeTask(taskList.getTask(i));","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":121,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":122,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"wz2k":122}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":" * Represents a command that the user can input.","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"    /** Full command input by the user */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"    protected String commandMessage;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"     * Creates command based of the specified command message.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"     * @param commandMessage User\u0027s input.","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"    public Command(String commandMessage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"        this.commandMessage \u003d commandMessage;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"     * Performs the command and returns the relevant reply.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"     * @return Taskbot reply to the command.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"    public abstract String execute();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"     * Checks if the input arguments are valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If arguments are not valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"    public abstract void checkArguments() throws DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":36}},{"path":"src/main/java/duke/command/CreateDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":" * Represents a command that creates a deadline task.","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"public class CreateDeadlineCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"    /** The list of task maintained by the chatbot */","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"    /** The chatbot\u0027s storage of the tasks it maintains */","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"     * Creates a command for creating deadlines.","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"     * @param commandMessage User\u0027s input.","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"     * @param storage Task storage.","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"    public CreateDeadlineCommand(String commandMessage, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"        super(commandMessage);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"     * Creates and stores a new deadline task and returns the reply","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"     * for deadline creation.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"     * @return Taskbot reply to the deadline creation.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"    public String execute() {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"            String startOfReply \u003d \"The following task has been added:\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"            Task task \u003d createDeadline();","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"            storage.storeTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"            return startOfReply + \"  \" + task;","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"            String startOfErrorMessage \u003d \"An error has occurred!\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"            return startOfErrorMessage + exception.getMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"     * Creates a deadline.","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"     * @return Deadline created.","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"    public Deadline createDeadline() {","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"        String[] commandMessageArr \u003d commandMessage.split(\"/\", 2);","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"        assert commandMessageArr.length \u003d\u003d 2 : \"deadline command should split into 2\";","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"        return new Deadline(commandMessageArr[0].substring(8).trim(), false,","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"                commandMessageArr[1].substring(2).trim());","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"     * Checks if the input arguments are valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If arguments are not valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"wz2k"},"content":"    public void checkArguments() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"wz2k"},"content":"        String args \u003d commandMessage.substring(8).trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"wz2k"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"wz2k"},"content":"            String emptyArgumentsMessage \u003d \"deadline arguments cannot be empty\";","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(emptyArgumentsMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"wz2k"},"content":"        String[] argsArr \u003d args.split(\"/by\", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"wz2k"},"content":"        if (argsArr.length !\u003d 2 || argsArr[0].length() \u003d\u003d 0 || argsArr[1].length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"wz2k"},"content":"            String invalidFormatMessage \u003d \"deadline format is incorrect\";","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(invalidFormatMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"wz2k"},"content":"        if (argsArr[0].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"wz2k"},"content":"            String emptyDescriptionMessage \u003d \"deadline description cannot be empty\";","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(emptyDescriptionMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"wz2k"},"content":"            LocalDate.parse(argsArr[1].trim());","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"wz2k"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"wz2k"},"content":"            String wrongDateFormatMessage \u003d \"deadline date should be of the format YYYY-MM-DD\";","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(wrongDateFormatMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":104}},{"path":"src/main/java/duke/command/CreateEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":" * Represents a command that creates an event task.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"public class CreateEventCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"    /** The list of task maintained by the chatbot */","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"    /** The chatbot\u0027s storage of the tasks it maintains */","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"     * Creates a command for creating events.","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"     * @param commandMessage User\u0027s input.","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"     * @param storage Task storage.","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"    public CreateEventCommand(String commandMessage, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"        super(commandMessage);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"     * Creates and stores a new event task and returns the reply","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"     * for event creation.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"     * @return Taskbot reply to the event creation.","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"    public String execute() {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"            String startOfReply \u003d \"The following task has been added:\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"            Task task \u003d createEvent();","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"            storage.storeTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"            return startOfReply + \"  \" + task;","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"            String startOfErrorMessage \u003d \"An error has occurred!\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"            return startOfErrorMessage + exception.getMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"     * Creates an event.","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"     * @return Event created.","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"    public Event createEvent() {","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"        String[] commandMessageArr \u003d commandMessage.split(\"/\", 3);","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"        assert commandMessageArr.length \u003d\u003d 3 : \"event command should split into 3\";","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"        return new Event(commandMessageArr[0].substring(6), false,","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"                commandMessageArr[1].substring(4).trim(),","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"                commandMessageArr[2].substring(2).trim());","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"     * Checks if the input arguments are valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If arguments are not valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"wz2k"},"content":"    public void checkArguments() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"wz2k"},"content":"        String args \u003d commandMessage.substring(5).trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"wz2k"},"content":"        System.out.println(args);","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"wz2k"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"wz2k"},"content":"            String emptyArgumentsMessage \u003d \"event arguments cannot be empty\";","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(emptyArgumentsMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"wz2k"},"content":"        String[] argsArr \u003d checkFromToFormat(args);","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"wz2k"},"content":"        if (argsArr[0].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"wz2k"},"content":"            String emptyDescriptionMessage \u003d \"event description cannot be empty\";","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(emptyDescriptionMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"wz2k"},"content":"            LocalDate.parse(argsArr[1].substring(5).trim());","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"wz2k"},"content":"            LocalDate.parse(argsArr[2].substring(3).trim());","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"wz2k"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"wz2k"},"content":"            String wrongDateFormatMessage \u003d \"event dates should be of the format YYYY-MM-DD\";","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(wrongDateFormatMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"wz2k"},"content":"     * Checks if the message is of the correct event format.","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"wz2k"},"content":"     * @param args Input arguments.","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"wz2k"},"content":"     * @return Tokenized arguments.","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If format is incorrect.","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"wz2k"},"content":"    private String[] checkFromToFormat(String args) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"wz2k"},"content":"        String invalidFormatMessage \u003d \"event format is incorrect\";","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"wz2k"},"content":"        String[] argsArrFront \u003d args.split(\"/from\", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"wz2k"},"content":"        if (argsArrFront.length !\u003d 2 || argsArrFront[0].length() \u003d\u003d 0","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"wz2k"},"content":"                || argsArrFront[1].length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(invalidFormatMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"wz2k"},"content":"        String[] argsArrBack \u003d argsArrFront[1].split(\"/to\", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"wz2k"},"content":"        if (argsArrBack.length !\u003d 2 || argsArrBack[0].length() \u003d\u003d 0","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"wz2k"},"content":"                || argsArrBack[1].length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(invalidFormatMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"wz2k"},"content":"        return args.split(\"/\", 3);","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":128,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":128}},{"path":"src/main/java/duke/command/CreateTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":" * Represents a command that creates an todo task.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"public class CreateTodoCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"    /** The list of task maintained by the chatbot */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"    /** The chatbot\u0027s storage of the tasks it maintains */","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"     * Creates a command for creating todos.","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"     * @param commandMessage User\u0027s input.","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"     * @param storage Task storage.","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"    public CreateTodoCommand(String commandMessage, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"        super(commandMessage);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"     * Creates and stores a new todo task and returns the reply","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"     * for todo creation.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"     * @return Taskbot reply to the todo creation.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"    public String execute() {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"            String startOfReply \u003d \"The following task has been added:\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"            Task task \u003d createTodo();","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"            storage.storeTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"            return startOfReply + \"  \" + task;","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"            String startOfErrorMessage \u003d \"An error has occurred!\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"            return startOfErrorMessage + exception.getMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"     * Creates a todo.","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"     * @return Todo created.","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"    public Todo createTodo() {","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"        String[] commandMessageArr \u003d commandMessage.split(\" \", 2);","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"        assert commandMessageArr.length \u003d\u003d 2 : \"todo command should split into 2\";","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"        return new Todo(commandMessageArr[1], false);","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"     * Checks if the input arguments are valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If arguments are not valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"    public void checkArguments() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"wz2k"},"content":"        String args \u003d commandMessage.substring(4).trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"wz2k"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"wz2k"},"content":"            String emptyArgumentsMessage \u003d \"todo arguments cannot be empty\";","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(emptyArgumentsMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":83}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":" * Represents a command that deletes a task.","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    /** The list of task maintained by the chatbot */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"    /** The chatbot\u0027s storage of the tasks it maintains */","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"     * Creates a command that deletes a task.","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"     * @param commandMessage User\u0027s input.","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"     * @param storage Task storage.","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"    public DeleteTaskCommand(String commandMessage, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"        super(commandMessage);","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"     * Deletes a task from the chatbot\u0027s task list and storage and returns the","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"     * reply for task deletion.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"     * @return Taskbot reply to the task deletion.","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"    public String execute() {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"            String startOfReply \u003d \"The following task has been deleted:\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"            Task task \u003d deleteTask();","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"            storage.restructure(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"            return startOfReply + \"  \" + task;","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"        } catch (IOException | DukeException exception) {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"            String startOfErrorMessage \u003d \"An error has occurred!\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"            return startOfErrorMessage + exception.getMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"     * Deletes a task from the list and returns it.","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"     * @return Deleted task.","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If task exist.","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"    public Task deleteTask() throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"        String[] commandMessageArr \u003d commandMessage.split(\" \", 2);","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"        assert commandMessageArr.length \u003d\u003d 2 : \"delete command should split into 2\";","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"        int taskNumber \u003d Integer.parseInt(commandMessageArr[1].trim());","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"        return taskList.deleteTask(taskNumber);","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"     * Checks if the input arguments are valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If arguments are not valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"    public void checkArguments() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"wz2k"},"content":"        String args \u003d commandMessage.substring(6).trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"wz2k"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"wz2k"},"content":"            String emptyArgumentsMessage \u003d \"delete arguments cannot be empty\";","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(emptyArgumentsMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"wz2k"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"wz2k"},"content":"            if (idx \u003c 1 || idx \u003e taskList.getSize()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"wz2k"},"content":"                String invalidIndexMessage \u003d \"task number is invalid\";","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"wz2k"},"content":"                throw new DukeException(invalidIndexMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"wz2k"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"wz2k"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"wz2k"},"content":"            String notIntegerMessage \u003d \"pls input a valid task number\";","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(notIntegerMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":95}},{"path":"src/main/java/duke/command/EndChatCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":" * Represents a command that ends the conversation with the chatbot.","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"public class EndChatCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"    /** Message on how to end the chat */","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"    private String endChatMessage \u003d \"Click the X at the top right corner to exit\";","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"     * Creates a command to end the chat.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"     * @param commandMessage User\u0027s input.","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"    public EndChatCommand(String commandMessage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"        super(commandMessage);","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"     * Ends the conversation with the chatbot.","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"     * @return Message on how to end the chat.","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"    public String execute() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"        return endChatMessage;","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"     * Checks if the input arguments are valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If arguments are not valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"    public void checkArguments() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"        String args \u003d commandMessage.substring(3).trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"        if (args.length() !\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"            String invalidArgumentsMessage \u003d \"Invalid input\";","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(invalidArgumentsMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":46}},{"path":"src/main/java/duke/command/FindTaskWithTextCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":" * Represents a command that search for tasks with keywords.","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"public class FindTaskWithTextCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"    /** The list of task maintained by the chatbot */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"     * Creates a command for listing tasks that matches the keywords.","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"     * @param commandMessage User\u0027s input.","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"    public FindTaskWithTextCommand(String commandMessage, TaskList taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"        super(commandMessage);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"     * Lists the matching tasks for the user and returns if the conversation with","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"     * the chatbot has ended.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"     * @return Taskbot reply with the found tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"    public String execute() {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"        String searchString \u003d commandMessage.split(\" \", 2)[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"        String noTaskMessage \u003d \"No task stored.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"        int listSize \u003d taskList.getSize();","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"        if (listSize \u003d\u003d 0) {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"            return noTaskMessage;","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"            return listMatchingTasks(searchString.trim(), listSize);","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"     * Finds matching tasks and return them as a list.","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"     * @param searchString Keyword for the search.","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"     * @param listSize Total number of tasks in list.","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"     * @return List of matching tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"    public String listMatchingTasks(String searchString, int listSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"        StringBuilder reply \u003d new StringBuilder(\"The following tasks matches your query:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"        String noMatchMessage \u003d \"No matches found.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"        for (int i \u003d 1; i \u003c\u003d listSize; i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"            if (!task.hasSubstring(searchString)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"                continue;","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"            reply.append(\"\\n\").append(i).append(\". \").append(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"            count++;","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"        return count \u003d\u003d 0 ? noMatchMessage : reply.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"     * Checks if the input arguments are valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If arguments are not valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"wz2k"},"content":"    public void checkArguments() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"wz2k"},"content":"        String args \u003d commandMessage.substring(4).trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"wz2k"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"wz2k"},"content":"            String emptyArgumentsMessage \u003d \"find arguments cannot be empty\";","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(emptyArgumentsMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"wz2k":85}},{"path":"src/main/java/duke/command/GetRemindersCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.command;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":" * Represents a command that lists tasks that are due today.","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"public class GetRemindersCommand extends Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"    /** The list of task maintained by the chatbot */","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"     * Creates a command for reminding user about tasks that are due today.","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"     * @param commandMessage User\u0027s input.","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"    public GetRemindersCommand(String commandMessage, TaskList taskList) {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"        super(commandMessage);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"     * Lists the tasks that are due today and returns the reply with the list","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"     * of found tasks","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"     * @return The list of found tasks that are due today.","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"    public String execute() {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"        int listSize \u003d taskList.getSize();","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"        String noTaskMessage \u003d \"No task stored. Add deadlines to get reminders.\";","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"        if (listSize \u003d\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"            return noTaskMessage;","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"            return getDueTodayTasks(listSize);","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"     * Finds tasks that are due today.","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"     * @param listSize Total number of tasks in list.","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"     * @return List tasks that are due today.","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"    public String getDueTodayTasks(int listSize) {","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"        StringBuilder reply \u003d new StringBuilder(\"The following tasks are due today:\");","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"        String noDeadlineTodayMessage \u003d \"Nothing is due today.\";","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"        for (int i \u003d 1; i \u003c\u003d listSize; i++) {","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"            TaskType taskType \u003d task.getTaskType();","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"            boolean isDeadline \u003d taskType \u003d\u003d TaskType.DEADLINE;","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"            if (!isDeadline) {","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"                continue;","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"            if (!deadline.isDueToday()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"                continue;","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"            reply.append(\"\\n\").append(i).append(\". \").append(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"            count++;","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"wz2k"},"content":"        return count \u003d\u003d 0 ? noDeadlineTodayMessage : reply.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"wz2k"},"content":"     * Checks if the input arguments are valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If arguments are not valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"wz2k"},"content":"    public void checkArguments() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"wz2k"},"content":"        String illegalAccessMessage \u003d \"This method should not be called\";","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"wz2k"},"content":"        throw new DukeException(illegalAccessMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"wz2k":90}},{"path":"src/main/java/duke/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":" * Represents a command that lists the user\u0027s tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"    /** The list of task maintained by the chatbot */","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"     * Creates a command for listing the user\u0027s tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"     * @param commandMessage User\u0027s input.","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"    public ListTasksCommand(String commandMessage, TaskList taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"        super(commandMessage);","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"     * Lists the tasks for the user and returns the reply with the list","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"     * of found tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"     * @return The list of found tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"    public String execute() {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"        int listSize \u003d taskList.getSize();","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"        String noTaskMessage \u003d \"No task stored.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"        if (listSize \u003d\u003d 0) {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"            return noTaskMessage;","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"            return listTasks(listSize);","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"     * Lists all tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"     * @param listSize Total number of tasks in list.","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"     * @return List of all the tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"    public String listTasks(int listSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"        StringBuilder reply \u003d new StringBuilder(\"Total tasks: \" + taskList.getSize());","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"        for (int i \u003d 1; i \u003c\u003d listSize; i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"            reply.append(\"\\n\").append(i).append(\". \").append(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"        return reply.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"     * Checks if the input arguments are valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If arguments are not valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"    public void checkArguments() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"        String args \u003d commandMessage.substring(4).trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"        if (args.length() !\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"            String invalidArgumentsMessage \u003d \"Invalid input\";","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(invalidArgumentsMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":75}},{"path":"src/main/java/duke/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":" * Represents a command that marks a task.","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    /** The list of task maintained by the chatbot */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"    /** The chatbot\u0027s storage of the tasks it maintains */","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"     * Creates a command for marking a task.","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"     * @param commandMessage User\u0027s input.","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"     * @param storage Task storage.","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"    public MarkTaskCommand(String commandMessage, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"        super(commandMessage);","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"     * Marks a task and returns the reply for task marking.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"     * @return Taskbot reply to the task marking.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"    public String execute() {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"            String startOfReply \u003d \"The following task is marked as done:\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"            Task task \u003d markTask();","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"            storage.restructure(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"            return startOfReply + \"  \" + task;","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"            String startOfErrorMessage \u003d \"An error has occurred!\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"            return startOfErrorMessage + exception.getMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"     * Marks task as done.","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"     * @return Task that was marked.","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"    public Task markTask() {","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"        String[] commandMessageArr \u003d commandMessage.split(\" \", 2);","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"        assert commandMessageArr.length \u003d\u003d 2 : \"mark command should split into 2\";","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"        int taskNumber \u003d Integer.parseInt(commandMessageArr[1].trim());","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"        return taskList.markTask(taskNumber);","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"     * Checks if the input arguments are valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If arguments are not valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"    public void checkArguments() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"        String args \u003d commandMessage.substring(4).trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"wz2k"},"content":"            String emptyArgumentsMessage \u003d \"mark arguments cannot be empty\";","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(emptyArgumentsMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"wz2k"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"wz2k"},"content":"            if (idx \u003c 1 || idx \u003e taskList.getSize()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"wz2k"},"content":"                String invalidIndexMessage \u003d \"task number is invalid\";","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"wz2k"},"content":"                throw new DukeException(invalidIndexMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"wz2k"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"wz2k"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"wz2k"},"content":"            String notIntegerMessage \u003d \"pls input a valid task number\";","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(notIntegerMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":93}},{"path":"src/main/java/duke/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":" * Represents a command that unmarks a task.","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    /** The list of task maintained by the chatbot */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"    /** The chatbot\u0027s storage of the tasks it maintains */","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"     * Creates a command for unmarking a task.","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"     * @param commandMessage User\u0027s input.","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"     * @param storage Task storage.","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"    public UnmarkTaskCommand(String commandMessage, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"        super(commandMessage);","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"     * Unmarks a task and returns the reply for task unmarking.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"     * @return Taskbot reply to the task unmarking.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"    public String execute() {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"            String startOfReply \u003d \"The following task is marked as not done:\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"            Task task \u003d unmarkTask();","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"            storage.restructure(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"            return startOfReply + \"  \" + task;","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"            String startOfErrorMessage \u003d \"An error has occurred!\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"            return startOfErrorMessage + exception.getMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"     * Unmarks task and returns it.","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"     * @return Task that was unmarked.","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"    public Task unmarkTask() {","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"        String[] commandMessageArr \u003d commandMessage.split(\" \", 2);","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"        assert commandMessageArr.length \u003d\u003d 2 : \"unmark command should split into 2\";","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"        int taskNumber \u003d Integer.parseInt(commandMessageArr[1].trim());","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"        return taskList.unmarkTask(taskNumber);","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"     * Checks if the input arguments are valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If arguments are not valid.","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"    public void checkArguments() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"        String args \u003d commandMessage.substring(6).trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"wz2k"},"content":"            String emptyArgumentsMessage \u003d \"unmark arguments cannot be empty\";","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(emptyArgumentsMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"wz2k"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"wz2k"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"wz2k"},"content":"            if (idx \u003c 1 || idx \u003e taskList.getSize()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"wz2k"},"content":"                String invalidIndexMessage \u003d \"task number is invalid\";","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"wz2k"},"content":"                throw new DukeException(invalidIndexMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"wz2k"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"wz2k"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"wz2k"},"content":"            String notIntegerMessage \u003d \"pls input a valid task number\";","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(notIntegerMessage);","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":93}},{"path":"src/main/java/duke/enums/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.enums;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":" * Represents the types a task can be.","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"public enum TaskType {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"wz2k":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"    /** Deadline of the task */","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"    private LocalDate by;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"     * Creates a deadline task.","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"     * @param isMarked Task marking.","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"     * @param by Task deadline.","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"    public Deadline(String description, boolean isMarked, String by) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"        super(description, isMarked, TaskType.DEADLINE);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"     * Returns the task type, checkbox, description and deadline.","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"     * @return Deadline task details.","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(pattern) + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"     * Returns the string to store the deadline task in a file.","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"     * @return File storage version of the deadline task.","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"    public String toTaskStorageString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"        return \"D\" + \"|\" + super.toTaskStorageString() + \"|\" + by;","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"     * Returns if the deadline is due today.","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"     * @return True is the deadline is due today and false otherwise.","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"    public boolean isDueToday() {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"        LocalDate todayDate \u003d LocalDate.now();","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"        return by.equals(todayDate);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"wz2k":59}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":" * Represents an event task.","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"    /** End of event */","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"    /** Start of event */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"     * Creates a deadline task.","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"     * @param isMarked Task marking.","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"     * @param from Start of event.","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"     * @param to End of event.","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"    public Event(String description, boolean isMarked, String from, String to) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"        super(description, isMarked, TaskType.EVENT);","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"     * Returns the task type, checkbox, description and timeline.","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"     * @return Event task details.","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(pattern)","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"                + \" to: \" + to.format(pattern) + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"     * Returns the string to store the event task in a file.","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"     * @return File storage version of the event task.","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"    public String toTaskStorageString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"        return \"E\" + \"|\" + super.toTaskStorageString() + \"|\" + from + \"|\" + to;","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"wz2k":55}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":" * Represents a task of the user.","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"    /** Task description */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"    private String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"    /** Marking to show if task is done */","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"    private boolean isMarked;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    /** Type of task */","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"    private TaskType type;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"     * Creates a task.","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"     * @param isMarked Task marking.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"    public Task(String description, boolean isMarked, TaskType type) {","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"     * Returns the symbol to show if the task is done or not.","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"     * @return Task marked symbol.","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"    private String getMarkedSymbol() {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"        return isMarked ? \"X\" : \" \";","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"     * Returns the task checkbox and description.","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"     * @return Task details.","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"        return \"[\" + getMarkedSymbol() + \"] \" + description;","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"    public void mark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"        isMarked \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"        isMarked \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"     * Returns the string to store the task in a file.","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"     * @return File storage version of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"    public String toTaskStorageString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"        String marked \u003d String.valueOf(isMarked);","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"        return marked + \"|\" + description;","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"     * Checks if the given text is a substring of the task description.","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"     * @param text Search string.","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"wz2k"},"content":"     * @return True if the text is part of the description and false otherwise.","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"wz2k"},"content":"    public boolean hasSubstring(String text) {","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"wz2k"},"content":"        return description.contains(text);","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"wz2k"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"wz2k"},"content":"     * @return Task type.","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"wz2k"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"wz2k"},"content":"        return type;","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"wz2k":91}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"public class TaskList {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"    /** Task list */","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"     * Creates a list of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"     * @return Total task count.","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"     * @param task Task to add.","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"     * Returns the specified task.","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"     * @param taskNumber Task order in the list.","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"     * @return Task of the corresponding task number.","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"        return taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"     * Marks the task at the specified task number as done.","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"     * @param taskNumber Task order in the list.","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"     * @return Task of the corresponding task number.","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"    public Task markTask(int taskNumber) {","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"        Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"        task.mark();","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"        return task;","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"     * Marks the task at the specified task number as not done.","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"     * @param taskNumber Task order in the list.","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"     * @return Task of the corresponding task number.","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"    public Task unmarkTask(int taskNumber) {","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"        Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"        task.unmark();","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"        return task;","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"wz2k"},"content":"     * Deletes a specified task based on its order.","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"wz2k"},"content":"     * @param taskNumber Task order in the list.","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"wz2k"},"content":"     * @return Task of the corresponding task number.","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"wz2k"},"content":"     * @throws DukeException If task does not exist.","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"wz2k"},"content":"    public Task deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"wz2k"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"wz2k"},"content":"        if (size \u003d\u003d 0 || taskNumber \u003e size) {","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"wz2k"},"content":"            String exceptionMessage \u003d \"Task number does not exist.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"wz2k"},"content":"            throw new DukeException(exceptionMessage);","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"wz2k"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"wz2k"},"content":"        Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"wz2k"},"content":"        taskList.remove(taskNumber - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"wz2k"},"content":"        return task;","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":96}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":" * Represents a todo task.","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":" * @author wz2k","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"     * Creates a todo task.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"     * @param isMarked Task marking.","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"    public Todo(String description, boolean isMarked) {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"        super(description, isMarked, TaskType.TODO);","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"     * Returns the task type, checkbox and description.","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"     * @return Todo task details.","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"     * Returns the string to store the todo task in a file.","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"     * @return File storage version of the todo task.","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"    public String toTaskStorageString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"        return \"T\" + \"|\" + super.toTaskStorageString();","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"wz2k":40}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #88cc00; -fx-border-color: #000; -fx-border-style: solid none none none;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"      \u003cHBox alignment\u003d\"CENTER\" prefHeight\u003d\"100.0\" prefWidth\u003d\"282.0\" style\u003d\"-fx-background-radius: 10px;\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"              \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"                  \u003cFont name\u003d\"Sitka Small\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"      \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"100.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"91.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"            \u003cLabel fx:id\u003d\"name\" alignment\u003d\"TOP_LEFT\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"wz2k":35}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #88cc00;\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"            \u003cDropShadow /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"         \u003c/effect\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"        \u003cButton fx:id\u003d\"sendButton\" cache\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background: #88cc00;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #88cc00;\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"wz2k":23}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"    public void testDefaultStringConversion() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[D][ ] read book (by: May 12 2022)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"                new Deadline(\"read book\", false, \"2022-05-12\").toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[D][X] READ BOOK (by: Oct 27 2019)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"                new Deadline(\"READ BOOK\", true, \"2019-10-27\").toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[D][ ] 56 + abc \u003e y (by: Dec 06 1977)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"                new Deadline(\"56 + abc \u003e y\", false, \"1977-12-06\").toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[D][X] 123 (by: Feb 01 2022)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"                new Deadline(\"123\", true, \"2022-02-01\").toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"    public void testTaskStorageStringConversion() {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"D|false|read book|2022-05-12\",","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"                new Deadline(\"read book\", false, \"2022-05-12\").toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"D|true|READ BOOK|2019-10-27\",","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"                new Deadline(\"READ BOOK\", true, \"2019-10-27\").toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"D|false|56 + abc \u003e y|1977-12-06\",","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"                new Deadline(\"56 + abc \u003e y\", false, \"1977-12-06\").toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"D|true|123|2022-02-01\",","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"                new Deadline(\"123\", true, \"2022-02-01\").toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"    public void taskMarking() {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"        Task task \u003d new Deadline(\"read book\", false, \"2022-05-12\");","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"        task.mark();","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[D][X] read book (by: May 12 2022)\", task.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"D|true|read book|2022-05-12\", task.toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"    public void taskUnmarking() {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"        Task task \u003d new Deadline(\"read book\", true, \"2022-05-12\");","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"        task.unmark();","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[D][ ] read book (by: May 12 2022)\", task.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"D|false|read book|2022-05-12\", task.toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":49}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"public class EventTest {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"    public void testDefaultStringConversion() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[E][ ] read book (from: May 12 2022 to: Oct 27 2023)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"                new Event(\"read book\", false, \"2022-05-12\", \"2023-10-27\").toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[E][X] READ BOOK (from: Oct 27 2019 to: Dec 27 2019)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"                new Event(\"READ BOOK\", true, \"2019-10-27\", \"2019-12-27\").toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[E][ ] 56 + abc \u003e y (from: Dec 06 1977 to: Oct 30 2019)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"                new Event(\"56 + abc \u003e y\", false, \"1977-12-06\", \"2019-10-30\").toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[E][X] 123 (from: Feb 01 2022 to: May 16 2023)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"                new Event(\"123\", true, \"2022-02-01\", \"2023-05-16\").toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"    public void testTaskStorageStringConversion() {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"E|false|read book|2022-05-12|2023-10-27\",","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"                new Event(\"read book\", false, \"2022-05-12\", \"2023-10-27\").toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"E|true|READ BOOK|2019-10-27|2019-12-27\",","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"                new Event(\"READ BOOK\", true, \"2019-10-27\", \"2019-12-27\").toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"E|false|56 + abc \u003e y|1977-12-06|2019-10-30\",","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"                new Event(\"56 + abc \u003e y\", false, \"1977-12-06\", \"2019-10-30\").toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"E|true|123|2022-02-01|2023-05-16\",","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"                new Event(\"123\", true, \"2022-02-01\", \"2023-05-16\").toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"    public void taskMarking() {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"        Task task \u003d new Event(\"read book\", false, \"2022-05-12\", \"2023-10-27\");","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"        task.mark();","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[E][X] read book (from: May 12 2022 to: Oct 27 2023)\", task.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"E|true|read book|2022-05-12|2023-10-27\", task.toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"    public void taskUnmarking() {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"        Task task \u003d new Event(\"read book\", true, \"2022-05-12\", \"2023-10-27\");","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"        task.unmark();","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[E][ ] read book (from: May 12 2022 to: Oct 27 2023)\", task.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"E|false|read book|2022-05-12|2023-10-27\", task.toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":49}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"    public void testDefaultStringConversion() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[T][ ] read book\",","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"                new Todo(\"read book\", false).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[T][X] READ BOOK\",","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"                new Todo(\"READ BOOK\", true).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[T][ ] 56 + abc \u003e y\",","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"                new Todo(\"56 + abc \u003e y\", false).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[T][X] 123\",","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"                new Todo(\"123\", true).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"    public void testTaskStorageStringConversion() {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"T|false|read book\",","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"                new Todo(\"read book\", false).toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"T|true|READ BOOK\",","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"                new Todo(\"READ BOOK\", true).toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"T|false|56 + abc \u003e y\",","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"                new Todo(\"56 + abc \u003e y\", false).toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"T|true|123\",","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"                new Todo(\"123\", true).toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"    public void taskMarking() {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"        Task task \u003d new Todo(\"read book\", false);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"        task.mark();","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[T][X] read book\", task.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"T|true|read book\", task.toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"    public void taskUnmarking() {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"        Task task \u003d new Todo(\"read book\", true);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"        task.unmark();","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"[T][ ] read book\", task.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"        assertEquals(\"T|false|read book\", task.toTaskStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"wz2k":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"todo todo 1","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"event event 1 /from Sun 10pm /to Mon 3am","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"deadline deadline 1 /by November","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"todo todo 2","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"deadline deadline 2 /by Tmr","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"event event 2 /from Now /to Next time","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"wz2k":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wz2k":1,"-":20}}]
