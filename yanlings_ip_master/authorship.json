[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"        by \u003d by.replaceAll(\"by\",\"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"        by \u003d by.replaceAll(\"/\",\"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"        Task.actions +\u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"yanlings":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Hello I\u0027m Duke\\nWhat can I do for you?\" + logo);","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"        ArrayList\u003cTask\u003e array \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"        String reply \u003d myObj.nextLine();","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"        while (!reply.startsWith(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"            if (reply.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"                reply \u003d reply.replaceAll(\"deadline\", \"\");","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"                String[] replies \u003d reply.split(\"/\",2);","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"                handleInvalidArgs checked \u003d new handleInvalidArgs(replies);","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"                checked.checkForDeadline(checked.replies);","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"                Deadline deadline \u003d new Deadline(replies[0],replies[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"                array.add(deadline);","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"                System.out.println(deadline);","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Now you have \" + Task.actions + \" tasks in the list\");","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"            }else if (reply.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"                reply \u003d reply.replaceAll(\"todo\", \"\");","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"                handleInvalidArgs checked \u003d new handleInvalidArgs(reply);","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"                checked.checkForToDo(checked.reply);","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"                ToDo todo \u003d new ToDo(reply);","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"                array.add(todo);","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"                System.out.println(todo);","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Now you have \" + Task.actions + \" tasks in the list\");","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"            } else if (reply.startsWith(\"event\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"                reply \u003d reply.replaceAll(\"event\", \"\");","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"                String[] replies \u003d reply.split(\"/\",3);","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"                handleInvalidArgs checked \u003d new handleInvalidArgs(replies);","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"                checked.checkForEvent(checked.replies);","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"                Event event \u003d new Event(replies[0],replies[1],replies[2]);","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"                array.add(event);","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"                System.out.println(event);","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Now you have \" + Task.actions + \" tasks in the list\");","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"            else if (reply.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"                int value \u003d Integer.parseInt(reply.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"                array.get(value).unmark();","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"            } else if (reply.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"yanlings"},"content":"                int value \u003d Integer.parseInt(reply.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":60,"author":{"gitId":"yanlings"},"content":"                array.get(value).mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":63,"author":{"gitId":"yanlings"},"content":"            else if (reply.startsWith(\"list\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"yanlings"},"content":"                int listcount \u003d 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":66,"author":{"gitId":"yanlings"},"content":"                for (Task element: array) {","lastModifiedDate":"2023-01-15"},{"lineNumber":67,"author":{"gitId":"yanlings"},"content":"                    if (element !\u003d null) {","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"yanlings"},"content":"                        System.out.println(\"\" + listcount + \".\" + element);","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"yanlings"},"content":"                        listcount +\u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"yanlings"},"content":"                    }","lastModifiedDate":"2023-01-15"},{"lineNumber":71,"author":{"gitId":"yanlings"},"content":"                }","lastModifiedDate":"2023-01-15"},{"lineNumber":72,"author":{"gitId":"yanlings"},"content":"            } else if (reply.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"yanlings"},"content":"                int value \u003d Integer.parseInt(reply.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"yanlings"},"content":"                Task deleted \u003d array.get(value);","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"yanlings"},"content":"                Task.actions -\u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"yanlings"},"content":"                array.remove(deleted);","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + deleted);","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Now you have \" + Task.actions + \" tasks in the list\");","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"yanlings"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"yanlings"},"content":"                handleInvalidArgs checked \u003d new handleInvalidArgs(reply);","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"yanlings"},"content":"                checked.checkForRandomWords(checked.reply);","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":83,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"yanlings"},"content":"            myObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-15"},{"lineNumber":85,"author":{"gitId":"yanlings"},"content":"            reply \u003d myObj.nextLine();","lastModifiedDate":"2023-01-15"},{"lineNumber":86,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":87,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Bye, Hope to see you again soon!\");","lastModifiedDate":"2023-01-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":92,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"yanlings":84,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"public class DukeException extends ArrayIndexOutOfBoundsException{","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"        super(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"yanlings":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"    protected String from;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"    protected String to;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"    public Event(String description, String from, String to)  {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"        from \u003d from.replaceAll(\"by\", \"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"        from \u003d from.replaceAll(\"/\",\"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"        from \u003d from.replaceAll(\"from\",\"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"        to \u003d to.replaceAll(\"to\", \"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"        Task.actions +\u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + from + \"to:\" + to + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"yanlings":21}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"public class Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"    protected String description;","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"    protected String words;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"    static int actions \u003d 0;","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"        this.words \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"            this.words \u003d  \"[\"+this.getStatusIcon()+\"]\" + this.description;","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"            return this.words;","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"            this.words \u003d \"[\"+this.getStatusIcon()+\"]\" + this.description;","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"            return this.words;","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"    public void mark() {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +  this);","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"+ this);","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"yanlings":37}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"        Task.actions +\u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"yanlings":14}},{"path":"src/main/java/handleInvalidArgs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"public class handleInvalidArgs {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"    String[] replies;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"    String reply;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"    public handleInvalidArgs(String[] replies){","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"        this.replies \u003d replies;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"    public handleInvalidArgs(String reply) {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"        this.reply \u003d reply;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"    public void checkForEvent(String[] replies) throws DukeException{","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"        if (replies.length !\u003d 3) {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"            throw new DukeException(\" OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"    public void checkForToDo(String replies) throws DukeException{","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"        if (replies.length() \u003c 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"    public void checkForDeadline(String[] replies) throws DukeException{","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"        if (replies.length !\u003d 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"    public void checkForRandomWords(String replies) throws DukeException{","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"        if (!(toString().startsWith(\"deadline\") || toString().startsWith(\"todo\") || toString().startsWith(\"list\")","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"                || toString().startsWith(\"event\") || toString().startsWith(\"mark\") || toString().startsWith(\"unmark\"))) {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"yanlings":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"yanlings":4}}]
