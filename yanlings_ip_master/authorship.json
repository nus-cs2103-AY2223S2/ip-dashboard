[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"        by \u003d by.replaceAll(\"by\",\"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"        by \u003d by.replaceAll(\"/\",\"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"        Task.actions +\u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"        return String.format(\" deadline ||%s || %s || %s\", super.toSaveString(), this.description, this.by);","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"yanlings":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"import java.io.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"            storage.handleLoad();","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"        new Duke(\"text-ui-test/saved-tasks.txt\").run();","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Hello I\u0027m Duke\");","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"        String reply \u003d myObj.nextLine();","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-15"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"        while (!reply.startsWith(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"            if (reply.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"                reply \u003d reply.replaceAll(\"deadline\", \"\");","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"                String[] replies \u003d Parser.splitforDeadline(reply);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"                handleInvalidArgs checked \u003d new handleInvalidArgs(replies);","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"                checked.checkForDeadline(checked.replies);","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"                Deadline deadline \u003d new Deadline(replies[0],replies[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"                taskList.add(deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"                System.out.println(deadline);","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Now you have \" + Task.actions + \" tasks in the list\");","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"                Task.tasks.add(deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"            }else if (reply.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"                reply \u003d reply.replaceAll(\"todo\", \"\");","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"                handleInvalidArgs checked \u003d new handleInvalidArgs(reply);","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"                checked.checkForToDo(checked.reply);","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"                ToDo todo \u003d new ToDo(reply);","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"                taskList.add(todo);","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"yanlings"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":60,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"yanlings"},"content":"                System.out.println(todo);","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Now you have \" + Task.actions + \" tasks in the list\");","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"yanlings"},"content":"                Task.tasks.add(todo);","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"yanlings"},"content":"            } else if (reply.startsWith(\"event\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"yanlings"},"content":"                reply \u003d reply.replaceAll(\"event\", \"\");","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"yanlings"},"content":"                String[] replies \u003d Parser.splitForEvent(reply);","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"yanlings"},"content":"                String[] datecheck \u003d  replies[1].split(\"/\");","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"yanlings"},"content":"                datecheck[0] \u003d datecheck[0].replaceAll(\"from \", \"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"yanlings"},"content":"                datecheck[1] \u003d datecheck[1].replaceAll(\"to \",\"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"yanlings"},"content":"                replies[1] \u003d   datecheck[0] + \"/\" + datecheck[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"yanlings"},"content":"                handleInvalidArgs checked \u003d new handleInvalidArgs(replies);","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"yanlings"},"content":"                checked.checkForEvent(checked.replies);","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"yanlings"},"content":"                Event event \u003d new Event(replies[0],replies[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"yanlings"},"content":"                taskList.add(event);","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"yanlings"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"yanlings"},"content":"                System.out.println(event);","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Now you have \" + Task.actions + \" tasks in the list\");","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"yanlings"},"content":"                Task.tasks.add(event);","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"yanlings"},"content":"            else if (reply.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"yanlings"},"content":"                int value \u003d Integer.parseInt(reply.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":85,"author":{"gitId":"yanlings"},"content":"                taskList.get(value).unmark();","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"yanlings"},"content":"            } else if (reply.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"yanlings"},"content":"                int value \u003d Integer.parseInt(reply.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":88,"author":{"gitId":"yanlings"},"content":"                taskList.get(value).mark();","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":90,"author":{"gitId":"yanlings"},"content":"            else if (reply.startsWith(\"list\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"yanlings"},"content":"                ui.showList();","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"yanlings"},"content":"            } else if (reply.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"yanlings"},"content":"                int value \u003d Integer.parseInt(reply.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"yanlings"},"content":"                Task deleted \u003d taskList.get(value);","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"yanlings"},"content":"                Task.actions -\u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"yanlings"},"content":"                taskList.remove(deleted);","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + deleted);","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Now you have \" + Task.actions + \" tasks in the list\");","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"yanlings"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"yanlings"},"content":"                handleInvalidArgs checked \u003d new handleInvalidArgs(reply);","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"yanlings"},"content":"                checked.checkForRandomWords(checked.reply);","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":103,"author":{"gitId":"yanlings"},"content":"            storage.saveTasks();","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"yanlings"},"content":"            reply \u003d myObj.nextLine();","lastModifiedDate":"2023-01-15"},{"lineNumber":105,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":106,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Bye, Hope to see you again soon!\");","lastModifiedDate":"2023-01-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"yanlings"},"content":"    public Duke() {","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"yanlings"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"yanlings"},"content":"        storage \u003d new Storage(\"text-ui-test/saved-tasks.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"yanlings"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"yanlings"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"yanlings"},"content":"            storage.handleLoad();","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"yanlings"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"yanlings"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"yanlings"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":121,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":122,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":120,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"public class DukeException extends ArrayIndexOutOfBoundsException{","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"        super(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"yanlings":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"    protected String from;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"    protected String to;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"    protected String date;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    public Event(String description, String date)  {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"        String[] fromandto \u003d date.split(\"/\");","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"        this.from \u003d  fromandto[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"        this.from \u003d from.replaceAll(\"from \", \"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"        this.from \u003d this.from.trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"        this.start \u003d LocalDateTime.parse(this.from, formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"        this.to \u003d fromandto[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"        this.to \u003d to.replaceAll(\"to\",\"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"        this.end \u003d LocalDateTime.parse(this.to, formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"        Task.actions +\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + from + \"to:\" + to + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"        String timeStr \u003d this.start.format(DateTimeFormatter.ofPattern(\"HH:mm, MMM dd yyyy\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"        String timeEnd \u003d this.end.format(DateTimeFormatter.ofPattern(\"HH:mm, MMM dd yyyy\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"        String date \u003d \"\" + timeStr + \"-\" + timeEnd;","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"        return String.format(\"event || %s || %s || %s\", super.toSaveString(), this.description, date);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":40}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"    public static String[] splitforDeadline(String reply) {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"        return reply.split(\"/\",2);","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"    public static String[] splitForEvent(String reply) {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"        return reply.split(\"/\",2);","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":11}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.io.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"    private String path;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"    public void handleLoad() throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"        BufferedReader taskLoader \u003d new BufferedReader(new FileReader(\".//text-ui-test/saved-tasks.txt\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"        String words \u003d taskLoader.readLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"        while (words !\u003d null) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"            String[] keywords \u003d words.split(\" \\\\|\\\\| \");","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"            Task current \u003d null;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"            if (keywords[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"                current \u003d new ToDo(keywords[2]);","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"            } else if (keywords[0].equals(\"event\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"                String[] toandfrom \u003d  keywords[3].split(\"-\");","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm, MMM dd yyyy\");","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"                LocalDateTime starting \u003d LocalDateTime.parse(toandfrom[0], formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"                LocalDateTime ending \u003d LocalDateTime.parse(toandfrom[1], formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"                String timeStr \u003d starting.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"                String timeEnd \u003d ending.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"                String total \u003d timeStr +\"/\" + timeEnd;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"                current \u003d new Event(keywords[2], total);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"            } else if (keywords[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm, MMM dd yyyy\");","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"                LocalDateTime myDateObj \u003d LocalDateTime.parse(keywords[3], formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"                String timeStr \u003d myDateObj.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"                current \u003d new Deadline(keywords[2], timeStr);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"error\");","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"            if (keywords[1].equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"                current.mark();","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"            Task.tasks.add(current);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"            words \u003d taskLoader.readLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"        taskLoader.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"    public void saveTasks() throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"        BufferedWriter taskWriter \u003d new BufferedWriter(new FileWriter(path));","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"        String taskInString \u003d \"\";","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"        for (int i \u003d 0; i\u003c (Task.tasks).size(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"            taskInString +\u003d Task.tasks.get(i).toSaveString() + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"        taskWriter.write(taskInString);","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"        taskWriter.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":60}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"public class Task{","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"    public static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"    protected String description;","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"    protected String words;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    static int actions \u003d 0;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"        this.words \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"            return \"1\";","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"            return \"0\";","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"            this.words \u003d  \"[\"+this.getStatusIcon()+\"]\" + this.description;","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"            return this.words;","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"            this.words \u003d \"[\"+this.getStatusIcon()+\"]\" + this.description;","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"            return this.words;","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"    public void mark() {","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +  this);","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"+ this);","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"yanlings":50}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"    private static List\u003cTask\u003e taskLists;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"        taskLists \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"        taskLists.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    public Task get(int index){","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"        return taskLists.get(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"    public void remove(Task task){","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"        taskLists.remove(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":24}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import duke.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"        Task.actions +\u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"        return String.format(\"todo || %s || %s\", super.toSaveString(), this.description);","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"    public String getCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"    public void showList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"        int listcount \u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"        for (Task element: Task.tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"            if (element !\u003d null) {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"\" + listcount + \".\" + element);","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"                listcount +\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"    public void printError(String e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"        System.out.println(e + \"\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":27}},{"path":"src/main/java/duke/handleInvalidArgs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.io.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"public class handleInvalidArgs {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"    String[] replies;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"    String reply;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    public handleInvalidArgs(String[] replies){","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"        this.replies \u003d replies;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"    public handleInvalidArgs(String reply) {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"        this.reply \u003d reply;","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"    public void checkForEvent(String[] replies) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"        if (replies.length !\u003d 3) {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"            throw new DukeException(\" OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"    public void checkForToDo(String replies) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"        if (replies.length() \u003c 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"            throw new DukeException(\" OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"    public void checkForDeadline(String[] replies) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"        if (replies.length !\u003d 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"            throw new DukeException(\" OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"    public void checkForRandomWords(String replies) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"        if (!(toString().startsWith(\"deadline\") || toString().startsWith(\"todo\") || toString().startsWith(\"list\")","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"                || toString().startsWith(\"event\") || toString().startsWith(\"mark\") || toString().startsWith(\"unmark\"))) {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"            throw new DukeException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"    public static class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"        public static String[] splitforDeadline(String reply) {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"            return reply.split(\"/\",2);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"        public static String[] splitForEvent(String reply) {","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"            return reply.split(\"/\",2);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"yanlings":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"yanlings":1}},{"path":"text-ui-test/saved-tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":1}}]
