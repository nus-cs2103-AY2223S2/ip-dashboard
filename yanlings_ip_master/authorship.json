[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"    testLogging {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yanlings":17,"-":38}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":" * This is the class for Deadline action","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":" * @author yanlinglim","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"     * This is the constructor for Deadline","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"     * @param description description of deadline","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"     * @param by the date where the dateline is due","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"        by \u003d by.replaceAll(\"by \",\"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"        by \u003d by.replaceAll(\"/\",\"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"        this.start \u003d LocalDateTime.parse(this.by, formatter);","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"        Task.actions +\u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"     * Returns a string representation of the object.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"     * @return String string representation of the object.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"     * Returns a string representation of the object to be placed in the list","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"     * @return String string representation of the object to be placed in the list","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"        String timeStr \u003d this.start.format(DateTimeFormatter.ofPattern(\"HH:mm, MMM dd yyyy\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"        return String.format(\"deadline || %s || %s || %s\", super.toSaveString(), this.description, timeStr);","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"     * Prints out the line to show that a deadline task has been added","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"    public void toPrintDeadlineString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"        System.out.println(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Now you have \" + Task.actions + \" tasks in the list\");","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"     * Adds deadline into tasklist","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"yanlings"},"content":"    public void handleDeadline() {","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"yanlings"},"content":"        this.toPrintDeadlineString();","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"yanlings"},"content":"        Task.tasks.add(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"yanlings":63}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"        assert this.dialog !\u003d null : \"[dialog] FXML was improperly configured.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"        assert this.displayPicture !\u003d null : \"[displayPicture] FXML was improperly configured.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"    private void flip() {","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"     * Shows the dialog box containing the String input from users","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"     * @param text text replies of the user","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"     * @param img image of the user","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"     * @return a new DialogBox which shows the user replies.","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"yanlings"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"yanlings"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"yanlings"},"content":"     * Shows the dialog box containing the String representation from Duke","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"yanlings"},"content":"     * @param text replies of Duke","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"yanlings"},"content":"     * @param img image of Duke","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"yanlings"},"content":"     * @return a new DialogBox that shows Duke replies","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"yanlings"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"yanlings"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"yanlings"},"content":"        db.flip();","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"yanlings"},"content":"        return db;","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"yanlings":75}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"import static duke.Parser.stringForEvent;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":" * The Duke program implements an application that takes in an input and places it in a list.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":" * If the words are not of any keywords, an error message will be printed.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":" * @author yanlinglim","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":" *","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"    public Duke() {","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"        storage \u003d new Storage(\"text-ui-test/saved-tasks.txt\");","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"            storage.handleLoad();","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"     * This is a constructor for Duke such that we will create a file.","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"     * @param filePath","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"            storage.handleLoad();","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"     * @param input String input from users","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"yanlings"},"content":"     * @return String representation based on the action","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"yanlings"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"yanlings"},"content":"    String getResponse(String input) throws IOException {","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"yanlings"},"content":"            if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"yanlings"},"content":"                input \u003d input.replaceAll(\"deadline \", \"\");","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"yanlings"},"content":"                String[] replies \u003d Parser.splitForDeadline(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"yanlings"},"content":"                Deadline deadline \u003d new Deadline(replies[0],replies[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"yanlings"},"content":"                taskList.add(deadline);","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"yanlings"},"content":"                deadline.handleDeadline();","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"yanlings"},"content":"                storage.saveTasks();","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"yanlings"},"content":"                return ui.addTask(deadline);","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"yanlings"},"content":"            }else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"yanlings"},"content":"                input \u003d input.replaceAll(\"todo\", \"\");","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"yanlings"},"content":"                InvalidArgsHandler checked \u003d new InvalidArgsHandler(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"yanlings"},"content":"                checked.checkForToDo(checked.reply);","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"yanlings"},"content":"                ToDo toDo \u003d new ToDo(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"yanlings"},"content":"                taskList.add(toDo);","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"yanlings"},"content":"                toDo.handleToDo();","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"yanlings"},"content":"                storage.saveTasks();","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"yanlings"},"content":"                return ui.addTask(toDo);","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"yanlings"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"yanlings"},"content":"                input \u003d input.replaceAll(\"event\", \"\");","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"yanlings"},"content":"                String[] replies \u003d Parser.splitForEvent(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"yanlings"},"content":"                Event event \u003d new Event(replies[0],replies[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"yanlings"},"content":"                event.handleEvent();","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"yanlings"},"content":"                taskList.add(event);","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"yanlings"},"content":"                storage.saveTasks();","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"yanlings"},"content":"                return ui.addTask(event);","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"yanlings"},"content":"            else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"yanlings"},"content":"                int value \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"yanlings"},"content":"                Task.tasks.get(value).unmark();","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"yanlings"},"content":"                storage.saveTasks();","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"yanlings"},"content":"                return ui.stringMark(Task.tasks.get(value));","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"yanlings"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"yanlings"},"content":"                int value \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"yanlings"},"content":"                Task.tasks.get(value).mark();","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"yanlings"},"content":"                storage.saveTasks();","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"yanlings"},"content":"                return ui.stringMark(Task.tasks.get(value));","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"yanlings"},"content":"            else if (input.startsWith(\"list\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"yanlings"},"content":"                return ui.showList();","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"yanlings"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"yanlings"},"content":"                int value \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"yanlings"},"content":"                Task deleted \u003d Task.tasks.get(value);","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"yanlings"},"content":"                Task.delete(deleted);","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"yanlings"},"content":"                storage.saveTasks();","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"yanlings"},"content":"                return ui.stringDelete(deleted);","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"yanlings"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":109,"author":{"gitId":"yanlings"},"content":"                int counter \u003d 0;","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"yanlings"},"content":"                String desc \u003d input.replaceAll(\"find \", \"\");","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"yanlings"},"content":"                TaskList.find(desc);","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"yanlings"},"content":"                return TaskList.printFind();","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"yanlings"},"content":"            } else if (input.startsWith(\"bye\")){","lastModifiedDate":"2023-02-06"},{"lineNumber":114,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"Bye, Hope to see you again soon!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"yanlings"},"content":"                return \"Bye, Hope to see you again soon!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"yanlings"},"content":"            } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"yanlings"},"content":"                InvalidArgsHandler checked \u003d new InvalidArgsHandler(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"yanlings"},"content":"                checked.checkForRandomWords(checked.reply);","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"yanlings"},"content":"            storage.saveTasks();","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"yanlings"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":123,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":" * This is a Duke Exception class which returns error messages when the number of parameters do not fit the number needed for each action class.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":" * @author yanlinglim","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"public class DukeException extends ArrayIndexOutOfBoundsException{","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"        super(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"yanlings":11}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":" * This is a class for Event action","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"    protected String from;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    protected String to;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    protected String date;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"     * This is a constructor for event class","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"     * @param description description of event","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"     * @param date date during which the event happens","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"    public Event(String description, String date)  {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"        String[] fromAndTo \u003d date.split(\"/\");","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"        this.from \u003d  fromAndTo[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"        this.from \u003d from.replaceAll(\"from \", \"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"        this.from \u003d this.from.trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"        this.start \u003d LocalDateTime.parse(this.from, formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"        this.to \u003d fromAndTo[1];","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"        this.to \u003d to.replaceAll(\"to\",\"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"        this.end \u003d LocalDateTime.parse(this.to, formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"        Task.actions +\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"     * Returns a string representation of the Event object","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"     * @return String string representation of the Event object","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + from + \" to:\" + to + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"     * Returns a string representation of the Event object in the list","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"     * @return a string representation of the Event object in the list","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"        String timeStr \u003d this.start.format(DateTimeFormatter.ofPattern(\"HH:mm, MMM dd yyyy\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"        String timeEnd \u003d this.end.format(DateTimeFormatter.ofPattern(\"HH:mm, MMM dd yyyy\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"        String date \u003d \"\" + timeStr + \"-\" + timeEnd;","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"        return String.format(\"event || %s || %s || %s\", super.toSaveString(), this.description, date);","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"     * Print string representation when event is added to list","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"yanlings"},"content":"    public void toPrintEventString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"yanlings"},"content":"        System.out.println(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Now you have \" + Task.actions + \" tasks in the list\");","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"yanlings"},"content":"     * Adds event into tasklist","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"yanlings"},"content":"    public void handleEvent() {","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"yanlings"},"content":"        this.toPrintEventString();","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"yanlings"},"content":"        Task.tasks.add(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":73}},{"path":"src/main/java/duke/InvalidArgsHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":" * This is a class to handle the invalid number of arguments for each of the class","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"public class InvalidArgsHandler {","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"    String[] replies;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"    String reply;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"     * This is a constructor to handle invalid arguments for Event and Deadline","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"     * @param replies An array containing the description and dates","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"    public InvalidArgsHandler(String[] replies){","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"        this.replies \u003d replies;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"     * This is a constructor to handle invalid arguments for Todo","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"     * @param reply A string representing the description of Todo","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"    public InvalidArgsHandler(String reply) {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"        this.reply \u003d reply;","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"     * Handles the number of arguments for Event","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"     * @param replies","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"    public void checkForEvent(String[] replies) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"        if (replies.length !\u003d 2) {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"            throw new DukeException(\" OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"     * Handles the number of arguments for Todo","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"     * @param replies","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"    public void checkForToDo(String replies) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"        if (replies.length() \u003c 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"            throw new DukeException(\" OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"     * Handles the number of arguments for deadline","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"     * @param replies","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"    public void checkForDeadline(String[] replies) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"        if (replies.length !\u003d 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"            throw new DukeException(\" OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"yanlings"},"content":"     * Handles Strings that do not contain deadline, todo, list, event, mark, unmark","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"yanlings"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"yanlings"},"content":"    public void checkForRandomWords(String replies) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"yanlings"},"content":"        if (!(toString().startsWith(\"deadline\") || toString().startsWith(\"todo\") || toString().startsWith(\"list\")","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"yanlings"},"content":"                || toString().startsWith(\"event\") || toString().startsWith(\"mark\") || toString().startsWith(\"unmark\"))) {","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"yanlings"},"content":"            throw new DukeException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"yanlings":72}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"import duke.Main;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":" * A constructor to run the GUI","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"public class Launcher{","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"        Application.launch(Main.class,args);","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"yanlings":18}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"            stage.show();","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"yanlings":30}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"Hello! I am Duke! How can I help you today?\", dukeImage));","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"        assert this.scrollPane !\u003d null : \"[scrollPane] FXML was improperly configured.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"        assert this.dialogContainer !\u003d null : \"[dialogContainer] FXML was improperly configured.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"        assert this.userInput !\u003d null : \"[userInput] FXML was improperly configured.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"        assert this.sendButton !\u003d null : \"[sendButton] FXML was improperly configured.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"        );","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"yanlings":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":" * This is a class that helps to split the arguments such that they can be initiated","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"     * Splits the sentence for Deadline into 2","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"     * @param reply","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"     * @return an array that contains words that have been split","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"    public static String[] splitForDeadline(String reply) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"        String[] replies \u003d reply.split(\"/\",2);","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"        InvalidArgsHandler checked \u003d new InvalidArgsHandler(replies);","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"        checked.checkForDeadline(checked.replies);","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"        return replies;","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"     * Return string representation of date for Event","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"     * @param dateCheck","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"     * @return","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"    public static String stringForEvent(String[] dateCheck) {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"        dateCheck[0] \u003d dateCheck[0].replaceAll(\"from \", \"\");","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"        dateCheck[1] \u003d dateCheck[1].replaceAll(\"to \",\"\");","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"        return dateCheck[0] + \"/\" + dateCheck[1];","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"     * Splits the sentence for Event into 2","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"     * @param reply","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"     * @return an array that contains words that have been split","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"    public static String[] splitForEvent(String reply) {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"        String[] replies \u003d reply.split(\"/\",2);","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"        replies[1] \u003d stringForEvent(replies[1].split(\"/\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"        InvalidArgsHandler checked \u003d new InvalidArgsHandler(replies);","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"        checked.checkForEvent(checked.replies);","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"        return replies;","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":42}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.io.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":" * This is the class deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    private String path;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"    File file;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"     * This is the constructor for Storage","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"     * @param path path for the file","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"        this.file \u003d new File(\"text-ui-test/saved-tasks.txt\");","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"     * Handles all the input and makes sure they are formatted so that each object can be initialised","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"    public void handleLoad() throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"        BufferedReader taskLoader \u003d new BufferedReader(new FileReader(this.file));","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"        assert Files.exists(Paths.get(this.path)) : \"The file, \" + this.path + \", does not exist.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"        String words \u003d taskLoader.readLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"        while (words !\u003d null) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"            String[] keywords \u003d words.split(\" \\\\|\\\\| \");","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"            Task current \u003d null;","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"            if (keywords[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"                current \u003d new ToDo(keywords[2]);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"            } else if (keywords[0].equals(\"event\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"                String[] toandfrom \u003d  keywords[3].split(\"-\");","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm, MMM dd yyyy\");","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"                LocalDateTime starting \u003d LocalDateTime.parse(toandfrom[0], formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"                LocalDateTime ending \u003d LocalDateTime.parse(toandfrom[1], formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"                String timeStr \u003d starting.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"                String timeEnd \u003d ending.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"                String total \u003d timeStr +\"/\" + timeEnd;","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"                current \u003d new Event(keywords[2], total);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"            } else if (keywords[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm, MMM dd yyyy\");","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"                LocalDateTime myDateObj \u003d LocalDateTime.parse(keywords[3], formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"                String timeStr \u003d myDateObj.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"                current \u003d new Deadline(keywords[2], timeStr);","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"error\");","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"            if (keywords[1].equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"                current.handleMark();","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"yanlings"},"content":"            Task.tasks.add(current);","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"yanlings"},"content":"            words \u003d taskLoader.readLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"yanlings"},"content":"        taskLoader.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"yanlings"},"content":"     * Saves actions into the text file","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"yanlings"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"yanlings"},"content":"    public void saveTasks() throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"yanlings"},"content":"        BufferedWriter taskWriter \u003d new BufferedWriter(new FileWriter(path));","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"yanlings"},"content":"        String taskInString \u003d \"\";","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"yanlings"},"content":"        for (int i \u003d 0; i\u003c (Task.tasks).size(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"yanlings"},"content":"            taskInString +\u003d Task.tasks.get(i).toSaveString() + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"yanlings"},"content":"        taskWriter.write(taskInString);","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"yanlings"},"content":"        taskWriter.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":80}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":" * This class is a superclass for Deadline,Event and Todo,","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":" * and also the state of task","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"public class Task{","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    public static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    protected String description;","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    protected String words;","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"    static int actions \u003d 0;","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"     * The constructor of task","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"     * @param description description of the task","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"        this.words \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"     * Returns the state of an action is mark done or not in the saved file","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"     * @return 1 or 0 based on the state of task","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"            return \"1\";","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"            return \"0\";","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"     * Returns the state of the task, only in the printed lines","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"     * @return a string","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"     * Returns the string representation of Task","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"     * @return string representation of Task","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"            this.words \u003d  \"[\"+this.getStatusIcon()+\"]\" + this.description;","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"            return this.words;","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"            this.words \u003d \"[\"+this.getStatusIcon()+\"]\" + this.description;","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"            return this.words;","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"yanlings"},"content":"     * Prints String when a task is mark done","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"yanlings"},"content":"    public void mark() {","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"yanlings"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-15"},{"lineNumber":66,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +  this);","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":69,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":70,"author":{"gitId":"yanlings"},"content":"    public void handleMark() {","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"yanlings"},"content":"        this.isDone\u003d true;","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"yanlings"},"content":"     * Prints String when a Task is mark not done","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"yanlings"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-15"},{"lineNumber":78,"author":{"gitId":"yanlings"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":79,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"+ this);","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":81,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"yanlings"},"content":"    public static void delete(Task task) {","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"yanlings"},"content":"        Task.actions -\u003d 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"yanlings"},"content":"        Task.tasks.remove(task);","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"yanlings"},"content":"        task.printDelete();","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"yanlings"},"content":"    public void printDelete() {","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + this);","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Now you have \" + Task.actions + \" tasks in the list\");","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"yanlings":94}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":" * This class will create a list to contain all the Task","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    private static List\u003cTask\u003e taskLists;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    private static List\u003cTask\u003e searchLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"     * This is a constructor for TaskList","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"        taskLists \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"    public static void find(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"        searchLists.clear();","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"        for (Task task: Task.tasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"            if (task.description.contains(description)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"                searchLists.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"    public static String printFind() {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"        if (searchLists.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"            System.out.println(\"Nothing found\");","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"            return \"Nothing found\";","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"        String list \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"        for (int i \u003d 0; i \u003c searchLists.size();i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"            System.out.println(\"\"+ count + \".\" + searchLists.get(i));","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"            list +\u003d \"\"+ count + \".\" + searchLists.get(i);","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"            count +\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"        return list;","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"     * Adds task into tasklists","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"     * @param task that will be added into tasklists","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"        taskLists.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"     * Gets the task based on index","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"     * @param index index of task","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"     * @return the task of that index","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"    public Task get(int index){","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"        return taskLists.get(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"yanlings"},"content":"     * Removes task from tasklists","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"yanlings"},"content":"     * @param task task that is removed","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"yanlings"},"content":"    public void remove(Task task){","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"yanlings"},"content":"        taskLists.remove(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":67}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import duke.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":" * This is a class for Todo task","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"     * This is a constructor for todo","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"     * @param description description of todo","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"        Task.actions +\u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"     * String representation of todo","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"     * @return String representation of todo","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"     * String representation of todo in a saved file","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"     * @return String representation of todo in a saved file","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"        return String.format(\"todo || %s || %s\", super.toSaveString(), this.description);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"     * Print string representation when a todo task is added","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"    public void toPrintToDoString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"        System.out.println(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Now you have \" + Task.actions + \" tasks in the list\");","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"     * Adds todo into tasklist","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"    public void handleToDo() {","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"        this.toPrintToDoString();","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"        Task.tasks.add(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":57}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":" * This class deals with interactions with the user","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"     * Gets the next input","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"     * @return the next input from user","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"    public String getCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"     * Prints out the list of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"     * @return","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"    public String showList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"        String list \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"        System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"        int listCount \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"        for (Task element: Task.tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"            if (element !\u003d null) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"                list +\u003d \"\" + listCount + \".\" + element +\"\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"yanlings"},"content":"                System.out.println(\"\" + listCount + \".\" + element);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yanlings"},"content":"                listCount +\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yanlings"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"yanlings"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"yanlings"},"content":"        return list;","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"yanlings"},"content":"     * Tells user that their task has been added to the task list.","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"yanlings"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"yanlings"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"yanlings"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"yanlings"},"content":"        String addToDoString \u003d \"You have added new tasks\"","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"yanlings"},"content":"                + \"\\n added: \" + task.toString()","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"yanlings"},"content":"                + \"\\nyou have \" + String.valueOf(Task.actions) + \" task(s)\";","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"yanlings"},"content":"        return addToDoString;","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"yanlings"},"content":"     * Returns String in GUI when a Task is mark done","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"yanlings"},"content":"     * @param task task that is marked done","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"yanlings"},"content":"     * @return String that states that a Task is marked done","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"yanlings"},"content":"    public String stringMark(Task task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"yanlings"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"yanlings"},"content":"     * Returns String in GUI when a Task is not marked done","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"yanlings"},"content":"     * @param task task that is marked not done","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"yanlings"},"content":"     * @return String representation that states a Task is marked not done","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"yanlings"},"content":"    public String stringUnmark(Task task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"yanlings"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"yanlings"},"content":"     * Returns String representation of the task that is deleted","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"yanlings"},"content":"     * @param task Task that is deleted from the list","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"yanlings"},"content":"     * @return String representation of the task that is deleted","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"yanlings"},"content":"    public String stringDelete(Task task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"yanlings"},"content":"        String deleted \u003d \"Noted. I\u0027ve removed this task: \\n\" + task;","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"yanlings"},"content":"        deleted +\u003d \"Now you have \" + Task.actions + \" tasks in the list\";","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"yanlings"},"content":"        return deleted;","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"yanlings"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"yanlings"},"content":"     * Prints error","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"yanlings"},"content":"     * @param e","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"yanlings"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"yanlings"},"content":"    public void printError(String e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"yanlings"},"content":"        System.out.println(e + \"\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":84}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"yanlings":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"yanlings":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"import duke.ToDo;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"import duke.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"        assertEquals(\"[D][ ]read book (by:Sunday 4pm)\",","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"                new Deadline(\"read book\", \"Sunday 4pm\").toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":14}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"import duke.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"public class EventTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"        assertEquals(\"[E][ ]read book (from:2019-02-02 1800to:2019-02-02 1830)\",","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"                new Event(\"read book\",\"2019-02-02 1800/2019-02-02 1830\").toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":15}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"import duke.ToDo;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"        assertEquals(\"[T][ ]read book\",","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"                new ToDo(\"read book\").toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yanlings":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"todo borrow book","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"yanlings":1}},{"path":"text-ui-test/saved-tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"yanlings"},"content":"event || 0 ||  meeting  || 18:00, Feb 02 2019-18:30, Feb 02 2019","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"yanlings"},"content":"deadline || 0 || meeting  || 18:00, Feb 02 2019","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"yanlings"},"content":"deadline || 0 || meeting  || 18:00, Feb 02 2019","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  eat lunch","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"yanlings"},"content":"event || 0 ||  meeting  || 18:00, Feb 02 2019-18:30, Feb 02 2019","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"yanlings"},"content":"event || 0 ||  meeting  || 18:00, Feb 02 2019-18:30, Feb 02 2019","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"yanlings"},"content":"deadline || 0 || meeting  || 18:30, Feb 02 2019","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"yanlings"},"content":"event || 0 ||  meeting  || 18:00, Feb 02 2019-18:30, Feb 02 2019","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"yanlings"},"content":"event || 0 ||  meeting  || 18:00, Feb 02 2019-18:30, Feb 02 2019","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"yanlings"},"content":"deadline || 0 || lunch  || 18:00, Feb 02 2019","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"yanlings"},"content":"todo || 0 ||  read book","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"yanlings":29}}]
