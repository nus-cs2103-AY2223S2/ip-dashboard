[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"checkstyle {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yyj-02":6,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"T | 1 | read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"D | 1 | return book | 2022-06-01","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"E | 0 | project meeting | 2022-06-01 | 2022-07-03","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"E | 1 | Test | 2022-02-10 | 2022-03-01","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"T | 1 | test","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"yyj-02":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.DukeException;","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import parser.Request;","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import storage.LocalStorage;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import ui.Ui;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":" * The main duke program.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    private LocalStorage localTaskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"            this.localTaskList \u003d new LocalStorage(filepath);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"            taskList \u003d this.localTaskList.createTaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"            ui.printFormattedError(error);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"        this.tasks \u003d new TaskList(taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"     * Begins the execution of the Duke program.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"    public void run() {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"        this.ui.printStartUpMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        while (true) {","lastModifiedDate":"2023-01-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            String request \u003d scanner.nextLine();","lastModifiedDate":"2023-01-12"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"            if (\"BYE\".equalsIgnoreCase(request)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"                if (this.localTaskList !\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"                    this.localTaskList.writeFromProgramTaskList(this.tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-01-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-12"},{"lineNumber":51,"author":{"gitId":"yyj-02"},"content":"            try {","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"yyj-02"},"content":"                Command command \u003d new Request(request).parse();","lastModifiedDate":"2023-01-14"},{"lineNumber":53,"author":{"gitId":"yyj-02"},"content":"                String reply \u003d command.run(this.tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"yyj-02"},"content":"                this.ui.printFormattedResponse(reply);","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"yyj-02"},"content":"            } catch (DukeException error) {","lastModifiedDate":"2023-01-15"},{"lineNumber":56,"author":{"gitId":"yyj-02"},"content":"                this.ui.printFormattedError(error);","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"yyj-02"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":60,"author":{"gitId":"yyj-02"},"content":"        this.ui.printExitingMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yyj-02":44,"-":18}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"     * Processes the command and return a reply.","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"     * @param taskList the storage","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"     * @return Return the reply.","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    public abstract String run(TaskList taskList);","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":13}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":" * Command component that executes a deadline command.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"    private String task;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"     * Constructor for a create deadline command.","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"     * @param task     task to be added","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"     * @param deadline deadline for task","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    public DeadlineCommand(String task, LocalDate deadline) {","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"    public String run(TaskList taskList) {","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"        Deadline newDeadline \u003d taskList.createDeadline(this.task, this.deadline);","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + newDeadline + \"\\nNow you have \" + taskList.countTask()","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"            return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"        if (!(o instanceof DeadlineCommand)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"        DeadlineCommand that \u003d (DeadlineCommand) o;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"        if (!task.equals(that.task)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"        return deadline.equals(that.deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":48}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":" * Command component that executes a delete command.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"    private int index;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"     * Constructor for a delete task command.","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"     * @param index index of task to be deleted","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    public String run(TaskList taskList) throws InvalidArgumentException {","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"            String taskDescription \u003d taskList.showTask(this.index).toString();","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"            taskList.deleteTask(this.index);","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"            return \"Noted. I\u0027ve removed this task:\\n  \" + taskDescription + \"\\nNow you have \" + taskList.countTask()","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"                    + \" tasks in the list.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(\"Index \" + (this.index + 1) + \" is out of bound.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"            return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"        if (!(o instanceof DeleteCommand)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"        DeleteCommand that \u003d (DeleteCommand) o;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"        return index \u003d\u003d that.index;","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"yyj-02":46}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import task.Event;","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":" * Command component that executes an event command.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    private String task;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    private LocalDate startTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    private LocalDate endTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"     * Constructor for a create event command.","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"     * @param task      task to be added","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"     * @param startTime start time for task","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"     * @param endTime   end time for task","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"    public EventCommand(String task, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"    public String run(TaskList taskList) throws InvalidArgumentException {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"        if (this.endTime.isBefore(this.startTime)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(\"End date must not be earlier than start date.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        Event newEvent \u003d taskList.createEvent(this.task, this.startTime, this.endTime);","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + newEvent + \"\\nNow you have \" + taskList.countTask()","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"            return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"        if (!(o instanceof EventCommand)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"        EventCommand that \u003d (EventCommand) o;","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"yyj-02"},"content":"        if (!task.equals(that.task)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"yyj-02"},"content":"        if (!startTime.equals(that.startTime)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"yyj-02"},"content":"        return endTime.equals(that.endTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":58,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":58}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"    private String query;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"     * Constructor for query command.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"     * @param query the query string","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    public String run(TaskList taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"                taskList.indexTask().stream()","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"                        .filter((task) -\u003e task.getTask().toLowerCase().contains(this.query.toLowerCase()))","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"                        .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"            return \"There are no tasks matching this query.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"            String res \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"            for (int i \u003d 0; i \u003c filteredList.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"                res +\u003d String.format(\"%d.%s\\n\", i + 1, filteredList.get(i));","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"            return res.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"        if (!(o instanceof FindCommand)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"        FindCommand that \u003d (FindCommand) o;","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"        return query.equals(that.query);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"yyj-02":50}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":" * Command component that executes a list command.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"    public String run(TaskList taskList) {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"        String res \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"        if (taskList.indexTask().size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"            return \"There are currently no task, create one now!\";","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        for (int i \u003d 0; i \u003c taskList.indexTask().size(); i++) {","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"            res +\u003d (i + 1) + \". \" + taskList.indexTask().get(i) + \"\\n\";","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"        return res.trim();","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        return obj instanceof ListCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":25}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":" * Command component that executes a mark command.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"    private int index;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"     * Constructor for a mark task command.","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"     * @param index index of task to be marked completed","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    public String run(TaskList taskList) throws InvalidArgumentException {","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"            taskList.markTask(this.index);","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + taskList.showTask(this.index);","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(\"Index \" + (this.index + 1) + \" is out of bound.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"            return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"        if (!(o instanceof MarkCommand)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"        MarkCommand that \u003d (MarkCommand) o;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"        return index \u003d\u003d that.index;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":44}},{"path":"src/main/java/command/OnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import task.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"import task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":" * Command component that executes an on command.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"public class OnCommand extends Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    private LocalDate queryDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"     * Constructor for a date query on command.","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"     * @param queryDate deadline for task","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"    public OnCommand(LocalDate queryDate) {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"        this.queryDate \u003d queryDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"    public String run(TaskList taskList) {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"        ArrayList\u003cTask\u003e taskOnQueryDate \u003d new ArrayList\u003c\u003e(taskList.indexTask().stream().filter(task -\u003e","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"                        (task instanceof Deadline \u0026\u0026 ((Deadline) task).daysToDeadline(this.queryDate) \u003d\u003d 0) ||","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"                                (task instanceof Event \u0026\u0026 ((Event) task).daysToEvent(this.queryDate) \u003d\u003d 0))","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        if (taskOnQueryDate.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"            return \"You have no task on \" + this.queryDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"        String res \u003d \"There are \" + taskOnQueryDate.size() + \" tasks on \"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"                + this.queryDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \":\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"        for (int i \u003d 0; i \u003c taskOnQueryDate.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"            res +\u003d (i + 1) + \". \" + taskOnQueryDate.get(i) + \"\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"        return res.trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"yyj-02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"yyj-02"},"content":"            return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"yyj-02"},"content":"        if (!(o instanceof OnCommand)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"yyj-02"},"content":"        OnCommand onCommand \u003d (OnCommand) o;","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"yyj-02"},"content":"        return queryDate.equals(onCommand.queryDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"yyj-02":61}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import task.Todo;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":" * Command component that executes an todo command.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"    private String task;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"     * Constructor for a create todo command.","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"     * @param task task to be added","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    public TodoCommand(String task) {","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    public String run(TaskList taskList) {","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        Todo newTodo \u003d taskList.createTodo(this.task);","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + newTodo + \"\\nNow you have \" + taskList.countTask()","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"            return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"        if (!(o instanceof TodoCommand)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"        TodoCommand that \u003d (TodoCommand) o;","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"        return task.equals(that.task);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":41}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":" * Command component that executes an unmark command.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"    private int index;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"     * Constructor for a mark task command.","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"     * @param index index of task to be marked completed","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    public String run(TaskList taskList) throws InvalidArgumentException {","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"            taskList.unmarkTask(this.index);","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n\" + taskList.showTask(this.index);","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(\"Index \" + (this.index + 1) + \" is out of bound.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"            return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"        if (!(o instanceof UnmarkCommand)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"        UnmarkCommand that \u003d (UnmarkCommand) o;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"        return index \u003d\u003d that.index;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":44}},{"path":"src/main/java/dukeexeption/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package dukeexeption;","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"        return super.getMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"yyj-02":12}},{"path":"src/main/java/dukeexeption/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package dukeexeption;","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":" * Exception when the user inputs an invalid argument in the command.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"    public InvalidArgumentException(String errorMessage) {","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"yyj-02":10}},{"path":"src/main/java/dukeexeption/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package dukeexeption;","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":" * Exception when the user is missing an argument in the command.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"    public MissingArgumentException(String errorMessage) {","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"yyj-02":10}},{"path":"src/main/java/dukeexeption/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package dukeexeption;","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":" * Exception when the user input an unknown argument in the command.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"yyj-02":14}},{"path":"src/main/java/parser/DeadlineParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import java.lang.annotation.Inherited;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":" * Parser that handles command that starts with deadline keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"public class DeadlineParser implements Parser {","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    public Command parse(String requestContent) throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        String[] splitWithBy \u003d requestContent.split(\" /by \", 2);","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"        String task \u003d splitWithBy[0].trim();","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"        if (\"\".equals(task)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"            throw new MissingArgumentException(\"The description of a deadline cannot be empty. \"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"                    + \"Format: deadline [task] /by [YYYY-MM-DD]\");","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        } else if (splitWithBy.length !\u003d 2 || \"\".equals(splitWithBy[1].trim())) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"            throw new MissingArgumentException(\"The deadline cannot be empty. \"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"                    + \"Format: deadline [task] /by [YYYY-MM-DD]\");","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"        LocalDate deadline;","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"            deadline \u003d LocalDate.parse(splitWithBy[1].trim());","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"                    \"Event date format should be in the format YYYY-MM-DD (e.g. 2007-12-03)\");","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"        return new DeadlineCommand(task, deadline);","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":35}},{"path":"src/main/java/parser/DeleteParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":" * Parser that handles command that starts with delete keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"public class DeleteParser implements Parser {","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    public Command parse(String requestContent) throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        if (\"\".equals(requestContent.trim())) {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"            throw new MissingArgumentException(\"The index to be deleted cannot be empty. \" + \"Format: delete [index]\");","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"            int index \u003d Integer.parseInt(requestContent.trim()) - 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(\"The index to be deleted must be an integer.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"yyj-02":24}},{"path":"src/main/java/parser/EventParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import command.EventCommand;","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":" * Parser that handles command that starts with event keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"public class EventParser implements Parser {","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    public Command parse(String requestContent) throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        String[] splitWithFrom \u003d requestContent.split(\" /from \", 2);","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        String task \u003d splitWithFrom[0].trim();","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"        if (\"\".equals(task)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"            throw new MissingArgumentException(\"The description of an event cannot be empty. \"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"                    + \"Format: event [task] /from [YYYY-MM-DD] /to [YYYY-MM-DD]\");","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        } else if (splitWithFrom.length !\u003d 2) {","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"            throw new MissingArgumentException(\"The start date cannot be empty. \"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"                    + \"Format: event [task] /from [YYYY-MM-DD] /to [YYYY-MM-DD]\");","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"        String[] splitWithTo \u003d splitWithFrom[1].split(\" /to \", 2);","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"        LocalDate startTime;","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"        if (splitWithTo[0].trim().equals(\"\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"            throw new MissingArgumentException(\"The start date cannot be empty. \"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"                    + \"Format: event [task] /from [YYYY-MM-DD] /to [YYYY-MM-DD]\");","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"            startTime \u003d LocalDate.parse(splitWithTo[0].trim());","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(\"Start date format should be in the format \"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"                    + \"YYYY-MM-DD (e.g. 2007-12-03)\");","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"        if (splitWithTo.length !\u003d 2 || \"\".equals(splitWithTo[1].trim())) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"            throw new MissingArgumentException(\"The end date cannot be empty. \"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"                    + \"Format: event [task] /from [YYYY-MM-DD] /to [YYYY-MM-DD]\");","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"        LocalDate endTime;","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"            endTime \u003d LocalDate.parse(splitWithTo[1].trim());","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(\"End date format should be in the format \"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"                    + \"YYYY-MM-DD (e.g. 2007-12-03)\");","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"yyj-02"},"content":"        return new EventCommand(task, startTime, endTime);","lastModifiedDate":"2023-01-14"},{"lineNumber":51,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":52,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":52}},{"path":"src/main/java/parser/FindParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import command.FindCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"public class FindParser implements Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"    public Command parse(String requestContent) throws MissingArgumentException {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"        if (\"\".equals(requestContent.trim())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"            throw new MissingArgumentException(\"The query string cannot be empty. \" + \"Format: find [query]\");","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"        String query \u003d requestContent.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        return new FindCommand(query);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"yyj-02":16}},{"path":"src/main/java/parser/ListParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import command.ListCommand;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":" * Parser that handles command that starts with list keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"public class ListParser implements Parser {","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"    public Command parse(String requestContent) {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"        return new ListCommand();","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":14}},{"path":"src/main/java/parser/MarkParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":" * Parser that handles command that starts with mark keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"public class MarkParser implements Parser {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    public Command parse(String requestContent) throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        if (\"\".equals(requestContent.trim())) {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"            throw new MissingArgumentException(","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"                    \"The index to be marked completed cannot be empty. \" + \"Format: mark [index]\");","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"            int index \u003d Integer.parseInt(requestContent.trim()) - 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(\"The index to be marked completed must be an integer.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":25}},{"path":"src/main/java/parser/OnParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import command.OnCommand;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":" * Parser that handles command that starts with on keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"public class OnParser implements Parser {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    public Command parse(String requestContent) throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        String dateString \u003d requestContent.trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        if (\"\".equals(dateString)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"            throw new MissingArgumentException(\"The date to be queried cannot be empty. \"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"                    + \"Format: on [YYYY-MM-DD]\");","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"            LocalDate queryDate \u003d LocalDate.parse(requestContent.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"            return new OnCommand(queryDate);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"                    \"Query date format should be in the format YYYY-MM-DD (e.g. 2007-12-03)\");","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"yyj-02":29}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"public interface Parser {","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"     * Parses a request to generate command.","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"     * @param requestContent content to be parsed","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"     * @return A corresponding command.","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    Command parse(String requestContent);","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":13}},{"path":"src/main/java/parser/Request.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.UnknownCommandException;","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":" * The entry point of user input commands.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"public class Request {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    private String request;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    private String requestType;","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    private String requestContent;","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    public Request(String request) {","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"     * Parse the request string to return an executable command.","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"     * @return A corresponding command.","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    public Command parse() throws UnknownCommandException, MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"        preprocess();","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"        switch (this.requestType) {","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"        case \"LIST\":","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"            return new ListParser().parse(this.requestContent);","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"        case \"MARK\":","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"            return new MarkParser().parse(this.requestContent);","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"        case \"UNMARK\":","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"            return new UnmarkParser().parse(this.requestContent);","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        case \"TODO\":","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"            return new TodoParser().parse(this.requestContent);","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"            return new DeadlineParser().parse(this.requestContent);","lastModifiedDate":"2023-01-14"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"        case \"EVENT\":","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"            return new EventParser().parse(this.requestContent);","lastModifiedDate":"2023-01-14"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"        case \"DELETE\":","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"            return new DeleteParser().parse(this.requestContent);","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"        case \"ON\":","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"            return new OnParser().parse(this.requestContent);","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"        case \"FIND\":","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"            return new FindParser().parse(this.requestContent);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"        default:","lastModifiedDate":"2023-01-14"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-01-15"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":50,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":51,"author":{"gitId":"yyj-02"},"content":"    private void preprocess() {","lastModifiedDate":"2023-01-14"},{"lineNumber":52,"author":{"gitId":"yyj-02"},"content":"        this.requestType \u003d this.request.split(\" \", 2)[0].toUpperCase();","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":54,"author":{"gitId":"yyj-02"},"content":"        this.requestContent \u003d this.request.split(\" \", 2).length \u003d\u003d 2","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"yyj-02"},"content":"                              ? this.request.split(\" \", 2)[1]","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"yyj-02"},"content":"                              : \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":58,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":58}},{"path":"src/main/java/parser/TodoParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import command.TodoCommand;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":" * Parser that handles command that starts with todo keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"public class TodoParser implements Parser {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    public Command parse(String requestContent) throws MissingArgumentException {","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"        if (\"\".equals(requestContent.trim())) {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"            throw new MissingArgumentException(\"The description of a todo cannot be empty. \" + \"Format: todo [task]\");","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        String task \u003d requestContent.trim();","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        return new TodoCommand(task);","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":19}},{"path":"src/main/java/parser/UnmarkParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":" * Parser that handles command that starts with unmark keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"public class UnmarkParser implements Parser {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    public Command parse(String requestContent) throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        if (\"\".equals(requestContent.trim())) {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"            throw new MissingArgumentException(\"The index to be marked uncompleted cannot be empty. \"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"                    + \"Format: unmark [index]\");","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"            int index \u003d Integer.parseInt(requestContent.trim()) - 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(\"The index to be marked uncompleted must be an integer.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yyj-02":25}},{"path":"src/main/java/storage/LocalStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package storage;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"import command.EventCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"import command.TodoCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.UnknownCommandException;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"import task.Task;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":" * Local storage class that abstracts the communications between local storage and the program task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"public class LocalStorage {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"    File dataFile;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"    public LocalStorage(String filepath) {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"        if (\"\".equals(filepath.trim())) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(\"Filepath cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"        File dataFile \u003d new File(filepath);","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"        dataFile.getParentFile().mkdirs();","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"            } catch (IOException error) {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"                error.printStackTrace();","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"        } else if (dataFile.exists() \u0026\u0026 dataFile.isDirectory()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(\"Directory path provided, change filepath to a path to a file.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"        this.dataFile \u003d dataFile;","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"     * Creates a task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"     * @return An array of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"yyj-02"},"content":"    public ArrayList\u003cTask\u003e createTaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"yyj-02"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"yyj-02"},"content":"            FileReader fr \u003d new FileReader(this.dataFile);","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"yyj-02"},"content":"            BufferedReader reader \u003d new BufferedReader(fr);","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"yyj-02"},"content":"            String s;","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"yyj-02"},"content":"            int currIndex \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"yyj-02"},"content":"            while ((s \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"yyj-02"},"content":"                String[] data \u003d s.split(\" \\\\| \");","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"yyj-02"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"yyj-02"},"content":"                    String taskType \u003d data[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"yyj-02"},"content":"                    String taskIsCompleted \u003d data[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"yyj-02"},"content":"                    String task \u003d data[2];","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"yyj-02"},"content":"                    switch (taskType) {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"yyj-02"},"content":"                    case \"T\":","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"yyj-02"},"content":"                        new TodoCommand(task).run(taskList);","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"yyj-02"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"yyj-02"},"content":"                    case \"D\":","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"yyj-02"},"content":"                        String deadlineString \u003d data[3];","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"yyj-02"},"content":"                        new DeadlineCommand(task, LocalDate.parse(deadlineString)).run(taskList);","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"yyj-02"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"yyj-02"},"content":"                    case \"E\":","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"yyj-02"},"content":"                        String eventStartTimeString \u003d data[3];","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"yyj-02"},"content":"                        String eventEndTimeString \u003d data[4];","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"yyj-02"},"content":"                        new EventCommand(task, LocalDate.parse(eventStartTimeString),","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"yyj-02"},"content":"                                LocalDate.parse(eventEndTimeString))","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"yyj-02"},"content":"                                .run(taskList);","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"yyj-02"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"yyj-02"},"content":"                    default:","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"yyj-02"},"content":"                        System.out.println(\"Error occurs at: \" + s);","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"yyj-02"},"content":"                        throw new UnknownCommandException(\"Datafile provided is corrupted,\"","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"yyj-02"},"content":"                                + \"create a new file or follow the format.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"yyj-02"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"yyj-02"},"content":"                    switch (taskIsCompleted) {","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"yyj-02"},"content":"                    case \"0\":","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"yyj-02"},"content":"                        new UnmarkCommand(currIndex).run(taskList);","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"yyj-02"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"yyj-02"},"content":"                    case \"1\":","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"yyj-02"},"content":"                        new MarkCommand(currIndex).run(taskList);","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"yyj-02"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"yyj-02"},"content":"                    default:","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"yyj-02"},"content":"                        System.out.println(\"Error occurs at: \" + s);","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"yyj-02"},"content":"                        throw new UnknownCommandException(\"Datafile provided is corrupted,\"","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"yyj-02"},"content":"                                + \"create a new file or follow the format.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"yyj-02"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"yyj-02"},"content":"                    currIndex++;","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"yyj-02"},"content":"                } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"yyj-02"},"content":"                    throw new InvalidArgumentException(\"Datafile provided is corrupted,\"","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"yyj-02"},"content":"                            + \"create a new file or follow the format.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"yyj-02"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"yyj-02"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"yyj-02"},"content":"            reader.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"yyj-02"},"content":"            fr.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"yyj-02"},"content":"            return taskList.indexTask();","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"yyj-02"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(error.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"yyj-02"},"content":"     * Writes tasks to the file stored.","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"yyj-02"},"content":"     * @param taskList task list to load the data from","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"yyj-02"},"content":"    public void writeFromProgramTaskList(TaskList taskList) {","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"yyj-02"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"yyj-02"},"content":"            FileWriter fw \u003d new FileWriter(this.dataFile, false);","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"yyj-02"},"content":"            BufferedWriter writer \u003d new BufferedWriter(fw);","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"yyj-02"},"content":"            for (Task task : taskList.indexTask()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"yyj-02"},"content":"                writer.write(task.toDataString());","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"yyj-02"},"content":"                writer.newLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"yyj-02"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"yyj-02"},"content":"            writer.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"yyj-02"},"content":"            fw.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"yyj-02"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"yyj-02"},"content":"            throw new InvalidArgumentException(error.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"yyj-02":135}},{"path":"src/main/java/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package storage;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-13"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import task.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import task.Todo;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":" * Program memory that stores a task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"public class TaskList {","lastModifiedDate":"2023-01-13"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"     * Constructor for the task list.","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"     * Constructor for the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"     * @param tasks tasks to be populated","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"     * Adds a new todo task.","lastModifiedDate":"2023-01-13"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"     * @param task task to be added","lastModifiedDate":"2023-01-13"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"     * @return The new todo","lastModifiedDate":"2023-01-13"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"    public Todo createTodo(String task) {","lastModifiedDate":"2023-01-13"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"        Todo newTodo \u003d new Todo(task);","lastModifiedDate":"2023-01-13"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"        this.tasks.add(newTodo);","lastModifiedDate":"2023-01-13"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"        return newTodo;","lastModifiedDate":"2023-01-13"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"     * Adds a new deadline task.","lastModifiedDate":"2023-01-13"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"     * @param task     task to be added","lastModifiedDate":"2023-01-13"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"     * @param deadline deadline of the task","lastModifiedDate":"2023-01-13"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"     * @return The new deadline","lastModifiedDate":"2023-01-13"},{"lineNumber":50,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":51,"author":{"gitId":"yyj-02"},"content":"    public Deadline createDeadline(String task, LocalDate deadline) {","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"yyj-02"},"content":"        Deadline newDeadline \u003d new Deadline(task, deadline);","lastModifiedDate":"2023-01-13"},{"lineNumber":53,"author":{"gitId":"yyj-02"},"content":"        this.tasks.add(newDeadline);","lastModifiedDate":"2023-01-13"},{"lineNumber":54,"author":{"gitId":"yyj-02"},"content":"        return newDeadline;","lastModifiedDate":"2023-01-13"},{"lineNumber":55,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":56,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":57,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":58,"author":{"gitId":"yyj-02"},"content":"     * Adds a new event task.","lastModifiedDate":"2023-01-13"},{"lineNumber":59,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"yyj-02"},"content":"     * @param task      task to be added","lastModifiedDate":"2023-01-13"},{"lineNumber":61,"author":{"gitId":"yyj-02"},"content":"     * @param startTime starting time of the task","lastModifiedDate":"2023-01-13"},{"lineNumber":62,"author":{"gitId":"yyj-02"},"content":"     * @param endTime   ending time of the task","lastModifiedDate":"2023-01-13"},{"lineNumber":63,"author":{"gitId":"yyj-02"},"content":"     * @return The new task","lastModifiedDate":"2023-01-13"},{"lineNumber":64,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":65,"author":{"gitId":"yyj-02"},"content":"    public Event createEvent(String task, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"yyj-02"},"content":"        Event newEvent \u003d new Event(task, startTime, endTime);","lastModifiedDate":"2023-01-13"},{"lineNumber":67,"author":{"gitId":"yyj-02"},"content":"        this.tasks.add(newEvent);","lastModifiedDate":"2023-01-13"},{"lineNumber":68,"author":{"gitId":"yyj-02"},"content":"        return newEvent;","lastModifiedDate":"2023-01-13"},{"lineNumber":69,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":70,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":71,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":72,"author":{"gitId":"yyj-02"},"content":"     * Lists all tasks.","lastModifiedDate":"2023-01-13"},{"lineNumber":73,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"yyj-02"},"content":"     * @return A list of tasks.","lastModifiedDate":"2023-01-13"},{"lineNumber":75,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":76,"author":{"gitId":"yyj-02"},"content":"    public ArrayList\u003cTask\u003e indexTask() {","lastModifiedDate":"2023-01-13"},{"lineNumber":77,"author":{"gitId":"yyj-02"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-13"},{"lineNumber":78,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":79,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":80,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":81,"author":{"gitId":"yyj-02"},"content":"     * Shows one task.","lastModifiedDate":"2023-01-13"},{"lineNumber":82,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"yyj-02"},"content":"     * @param index index of the task item","lastModifiedDate":"2023-01-13"},{"lineNumber":84,"author":{"gitId":"yyj-02"},"content":"     * @return The task item.","lastModifiedDate":"2023-01-13"},{"lineNumber":85,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":86,"author":{"gitId":"yyj-02"},"content":"    public Task showTask(int index) {","lastModifiedDate":"2023-01-13"},{"lineNumber":87,"author":{"gitId":"yyj-02"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-13"},{"lineNumber":88,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":89,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":90,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":91,"author":{"gitId":"yyj-02"},"content":"     * Marks task as completed.","lastModifiedDate":"2023-01-13"},{"lineNumber":92,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"yyj-02"},"content":"     * @param index index of task","lastModifiedDate":"2023-01-13"},{"lineNumber":94,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":95,"author":{"gitId":"yyj-02"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-01-13"},{"lineNumber":96,"author":{"gitId":"yyj-02"},"content":"        this.tasks.get(index).markCompleted();","lastModifiedDate":"2023-01-13"},{"lineNumber":97,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":98,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":99,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":100,"author":{"gitId":"yyj-02"},"content":"     * Marks task as uncompleted.","lastModifiedDate":"2023-01-13"},{"lineNumber":101,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"yyj-02"},"content":"     * @param index index of task","lastModifiedDate":"2023-01-13"},{"lineNumber":103,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":104,"author":{"gitId":"yyj-02"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-01-13"},{"lineNumber":105,"author":{"gitId":"yyj-02"},"content":"        this.tasks.get(index).unmarkCompleted();","lastModifiedDate":"2023-01-13"},{"lineNumber":106,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":107,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":108,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":109,"author":{"gitId":"yyj-02"},"content":"     * Deletes task.","lastModifiedDate":"2023-01-15"},{"lineNumber":110,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"yyj-02"},"content":"     * @param index index of task","lastModifiedDate":"2023-01-15"},{"lineNumber":112,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":113,"author":{"gitId":"yyj-02"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-15"},{"lineNumber":114,"author":{"gitId":"yyj-02"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-01-15"},{"lineNumber":115,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":116,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":117,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":118,"author":{"gitId":"yyj-02"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-01-13"},{"lineNumber":119,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"yyj-02"},"content":"     * @return Number of tasks.","lastModifiedDate":"2023-01-13"},{"lineNumber":121,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":122,"author":{"gitId":"yyj-02"},"content":"    public int countTask() {","lastModifiedDate":"2023-01-13"},{"lineNumber":123,"author":{"gitId":"yyj-02"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-13"},{"lineNumber":124,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":125,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"yyj-02":125}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package task;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":" * Task component representing a deadline task.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    public Deadline(String task, LocalDate deadline) {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"        super(task, false);","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    public Deadline(String task, LocalDate deadline, boolean isCompleted) {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"        super(task, isCompleted);","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"     * Calculates the amount of days to the deadline.","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"     * @param date date to be queried","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"     * @return The days to deadline (positive signifies deadline in future).","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"    public long daysToDeadline(LocalDate date) {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"        return ChronoUnit.DAYS.between(date, this.deadline);","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        return String.format(\"[D]%s %s (by: %s)\", super.getFormattedStatus(), super.task,","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"                super.getFormattedDate(this.deadline));","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"    public String toDataString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"        return \"D | \" + (this.isCompleted ? \"1\" : \"0\") + \" | \" + super.task + \" | \" + this.deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"            return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"yyj-02"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"yyj-02"},"content":"        Deadline deadline1 \u003d (Deadline) o;","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"yyj-02"},"content":"        return deadline.equals(deadline1.deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"yyj-02":59}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package task;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":" * Task component representing an event task.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"    private LocalDate startTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"    private LocalDate endTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    public Event(String task, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        super(task, false);","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    public Event(String task, LocalDate startTime, LocalDate endTime, boolean isCompleted) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        super(task, isCompleted);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"     * Calculates the amount of days to the event.","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"     * @param date date to be queried","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"     * @return The days to event (positive signifies deadline in future).","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"    public long daysToEvent(LocalDate date) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"        if (date.isBefore(this.startTime)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"            return ChronoUnit.DAYS.between(date, this.startTime);","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        } else if (date.isAfter(this.endTime)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"            return ChronoUnit.DAYS.between(date, this.endTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"        } else {","lastModifiedDate":"2023-01-13"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"            return 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"        return String.format(\"[E]%s %s (from: %s to: %s)\", super.getFormattedStatus(), super.task,","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"                super.getFormattedDate(this.startTime), super.getFormattedDate(this.endTime));","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"    public String toDataString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"        return \"E | \" + (this.isCompleted ? \"1\" : \"0\") + \" | \" + super.task + \" | \" + this.startTime + \" | \"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"yyj-02"},"content":"                + this.endTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"yyj-02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"yyj-02"},"content":"            return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"yyj-02"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"yyj-02"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"yyj-02"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"yyj-02"},"content":"        if (!startTime.equals(event.startTime)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"yyj-02"},"content":"        return endTime.equals(event.endTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"yyj-02":72}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package task;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"    String task;","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"    boolean isCompleted;","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"    public Task(String task, boolean isCompleted) {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"     * Retrieves the task string.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"     * @return A task string.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    public String getTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        return this.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"     * Toggles todo as completed.","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"    public void markCompleted() {","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-01-13"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"     * Toggles todo as uncompleted.","lastModifiedDate":"2023-01-13"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"    public void unmarkCompleted() {","lastModifiedDate":"2023-01-13"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-13"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"     * Returns the formatted string to store in datafile.","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"     * @return A formatted string for storage in datafile.","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"    public abstract String toDataString();","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"    public String getFormattedStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"        return isCompleted ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"    public String getFormattedDate(LocalDate date) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"yyj-02"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"yyj-02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"yyj-02"},"content":"            return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"yyj-02"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"yyj-02"},"content":"        Task task1 \u003d (Task) o;","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"yyj-02"},"content":"        if (isCompleted !\u003d task1.isCompleted) {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"yyj-02"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"yyj-02"},"content":"        return task.equals(task1.task);","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"yyj-02":69}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package task;","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":" * Task component representing a todo task.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"    public Todo(String task) {","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"        super(task, false);","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"    public Todo(String task, boolean isCompleted) {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"        super(task, isCompleted);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        return String.format(\"[T]%s %s\", super.getFormattedStatus(), super.task);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    public String toDataString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        return \"T | \" + (this.isCompleted ? \"1\" : \"0\") + \" | \" + super.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"        return super.equals(obj);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"yyj-02":29}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package ui;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.DukeException;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"public class Ui {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"    private final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"    private final String INTRODUCTION_MESSAGE \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"            + \"What can I do for you?\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    private final String EXITING_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    public void printStartUpMessage() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        System.out.println(this.LOGO);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        this.printFormattedResponse(this.INTRODUCTION_MESSAGE);","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    public void printExitingMessage() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        this.printFormattedResponse(this.EXITING_MESSAGE);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"     * Prints the formatted response in the console.","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"     * @param response the string to be printed","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"    public void printFormattedResponse(String response) {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"        final int INDENTS \u003d 4;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"        String lineAddedResponse \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"                + \" \" + response.replace(\"\\n\", \"\\n\" + \" \")","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"                + \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"        String indentedResponse \u003d \" \".repeat(INDENTS)","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"                + lineAddedResponse.replace(\"\\n\", \"\\n\" + \" \".repeat(INDENTS));","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"        System.out.println(indentedResponse);","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"     * Prints the formatted error in the console.","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"     * @param exception the exception to be printed","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"    public void printFormattedError(DukeException exception) {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"        printFormattedResponse(\"☹ OOPS!!! \" + exception.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"yyj-02":49}},{"path":"src/test/java/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    public void init() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    public void shouldAddDeadline() {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        new DeadlineCommand(\"Demo\", LocalDate.parse(\"2023-01-01\")).run(this.tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        Task actual \u003d this.tasks.showTask(0);","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        Deadline expected \u003d new Deadline(\"Demo\", LocalDate.parse(\"2023-01-01\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":26}},{"path":"src/test/java/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import java.util.List;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"import task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"import task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    int initialCount;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    public void init() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        this.tasks \u003d new TaskList(new ArrayList\u003c\u003e(List.of(new Task[] {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"                new Todo(\"Demo\")","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        })));","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        this.initialCount \u003d this.tasks.countTask();","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"    public void shouldDeleteTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"        new DeleteCommand(0).run(this.tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"        assertEquals(1, this.initialCount - this.tasks.countTask());","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotDeleteOutOfIndex() {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e new DeleteCommand(1).run(this.tasks));","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":36}},{"path":"src/test/java/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"import task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"import task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"public class EventCommandTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    public void init() {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    public void shouldAddEvent() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        new EventCommand(\"Demo\", LocalDate.parse(\"2023-01-01\"), LocalDate.parse(\"2023-01-03\")).run(this.tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"        Task actual \u003d this.tasks.showTask(0);","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"        Event expected \u003d new Event(\"Demo\", LocalDate.parse(\"2023-01-01\"), LocalDate.parse(\"2023-01-03\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAllowEndDateBeforeStartDate() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"                () -\u003e new EventCommand(\"Demo\", LocalDate.parse(\"2023-01-02\"), LocalDate.parse(\"2023-01-01\")).run(","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"                        this.tasks)","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        );","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":36}},{"path":"src/test/java/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"    TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    public void init() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    public void shouldFindAllTypesOfTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"        this.tasks.createTodo(\"Demo\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        this.tasks.createDeadline(\"Demo\", LocalDate.parse(\"2023-01-01\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        this.tasks.createEvent(\"Demo\", LocalDate.parse(\"2023-01-01\"), LocalDate.parse(\"2023-01-01\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        String res \u003d new FindCommand(\"Demo\").run(this.tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"        int actual \u003d res.split(\"Demo\").length - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"        int expected \u003d 3;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"    public void shouldFindRegardlessOfCapitalisation() {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"        this.tasks.createTodo(\"Demo\");","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"        this.tasks.createDeadline(\"demo\", LocalDate.parse(\"2023-01-01\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"        this.tasks.createEvent(\"deMo\", LocalDate.parse(\"2023-01-01\"), LocalDate.parse(\"2023-01-01\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"        String res \u003d new FindCommand(\"Demo\").run(this.tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"        int actual \u003d res.toLowerCase().split(\"demo\").length - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"        int expected \u003d 3;","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"yyj-02":40}},{"path":"src/test/java/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import java.util.List;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"import task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"import task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    int initialCount;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    public void init() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        this.tasks \u003d new TaskList(new ArrayList\u003c\u003e(List.of(new Task[] {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"                new Todo(\"Demo\", false),","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"                new Todo(\"Demo\", true)","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        })));","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"        this.initialCount \u003d this.tasks.countTask();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"    public void shouldMarkTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"        new MarkCommand(0).run(this.tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"        new MarkCommand(1).run(this.tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"        Task[] actual \u003d this.tasks.indexTask().toArray(new Task[0]);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        Task[] expected \u003d new Task[] {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"                new Todo(\"Demo\", true),","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"                new Todo(\"Demo\", true)","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"        };","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotMarkOutOfIndex() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e new MarkCommand(2).run(this.tasks));","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":46}},{"path":"src/test/java/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"    TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    public void init() {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    public void shouldAddTodo() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        new TodoCommand(\"Demo\").run(this.tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        Task actual \u003d this.tasks.showTask(0);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        Todo expected \u003d new Todo(\"Demo\");","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":25}},{"path":"src/test/java/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import java.util.List;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"import task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"import task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"    TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    int initialCount;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    public void init() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        this.tasks \u003d new TaskList(new ArrayList\u003c\u003e(List.of(new Task[] {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"                new Todo(\"Demo\", false),","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"                new Todo(\"Demo\", true)","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        })));","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"        this.initialCount \u003d this.tasks.countTask();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"    public void shouldUnmarkTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"        new UnmarkCommand(1).run(this.tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"        new UnmarkCommand(0).run(this.tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"        Task[] actual \u003d this.tasks.indexTask().toArray(new Task[0]);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        Task[] expected \u003d new Task[] {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"                new Todo(\"Demo\", false),","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"                new Todo(\"Demo\", false)","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"        };","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotUnmarkOutOfIndex() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e new UnmarkCommand(2).run(this.tasks));","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":46}},{"path":"src/test/java/parser/DeadlineParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"public class DeadlineParserTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    public void shouldParseCorrectly() {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        Command actual \u003d new DeadlineParser().parse(\"demo /by 2023-01-01\");","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        Command expected \u003d new DeadlineCommand(\"demo\", LocalDate.parse(\"2023-01-01\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptEmptyTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new DeadlineParser().parse(\" /by 2023-01-01\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptMissingDeadline() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new DeadlineParser().parse(\"demo\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptEmptyDeadline() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new DeadlineParser().parse(\"demo /by\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptWrongDeadlineFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e new DeadlineParser().parse(\"demo /by 01 Jan 2023\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yyj-02":39}},{"path":"src/test/java/parser/DeleteParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"public class DeleteParserTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    public void shouldParseCorrectly() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        Command actual \u003d new DeleteParser().parse(\"1\");","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        Command expected \u003d new DeleteCommand(0);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptEmptyIndex() {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new DeleteParser().parse(\" \"));","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptNonInteger() {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e new DeleteParser().parse(\"fail\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":28}},{"path":"src/test/java/parser/EventParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import command.EventCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"public class EventParserTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    public void shouldParseCorrectly() {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        Command actual \u003d new EventParser().parse(\"demo /from 2023-01-01 /to 2024-01-01\");","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        Command expected \u003d new EventCommand(\"demo\", LocalDate.parse(\"2023-01-01\"), LocalDate.parse(\"2024-01-01\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptEmptyTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new EventParser().parse(\" /from 2023-01-01 /to 2024-01-01\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptMissingStartDate() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new EventParser().parse(\"demo /to 2024-01-01\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptEmptyStartDate() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new EventParser().parse(\"demo /from  /to 2024-01-01\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptWrongStartDateFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"            () -\u003e new EventParser().parse(\"demo /from 01 Jan 2023 /to 2024-01-01\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptMissingEndDate() {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new EventParser().parse(\"demo /from 2023-01-01\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptEmptyEndDate() {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new EventParser().parse(\"demo /from 2023-01-01 /to \"));","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptWrongEndDateFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"yyj-02"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"yyj-02"},"content":"            () -\u003e new EventParser().parse(\"demo /from 2023-01-01 /to 01 Jan 2024\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yyj-02":56}},{"path":"src/test/java/parser/FindParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import command.FindCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"public class FindParserTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    public void shouldParseCorrectly() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"        Command actual \u003d new FindParser().parse(\"demo\");","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        Command expected \u003d new FindCommand(\"demo\");","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptEmptyQuery() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new FindParser().parse(\" \"));","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"yyj-02":22}},{"path":"src/test/java/parser/ListParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import command.ListCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"public class ListParserTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"    public void shouldParseCorrectly() {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"        Command actual \u003d new ListParser().parse(\"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"        Command expected \u003d new ListCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":15}},{"path":"src/test/java/parser/MarkParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"public class MarkParserTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    public void shouldParseCorrectly() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        Command actual \u003d new MarkParser().parse(\"1\");","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        Command expected \u003d new MarkCommand(0);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptEmptyIndex() {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new MarkParser().parse(\" \"));","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptNonInteger() {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e new MarkParser().parse(\"fail\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":28}},{"path":"src/test/java/parser/OnParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import command.OnCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"public class OnParserTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"    public void shouldParseCorrectly() {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        Command actual \u003d new OnParser().parse(\"2023-01-01\");","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        Command expected \u003d new OnCommand(LocalDate.parse(\"2023-01-01\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptEmptyDate() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new OnParser().parse(\" \"));","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptWrongDateFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e new OnParser().parse(\"01 Jan 2023\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":29}},{"path":"src/test/java/parser/TodoParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import command.TodoCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"public class TodoParserTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    public void shouldParseCorrectly() {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"        Command actual \u003d new TodoParser().parse(\"demo\");","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        Command expected \u003d new TodoCommand(\"demo\");","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptEmptyTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new TodoParser().parse(\" \"));","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yyj-02":22}},{"path":"src/test/java/parser/UnmarkParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"import command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.InvalidArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"import dukeexeption.MissingArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"public class UnmarkParserTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"    public void shouldParseCorrectly() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"        Command actual \u003d new UnmarkParser().parse(\"1\");","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        Command expected \u003d new UnmarkCommand(0);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptEmptyIndex() {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new UnmarkParser().parse(\" \"));","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"    public void shouldNotAcceptNonInteger() {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e new UnmarkParser().parse(\"fail\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":28}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"    public void shouldCountDaysToDeadlineCorrectly() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"        Deadline deadline \u003d new Deadline(\"demo\", LocalDate.parse(\"2023-01-01\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"        long[] actual \u003d {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"                deadline.daysToDeadline(LocalDate.parse(\"2022-12-30\")),","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"                deadline.daysToDeadline(LocalDate.parse(\"2022-12-31\")),","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"                deadline.daysToDeadline(LocalDate.parse(\"2023-01-01\")),","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"                deadline.daysToDeadline(LocalDate.parse(\"2023-01-02\")),","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"                deadline.daysToDeadline(LocalDate.parse(\"2023-01-03\"))","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"        };","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"        long[] expected \u003d {2, 1, 0, -1, -2};","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":23}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"public class EventTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"    public void shouldCountDaysToEventCorrectly() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"        Event event \u003d new Event(\"demo\", LocalDate.parse(\"2023-01-01\"), LocalDate.parse(\"2023-01-03\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"        long[] actual \u003d","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"                {event.daysToEvent(LocalDate.parse(\"2022-12-30\")), event.daysToEvent(LocalDate.parse(\"2022-12-31\")),","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"                        event.daysToEvent(LocalDate.parse(\"2023-01-01\")),","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"                        event.daysToEvent(LocalDate.parse(\"2023-01-02\")),","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"                        event.daysToEvent(LocalDate.parse(\"2023-01-03\")),","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"                        event.daysToEvent(LocalDate.parse(\"2023-01-04\")),","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"                        event.daysToEvent(LocalDate.parse(\"2023-01-05\")),};","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"        long[] expected \u003d {2, 1, 0, 0, 0, -1, -2};","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":23}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"package task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"    public void shouldMarkTaskAsCompleted() {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"        ConcreteTask falsyTask \u003d new ConcreteTask(\"demo\", false);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"        ConcreteTask truthyTask \u003d new ConcreteTask(\"demo\", true);","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"        falsyTask.markCompleted();","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"        truthyTask.markCompleted();","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"        boolean[] actual \u003d {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"            falsyTask.isCompleted,","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"            truthyTask.isCompleted","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"        };","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"        boolean[] expected \u003d {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"            true,","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"            true","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"        };","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"    public void shouldMarkTaskAsUncompleted() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"        ConcreteTask falsyTask \u003d new ConcreteTask(\"demo\", false);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"        ConcreteTask truthyTask \u003d new ConcreteTask(\"demo\", true);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"yyj-02"},"content":"        falsyTask.unmarkCompleted();","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"yyj-02"},"content":"        truthyTask.unmarkCompleted();","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"yyj-02"},"content":"        boolean[] actual \u003d {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"yyj-02"},"content":"            falsyTask.isCompleted,","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"yyj-02"},"content":"            truthyTask.isCompleted","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"yyj-02"},"content":"        };","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"yyj-02"},"content":"        boolean[] expected \u003d {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"yyj-02"},"content":"            false,","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"yyj-02"},"content":"            false","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"yyj-02"},"content":"        };","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"yyj-02"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"yyj-02"},"content":"    public class ConcreteTask extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"yyj-02"},"content":"        public ConcreteTask(String task, boolean isCompleted) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"yyj-02"},"content":"            super(task, isCompleted);","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"yyj-02"},"content":"        @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"yyj-02"},"content":"        public String toDataString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"yyj-02"},"content":"            return \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"yyj-02"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"yyj-02"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"yyj-02"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"yyj-02":59}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"T | 0 | Demo task 1","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"D | 0 | Demo task 2 | 2023-10-07","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yyj-02":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"todo","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"todo Demo task 1","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"mark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"unmark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"deadline Demo task 2 /by tomorrow","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"deadline Demo task 2 /by 2023-10-07","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"event Demo task 3 /from 2023-10-07 /to 2023-10-08","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"event Demo task 3 /from 2023-10-09 /to 2023-10-08","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"on 2023-10-06","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"on 2023-10-07","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"on 2023-10-08","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"on 2023-10-09","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"delete 0","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"delete 4","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"delete 3","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"bye","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"yyj-02":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"powershell -Command \"(gc sources.txt) -replace \u0027\\\\\u0027, \u0027\\\\\u0027 | Out-File -FilePath sources.txt\"","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"powershell -Command \"(gc sources.txt) | Foreach-Object {\u0027\\\"\u0027 + $_ + \u0027\\\"\u0027} | Set-Content sources.txt\"","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin @sources.txt","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yyj-02":7,"-":20}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\Duke.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\command\\\\Command.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\command\\\\DeadlineCommand.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\command\\\\DeleteCommand.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\command\\\\EventCommand.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\command\\\\ListCommand.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\command\\\\MarkCommand.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\command\\\\OnCommand.java\"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\command\\\\TodoCommand.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\command\\\\UnmarkCommand.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\dukeexeption\\\\DukeException.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\dukeexeption\\\\InvalidArgumentException.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\dukeexeption\\\\MissingArgumentException.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\dukeexeption\\\\UnknownCommandException.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\parser\\\\DeadlineParser.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\parser\\\\DeleteParser.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\parser\\\\EventParser.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\parser\\\\ListParser.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\parser\\\\MarkParser.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\parser\\\\OnParser.java\"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\parser\\\\Parser.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\parser\\\\Request.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\parser\\\\TodoParser.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\parser\\\\UnmarkParser.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\storage\\\\LocalStorage.java\"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\storage\\\\TaskList.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\task\\\\Deadline.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\task\\\\Event.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\task\\\\Task.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\task\\\\Todo.java\"","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"yyj-02"},"content":"\"C:\\\\Users\\\\Yong Jie\\\\Documents\\\\Code\\\\ip\\\\src\\\\main\\\\java\\\\ui\\\\Ui.java\"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"yyj-02":31}},{"path":"text-ui-test/sources_quoted.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yyj-02"},"content":"NUL ","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"yyj-02":1}}]
