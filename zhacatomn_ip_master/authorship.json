[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"zhacatomn":16}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"E | 0 | Halloween Horror Night | 29/10/2023 | 31/10/2023","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"D | 0 | Assignment | 30/1/2023 2359","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"D | 1 | CS3230 Assignment 1 | 1/2/2023 2359","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"T | 1 | Homework","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"D | 0 | Assigment | 3/3/2023 2359","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zhacatomn":5}},{"path":"src/main/java/duke/BadCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"public class BadCommandException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"    public BadCommandException(String errMsg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"        super(errMsg);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":7}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    private Label text;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"     * Creates a new DialogBox.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"     * @param l Label object to be shown","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"     * @param iv ImageView object to be shown","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    private DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"        displayPicture.setFitWidth(70.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"        displayPicture.setFitHeight(70.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"        // Adding padding to the dialog box","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"        this.setPadding(new Insets(10, 10, 0, 10));","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"        // Styling the Label","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"        text.setPadding(new Insets(0, 10, 0, 10));","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"        text.setBackground(new Background(","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"                new BackgroundFill(","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"                        Color.rgb(54, 54, 54),","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"                        CornerRadii.EMPTY,","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"                        Insets.EMPTY","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"                )","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"        ));","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"        text.setTextFill(Color.WHITE);","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"        text.setBorder(new Border(new BorderStroke(","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"                Color.WHITE,","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"                BorderStrokeStyle.SOLID,","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"                new CornerRadii(5),","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"                BorderWidths.DEFAULT","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"        )));","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"        // Clipping the image to be a circle","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"        double radius \u003d displayPicture.getFitWidth() / 2;","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"        Circle circleClip \u003d new Circle( radius);","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"        circleClip.setCenterX(radius);","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"        circleClip.setCenterY(radius);","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"        displayPicture.setClip(circleClip);","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"     * Flips the display horizontally. Helper function.","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"     * Returns a DialogBox for the user text.","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"     * @param l Label of the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"     * @param iv ImageView of the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"     * @return DialogBox for the user to be served in the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"     * Returns a DialogBox for the duke text.","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"     * @param l Label of duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"     * @param iv ImageView of duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"     * @return DialogBox for duke to be served in the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"        db.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zhacatomn":95}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"    static protected final String DATA_DIR \u003d \"data/\";","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    static protected final String DATA_FILENAME \u003d \"duke.txt\";","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"    static protected final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\";","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    static protected final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"    // For javaFX UI","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream((\"/images/DaDuke.png\")));","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"    public Duke() {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"        this(DATA_DIR + DATA_FILENAME);","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"     * Returns a Duke object.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"     * @param filePath The file path where the data file is located.","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"     * Runs the task bot on the command line.","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"     * [DEPRECATED]","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"        ui.showNormalMessage(WELCOME_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"        String inputStr \u003d inputScanner.nextLine().trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"        while (!inputStr.equals(\"bye\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"                parser.parseString(inputStr, tasks, ui);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"                storage.save(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"            } catch (BadCommandException | DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"                ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"            inputStr \u003d inputScanner.nextLine().trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"        inputScanner.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"        ui.showNormalMessage(EXIT_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"        // Setting up components","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"        sendButton \u003d new Button(\"send\");","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"        stage.show();","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"        // Formatting window","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"        stage.setHeight(600.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"        stage.setWidth(400.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"zhacatomn"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"zhacatomn"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"zhacatomn"},"content":"        dialogContainer.setMinHeight(535);","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"zhacatomn"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"zhacatomn"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"zhacatomn"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"zhacatomn"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"zhacatomn"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"zhacatomn"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"zhacatomn"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"zhacatomn"},"content":"        // Styling ScrollPane","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"zhacatomn"},"content":"        dialogContainer.setBackground(new Background(","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"zhacatomn"},"content":"                new BackgroundFill(","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"zhacatomn"},"content":"                        Color.rgb(40, 40, 40),","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"zhacatomn"},"content":"                        CornerRadii.EMPTY,","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"zhacatomn"},"content":"                        Insets.EMPTY)","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"zhacatomn"},"content":"                )","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"zhacatomn"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"zhacatomn"},"content":"        // Add functionality","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"zhacatomn"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"zhacatomn"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"zhacatomn"},"content":"        });","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":136,"author":{"gitId":"zhacatomn"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"zhacatomn"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"zhacatomn"},"content":"        });","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"zhacatomn"},"content":"        // Scroll down to the end every time dialogContainer\u0027s height changes","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"zhacatomn"},"content":"        dialogContainer.heightProperty().addListener((observable -\u003e scrollPane.setVvalue(1.0)));","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"zhacatomn"},"content":"     * Handles the text input given by the user through the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"zhacatomn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-02"},{"lineNumber":147,"author":{"gitId":"zhacatomn"},"content":"        String userInputStr \u003d userInput.getText().trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":148,"author":{"gitId":"zhacatomn"},"content":"        Label userText \u003d new Label(userInputStr);","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"zhacatomn"},"content":"        String dukeResponseStr;","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":151,"author":{"gitId":"zhacatomn"},"content":"            dukeResponseStr \u003d parser.parseString(userInputStr, tasks, ui);","lastModifiedDate":"2023-02-02"},{"lineNumber":152,"author":{"gitId":"zhacatomn"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":153,"author":{"gitId":"zhacatomn"},"content":"        } catch (BadCommandException | DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":154,"author":{"gitId":"zhacatomn"},"content":"            dukeResponseStr \u003d ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":155,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"zhacatomn"},"content":"        Label dukeText \u003d new Label(dukeResponseStr);","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"zhacatomn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"zhacatomn"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"zhacatomn"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"zhacatomn"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"zhacatomn"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"zhacatomn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"zhacatomn"},"content":"        new Duke(DATA_DIR + DATA_FILENAME).run();","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zhacatomn":165,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"    public DukeException(String errMsg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"        super(errMsg);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":7}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zhacatomn":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    private enum Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"        LIST(\"list\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"        MARK(\"mark\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"        UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"        DELETE(\"delete\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"        TODO(\"todo\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"        DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"        EVENT(\"event\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"        FIND(\"find\");","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"        private final String typeStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"        Command(String typeStr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"            this.typeStr \u003d typeStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"        public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"            return typeStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"     * Parses a given input string.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"     * @param inputStr The input string given by the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"     * @param tasks The TaskList to be managed.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"     * @param ui The Ui to be used to print messages.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If the parameters of the input string are insufficient, or if","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"     * the command given is not recognised.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"    public String parseString(String inputStr, TaskList tasks, Ui ui) throws BadCommandException {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"        inputStr \u003d inputStr.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"            if (inputStr.equals(Command.LIST.toString())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"                return ui.showNormalMessage(String.format(","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"                        \"Here are the tasks in your list:\\n%s\",","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"                        tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"                ));","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"            String[] inputSplit \u003d inputStr.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"            if (inputSplit.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"                throw new BadCommandException(\"There are insufficient parameters!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"            String commandStr \u003d inputSplit[0].trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"            String params \u003d inputSplit[1].trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"            Task newTask \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"            if (commandStr.equals(Command.FIND.toString())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"                TaskList matchingTasks \u003d tasks.getTasksByKeyword(params);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"                return ui.showNormalMessage(String.format(","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"                        \"Here are the matching tasks in your list:\\n%s\",","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"                        matchingTasks","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"                ));","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"            } else if (commandStr.equals(Command.MARK.toString())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"                int idx \u003d Integer.parseInt(params) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"                tasks.markTaskAsDone(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"                return ui.showNormalMessage(String.format(","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"                        \"Nice! I\u0027ve marked this task as done:\\n\\t%s\",","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"                        tasks.getTask(idx)","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"                ));","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"            } else if (commandStr.equals(Command.UNMARK.toString())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"                int idx \u003d Integer.parseInt(params) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"                tasks.unmarkTaskAsDone(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"                return ui.showNormalMessage(String.format(","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"                        \"OK, I\u0027ve marked this task as not done yet:\\n\\t%s\",","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"                        tasks.getTask(idx)","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"                ));","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"            } else if (commandStr.equals(Command.DELETE.toString())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"                int idx \u003d Integer.parseInt(params) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"                Task deletedTask \u003d tasks.removeTask(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"                return ui.showNormalMessage(String.format(","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"                        \"Got it. I\u0027ve removed this task:\\n\\t%s\\nNow you have %d task%s in the list.\",","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"                        deletedTask,","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"                        tasks.getSize(),","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"                        tasks.getSize() \u003e 1 ? \"s\" : \"\"","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"                ));","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"            // These commands are for adding of a new task","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"            if (commandStr.equals(Command.TODO.toString())) {","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"                newTask \u003d new Todo(params.trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"            } else if (commandStr.equals(Command.DEADLINE.toString())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"                String[] paramsSplit \u003d params.split(\"/by\", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"                if (paramsSplit.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"                    throw new BadCommandException(\"There are insufficient parameters!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"                newTask \u003d new Deadline(paramsSplit[0].trim(), paramsSplit[1].trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"            } else if (commandStr.equals(Command.EVENT.toString())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"                String[] paramsSplit \u003d params.split(\"/from|/to\", 3);","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"                if (paramsSplit.length \u003c 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"                    throw new BadCommandException(\"There are insufficient parameters!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"                newTask \u003d new Event(paramsSplit[0].trim(), paramsSplit[1].trim(), paramsSplit[2].trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"                throw new BadCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"            return ui.showNormalMessage(String.format(","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"zhacatomn"},"content":"                    \"Got it. I\u0027ve added this task:\\n\\t%s\\nNow you have %d task%s in the list.\",","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"zhacatomn"},"content":"                    newTask,","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"zhacatomn"},"content":"                    tasks.getSize(),","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"zhacatomn"},"content":"                    tasks.getSize() \u003e 1 ? \"s\" : \"\"","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"zhacatomn"},"content":"            ));","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"zhacatomn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"zhacatomn"},"content":"            return ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":113}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"    protected String filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    final protected String LOAD_ERROR_PREFIX_STRING \u003d \"Error retrieving local data: \";","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    final protected String SAVE_ERROR_PREFIX_STRING \u003d \"Error saving data: \";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"     * Returns a Storage object.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"     * @param filePath The file path of the data file to retrieve and store data.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"     * Reads the file and generates a TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"     * @return A TaskList based on the given data.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"     * @throws DukeException If an unexpected entry is given.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(LOAD_ERROR_PREFIX_STRING + \"A data file does not exist\");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"            Scanner fileScanner \u003d new Scanner(dataFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"            int rowCnt \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"                rowCnt++;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"                String[] inputStr \u003d fileScanner.nextLine().trim().split(\" \\\\| \");","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"                if (inputStr.length \u003c 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"                    continue;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"                    Task newTask \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"                    if (inputStr[0].equals(Task.TaskIcon.TODO.getSymbol())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"                        newTask \u003d new Todo(inputStr[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"                        tasks.add(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"                    } else if (inputStr[0].equals(Task.TaskIcon.DEADLINE.getSymbol())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"                        if (inputStr.length \u003c 4) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"                            continue;","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"                        newTask \u003d new Deadline(inputStr[2], inputStr[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"                        tasks.add(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"                    } else if (inputStr[0].equals(Task.TaskIcon.EVENT.getSymbol())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"                        if (inputStr.length \u003c 5) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"                            continue;","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"                        newTask \u003d new Event(inputStr[2], inputStr[3], inputStr[4]);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"                        tasks.add(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"                    if (newTask !\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"                        if (Integer.parseInt(inputStr[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"                            newTask.markAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"                    throw new DukeException(String.format(","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"                            LOAD_ERROR_PREFIX_STRING +","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"                                    \"Error processing row %d of %s: %s\",","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"                            rowCnt,","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"                            filePath,","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"                            e.getMessage()","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"                    ));","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"            fileScanner.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(LOAD_ERROR_PREFIX_STRING + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"     * Saves the data from a given TaskList onto the data file.","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"     * @param tasks The TaskList to be saved.","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"     * @throws DukeException If an error occurs when writing to the file.","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"        File parentDir \u003d dataFile.getParentFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists() \u0026\u0026 !parentDir.mkdirs()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(SAVE_ERROR_PREFIX_STRING + \"Unable to create directory\");","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"            FileWriter fw \u003d new FileWriter(dataFile.getAbsoluteFile());","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"                Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"zhacatomn"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"zhacatomn"},"content":"                    task \u003d tasks.getTask(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"zhacatomn"},"content":"                } catch (BadCommandException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"zhacatomn"},"content":"                    throw new DukeException(SAVE_ERROR_PREFIX_STRING + \"Unable to access task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"zhacatomn"},"content":"                ArrayList\u003cString\u003e params \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"zhacatomn"},"content":"                params.add(task.getTaskIcon().getSymbol());","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"zhacatomn"},"content":"                params.add(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"zhacatomn"},"content":"                params.add(task.getDescription());","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"zhacatomn"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"zhacatomn"},"content":"                    Event castedTask \u003d (Event) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"zhacatomn"},"content":"                    params.add(castedTask.getStartTime());","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"zhacatomn"},"content":"                    params.add(castedTask.getEndTime());","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"zhacatomn"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"zhacatomn"},"content":"                    Deadline castedTask \u003d (Deadline) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"zhacatomn"},"content":"                    params.add(castedTask.getByDate());","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"zhacatomn"},"content":"                String outputStr \u003d String.join(\" | \", params);","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"zhacatomn"},"content":"                fw.write(outputStr + System.lineSeparator());","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"zhacatomn"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"zhacatomn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(SAVE_ERROR_PREFIX_STRING + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":129}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import java.util.Collection;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    final static BadCommandException INDEX_OOB_ERROR \u003d","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"            new BadCommandException(\"Index given is out of bounds!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"     * Initialises an empty TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"     * Initialises an TaskList containing some Tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"    public TaskList(Collection\u003cTask\u003e initTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"        tasks \u003d new ArrayList\u003c\u003e(initTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    private boolean isIndexInRange(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"        return idx \u003c tasks.size() \u0026\u0026 idx \u003e\u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"     * Adds a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"     * Removes a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"     * @param idx The index of the task to be removed.","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"     * @return The removed task.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If the idx given is OOB.","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"    public Task removeTask(int idx) throws BadCommandException {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"        if (!isIndexInRange(idx)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"            throw INDEX_OOB_ERROR;","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"        Task deletedTask \u003d tasks.get(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"        tasks.remove(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"        return deletedTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"     * @param idx Index of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If the idx given is OOB.","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"    public void markTaskAsDone(int idx) throws BadCommandException {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"        if (!isIndexInRange(idx)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"            throw INDEX_OOB_ERROR;","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"        tasks.get(idx).markAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"     * Unmarks a task as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"     * @param idx Index of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If the idx given is OOB.","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"    public void unmarkTaskAsDone(int idx) throws BadCommandException {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"        if (!isIndexInRange(idx)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"            throw INDEX_OOB_ERROR;","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"        tasks.get(idx).unmarkAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"     * Retrieves a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"     * @param idx Index of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If the idx given is OOB.","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"    public Task getTask(int idx) throws BadCommandException {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"        if (!isIndexInRange(idx)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"            throw INDEX_OOB_ERROR;","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"        return tasks.get(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"     * Retreives tasks using a keyword.","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"     * @param keyword Keyword to be given.","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"     * @return TaskList containing the matching tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"    public TaskList getTasksByKeyword(String keyword) {","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"        keyword \u003d keyword.trim().toLowerCase();","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"            if (task.toString().toLowerCase().contains(keyword)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"        return matchingTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"zhacatomn"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"zhacatomn"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"zhacatomn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"zhacatomn"},"content":"        StringBuilder listOutput \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"zhacatomn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"zhacatomn"},"content":"            listOutput.append(String.format(","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"zhacatomn"},"content":"                    \"%d. %s\",","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"zhacatomn"},"content":"                    i + 1,","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"zhacatomn"},"content":"                    tasks.get(i)","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"zhacatomn"},"content":"            ));","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"zhacatomn"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"zhacatomn"},"content":"                listOutput.append(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"zhacatomn"},"content":"        return listOutput.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":123}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"    final static String DIVIDER \u003d","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"            \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"    private String encloseWithDivider(String str) {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"        return String.format(\"%s\\n%s\\n%s%n\", DIVIDER, str, DIVIDER);","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"     * Shows normal display message.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"     * @param outputMsg The message to be displayed.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"    public String showNormalMessage(String outputMsg) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"        return encloseWithDivider(outputMsg.trim());","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"     * Shows an error message.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"     * @param errorMsg The error message to be displayed.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"    public String showErrorMessage(String errorMsg) {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"        return encloseWithDivider(\"OOPS!!! \" + errorMsg.trim());","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":25}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"    protected String byStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"    protected static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"    protected static DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, hh:mma\");","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"     * Returns a Deadline object.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"     * @param byStr The \u0027by\u0027 date.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"     * @throws DukeException If description or byStr are empty.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"    public Deadline(String description, String byStr) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"        super(description.trim(), TaskIcon.DEADLINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"        this.byStr \u003d byStr.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"        if (this.description.equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"        if (this.byStr.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(\"The \u0027by\u0027 date of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"            byDateTime \u003d LocalDateTime.parse(byStr, inputFormatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"            byDateTime \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"    public String getByDate() {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"        return byStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"        return String.format(","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"            \"%s (by: %s)\", ","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"            super.toString(), ","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"            byDateTime \u003d\u003d null ? byStr : byDateTime.format(outputFormatter)","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"        );","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":50}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"    protected String startStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"    protected LocalDateTime startDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"    protected String endStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"    protected LocalDateTime endDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"    protected static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"    protected static DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, hh:mma\");","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"     * Returns an Event object.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"     * @param startStr A String representing the start date.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"     * @param endStr A String representing the end date.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"     * @throws DukeException If any of the given arguments are empty.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    public Event(String description, String startStr, String endStr) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"        super(description.trim(), TaskIcon.EVENT);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"        this.startStr \u003d startStr.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"        this.endStr \u003d endStr.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"        if (this.description.equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"        if (this.startStr.equals(\"\") || this.endStr.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(\"The start and/or end time of an event cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"            startDateTime \u003d LocalDateTime.parse(startStr, inputFormatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"            startDateTime \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"            endDateTime \u003d LocalDateTime.parse(endStr, inputFormatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"            endDateTime \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"        return startStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"        return endStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"        return String.format(","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"            \"%s (from: %s to: %s)\", ","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"            super.toString(), ","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"            startDateTime \u003d\u003d null ? startStr : startDateTime.format(outputFormatter),","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"            endDateTime \u003d\u003d null ? endStr : endDateTime.format(outputFormatter)","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"        );","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":64}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"    public enum TaskIcon {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"        TODO (\"T\"),","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"        EVENT (\"E\"),","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"        DEADLINE (\"D\");","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"        private final String symbol;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"        TaskIcon(String symbol) {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"            this.symbol \u003d symbol;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"        /**","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"         * Getter function for the symbol of the enum","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"         * @return Symbol string","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"         */","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"        public String getSymbol() {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"            return symbol;","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    };","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    protected TaskIcon taskIcon;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"     * Returns a Task object.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"    protected Task(String description, TaskIcon taskIcon) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"        this.taskIcon \u003d taskIcon;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"        return description;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"        return isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"    public TaskIcon getTaskIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"        return this.taskIcon;","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"        return String.format(\"[%s][%s] %s\", this.taskIcon.getSymbol(), getStatusIcon(), getDescription());","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":64}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"    public Todo(String description) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"        super(description.trim(), TaskIcon.TODO);","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"        if (this.description.equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"     * Represent duke.task.Todo as a string","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"     * @return String representation of a duke.task.Todo","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"        return String.format(\"%s\", super.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":20}},{"path":"src/test/java/seedu/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"    public void deadline_emptyDescription_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"            new Deadline(\"   \", \"1\");","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"            assertEquals(\"The description of a deadline cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    public void deadline_emptyByTime_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"            new Deadline(\"1\", \"   \");","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"            assertEquals(\"The \u0027by\u0027 date of a deadline cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":27}},{"path":"src/test/java/seedu/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"public class EventTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"    public void event_emptyDescription_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"            new Event(\"   \", \"1\", \"1\");","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"            assertEquals(\"The description of an event cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    public void event_emptyStartEndTime_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"            new Event(\"desc\", \"  \", \"  \");","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"            assertEquals(\"The start and/or end time of an event cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":27}},{"path":"src/test/java/seedu/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"    public void todo_emptyDescription_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"            new Todo(\"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"            assertEquals(\"The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"todo join sports club","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"delete 5","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"delete 10","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"zhacatomn":1}}]
