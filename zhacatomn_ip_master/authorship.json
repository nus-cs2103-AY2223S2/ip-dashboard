[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"checkstyle {","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"-":40,"zhacatomn":21}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"D | 0 | CS3230 Programming Assignment | 17-02-2023 | High Priority","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"E | 1 | Class Gathering | 12-2-2023 1600 | 12-2-2023 1900","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"T | 0 | Buy groceries | Medium Priority","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"E | 0 | SPhL | 08-07-2023 0900 | 08-07-2023 1300 | Awesome Event, Must Attend","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"D | 0 | tP v1.2 | 17-2-2023 | High Priority","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"zhacatomn":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"### Adding Different Task Types","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"This app allows you add 3 different task types: a Todo item, a Deadline item and an Event item. ","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"Supporting marking, searching and more, this app has got you covered in managing all the tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"you\u0027ll ever have!","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"### Tagging","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"In addition to simply creating tasks, you can also tag tasks as well! Simply by using the `/tag` flag ","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"when creating your tasks, you can add tags to make your tasks more organised and neat. You can search ","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"for your tags easily through the `find` command as well. ","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"### `list` - List all tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"This command lists all the tasks currently in the task list.","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"Command format:","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"list","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"### `mark` - Mark a task as complete","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"This command marks a given task as complete. The task ID corresponds to the number listed in the `list` command.","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"Command format:","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"mark TASK_ID","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"### `unmark` - Unmark a task as complete","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"This command unmarks a given task as complete. The task ID corresponds to the number listed in the `list` command.","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"Command format:","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"unmark TASK_ID","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"### `find` - Find tasks by keyword","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"This command finds a list of tasks corresponding to a given keyword.","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"The keyword could represent any part of the task. For example, if I want to find all tasks with the \"High Priority\" tag, I could run `find High` or `find High Priority`.","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"Command format:","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"find KEYWORD","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"### `delete` - Delete a task","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"This command deletes a task from the task list. The task ID corresponds to the number listed in the `list` command.","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"Command format:","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"delete TASK_ID","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"### `todo` - Adds a new Todo item","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"This command allows you to add a new \"Todo\" item into the task list. A \"Todo\" item must have a non-empty description, and can have optional tags.","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"Command format:","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"todo DESCRIPTION [/tag TAGS]","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"Example usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"todo Sweep the floor /tag Low Priority, Fast","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"### `deadline` - Adds a new Deadline item","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"This command allows you to add a new \"Deadline\" item into the task list. A \"Deadline\" item must have the following:","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"- a non-empty description","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"- a \"by\" date. This can be inputed as a arbitrary string, or a string of the following format: `day-month-year [HHmm]`. For example: `3-16-2002 1400` or `10-10-1995`","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"  Optional tags are supported as well.","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"Command format:","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"deadline DESCRIPTION /by BY_DATE [/tag TAGS]","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"Example usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"deadline Project Assignment /by 19-2-2023 /tag High Priority, Deadline Soon","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"zhacatomn"},"content":"### `event` - Adds a new Event item","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"zhacatomn"},"content":"This command allows you to add a new \"Event\" item into the task list.","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"zhacatomn"},"content":"An \"Event\" item must have the following:","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"zhacatomn"},"content":"- a non-empty description","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"zhacatomn"},"content":"- a \"start\" date. This can be inputed as a arbitrary string, or a string of the following format: `day-month-year [HHmm]`. For example: `3-16-2002 1400` or `10-10-1995`","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"zhacatomn"},"content":"- an \"end\" date. This can be inputed as a arbitrary string, or a string of the following format: `day-month-year [HHmm]`. For example: `3-16-2002 1400` or `10-10-1995`","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":115,"author":{"gitId":"zhacatomn"},"content":"Optional tags are supported as well.","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"zhacatomn"},"content":"Command format:","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"zhacatomn"},"content":"event DESCRIPTION /from FROM_DATE /to TO_DATE [/tag TAGS]","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"zhacatomn"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"zhacatomn"},"content":"Example usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":126,"author":{"gitId":"zhacatomn"},"content":"event Trip to Universal Studios /from 14-4-2023 1400 /to 15-4-2023 1000 /tag Family, Vacation","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"zhacatomn"},"content":"### `bye` - Exit the application","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":131,"author":{"gitId":"zhacatomn"},"content":"This command closes the application window.","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"zhacatomn"},"content":"Command format:","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"zhacatomn"},"content":"bye","lastModifiedDate":"2023-02-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"-":24,"zhacatomn":113}},{"path":"src/main/java/duke/BadCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":" * An exception class to manage bad commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"public class BadCommandException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"    public BadCommandException(String errMsg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"        super(errMsg);","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":10}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":" * HBox class representing the individual dialog boxes.","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"    private static final Color DUKE_BG_COLOR \u003d Color.rgb(54, 54, 54);","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"    private static final Color USER_BG_COLOR \u003d Color.rgb(2, 119, 189);","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    private static final CornerRadii CORNER_RADIUS \u003d new CornerRadii(5);","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"    private static final double IMAGE_WIDTH \u003d 40.0;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    private static final double IMAGE_HEIGHT \u003d 40.0;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"    private Label text;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"     * Creates a new DialogBox.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"     * @param l Label object to be shown","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"     * @param iv ImageView object to be shown","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"    private DialogBox(Label l, ImageView iv, Color labelColor) {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"        displayPicture.setFitWidth(IMAGE_WIDTH);","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"        displayPicture.setFitHeight(IMAGE_HEIGHT);","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"        // Adding padding to the dialog box","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"        this.setPadding(new Insets(10, 10, 0, 10));","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"        this.setSpacing(5);","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"        // Styling the Label","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"        text.setPadding(new Insets(5, 10, 5, 10));","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"        text.setBackground(new Background(","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"                new BackgroundFill(","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"                        labelColor,","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"                        CORNER_RADIUS,","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"                        Insets.EMPTY","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"                )","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"        ));","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"        text.setTextFill(Color.WHITE);","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"        // Clipping the image to be a circle","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"        double radius \u003d displayPicture.getFitWidth() / 2;","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"        Circle circleClip \u003d new Circle(radius, radius, radius);","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"        displayPicture.setClip(circleClip);","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"     * Flips the display horizontally. Helper function.","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"     * Returns a DialogBox for the user text.","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"     * @param l Label of the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"     * @param iv ImageView of the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"     * @return DialogBox for the user to be served in the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"        return new DialogBox(l, iv, USER_BG_COLOR);","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"     * Returns a DialogBox for the duke text.","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"     * @param l Label of duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"     * @param iv ImageView of duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"     * @return DialogBox for duke to be served in the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"        var db \u003d new DialogBox(l, iv, DUKE_BG_COLOR);","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"        db.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zhacatomn":97}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":" * Class encapsulating the entire Duke application.","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"    protected static final String DATA_DIR \u003d \"data/\";","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    protected static final String DATA_FILENAME \u003d \"duke.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    protected static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke!\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"    protected static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    protected static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"    private static final double STAGE_WIDTH \u003d 500;","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    private static final double STAGE_HEIGHT \u003d 750;","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"    private static final double SEND_BUTTON_WIDTH \u003d 55;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"    private final Parser parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"    // For javaFX UI","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/cartoon_user.png\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream((\"/images/cartoon_robot.png\")));","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"    public Duke() {","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"        this(DATA_DIR + DATA_FILENAME);","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"     * Returns a Duke object.","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"     * @param filePath The file path where the data file is located.","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"        assert tasks !\u003d null : \"tasks should not be null\";","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"        // Setting up components","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"        stage.show();","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"        // Formatting window","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"        stage.setHeight(STAGE_HEIGHT);","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"        stage.setWidth(STAGE_WIDTH);","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"        mainLayout.setPrefSize(STAGE_WIDTH, STAGE_HEIGHT);","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"        scrollPane.setPrefSize(STAGE_WIDTH, STAGE_HEIGHT - 75);","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"        dialogContainer.setMinHeight(STAGE_HEIGHT - 75); // Fit to scrollPane","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"        userInput.setPrefWidth(STAGE_WIDTH - SEND_BUTTON_WIDTH);","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"zhacatomn"},"content":"        sendButton.setPrefWidth(SEND_BUTTON_WIDTH);","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"zhacatomn"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"zhacatomn"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"zhacatomn"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"zhacatomn"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"zhacatomn"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"zhacatomn"},"content":"        // Styling ScrollPane","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"zhacatomn"},"content":"        dialogContainer.setBackground(new Background(","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"zhacatomn"},"content":"                        new BackgroundFill(","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"zhacatomn"},"content":"                                Color.rgb(40, 40, 40),","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"zhacatomn"},"content":"                                CornerRadii.EMPTY,","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"zhacatomn"},"content":"                                Insets.EMPTY)","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"zhacatomn"},"content":"                )","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"zhacatomn"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"zhacatomn"},"content":"        dialogContainer.setPadding(new Insets(0, 0, 10, 0));","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"zhacatomn"},"content":"        // Add functionality","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"zhacatomn"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"zhacatomn"},"content":"            handleUserInput(stage);","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"zhacatomn"},"content":"        });","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"zhacatomn"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"zhacatomn"},"content":"            handleUserInput(stage);","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"zhacatomn"},"content":"        });","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"zhacatomn"},"content":"        // Scroll down to the end every time dialogContainer\u0027s height changes","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"zhacatomn"},"content":"        dialogContainer.heightProperty().addListener((observable -\u003e scrollPane.setVvalue(1.0)));","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":133,"author":{"gitId":"zhacatomn"},"content":"        // Send an initial welcome message","lastModifiedDate":"2023-02-05"},{"lineNumber":134,"author":{"gitId":"zhacatomn"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(","lastModifiedDate":"2023-02-05"},{"lineNumber":135,"author":{"gitId":"zhacatomn"},"content":"                new Label(WELCOME_MESSAGE),","lastModifiedDate":"2023-02-05"},{"lineNumber":136,"author":{"gitId":"zhacatomn"},"content":"                new ImageView(duke))","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"zhacatomn"},"content":"        );","lastModifiedDate":"2023-02-05"},{"lineNumber":138,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"zhacatomn"},"content":"     * Handles the text input given by the user through the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"zhacatomn"},"content":"    private void handleUserInput(Stage stage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"zhacatomn"},"content":"        String userInputStr \u003d userInput.getText().trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"zhacatomn"},"content":"        if (userInputStr.equalsIgnoreCase(EXIT_COMMAND)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"zhacatomn"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"zhacatomn"},"content":"                    DialogBox.getDukeDialog(new Label(EXIT_MESSAGE), new ImageView(duke))","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"zhacatomn"},"content":"            );","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"zhacatomn"},"content":"            stage.close();","lastModifiedDate":"2023-02-10"},{"lineNumber":150,"author":{"gitId":"zhacatomn"},"content":"            return;","lastModifiedDate":"2023-02-10"},{"lineNumber":151,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"zhacatomn"},"content":"        Label userText \u003d new Label(userInputStr);","lastModifiedDate":"2023-02-02"},{"lineNumber":153,"author":{"gitId":"zhacatomn"},"content":"        String dukeResponseStr;","lastModifiedDate":"2023-02-02"},{"lineNumber":154,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":155,"author":{"gitId":"zhacatomn"},"content":"            dukeResponseStr \u003d parser.parseString(userInputStr, tasks, ui);","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"zhacatomn"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"zhacatomn"},"content":"        } catch (BadCommandException | DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"zhacatomn"},"content":"            dukeResponseStr \u003d ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"zhacatomn"},"content":"        Label dukeText \u003d new Label(dukeResponseStr);","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"zhacatomn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"zhacatomn"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"zhacatomn"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"zhacatomn"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":165,"author":{"gitId":"zhacatomn"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-02"},{"lineNumber":166,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zhacatomn":166,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":" * Exception class representing a Duke error.","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"    public DukeException(String errMsg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"        super(errMsg);","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zhacatomn":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":" * Class representing the parser.","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"    private static final BadCommandException BAD_PARAMS_ERROR \u003d","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"            new BadCommandException(\"There are insufficient or invalid arguments!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    private static final BadCommandException UNKNOWN_COMMAND_ERROR \u003d","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"            new BadCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    private static final String PARAMS_DELIMITER \u003d \"/\";","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"    private enum Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"        LIST(\"list\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"        MARK(\"mark\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"        UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"        DELETE(\"delete\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"        TODO(\"todo\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"        DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"        EVENT(\"event\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"        FIND(\"find\");","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"        private static final HashMap\u003cString, Command\u003e STRING_TO_COMMAND_MAP \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"        private final String commandStr;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"        static {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"            for (Command command: values()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"                STRING_TO_COMMAND_MAP.put(command.commandStr, command);","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"        Command(String commandStr) {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"            this.commandStr \u003d commandStr;","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"        public static Command valueOfCommandStr(String commandStr) {","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"            return STRING_TO_COMMAND_MAP.get(commandStr);","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"        public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"            return commandStr;","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"     * Returns the singular integer index from a provided parameter string. For commands","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"     * that only require a single integer value, such as \u0027mark\u0027.","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"     * @param paramsStr Given parameter string.","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"     * @return The singular integer index.","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If the parameter string is not a valid integer representation.","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"    private int getIntegerFromParamsStr(String paramsStr) throws BadCommandException {","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"        int idx;","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"            idx \u003d Integer.parseInt(paramsStr);","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"            throw BAD_PARAMS_ERROR;","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"        return idx;","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"     * Returns a pair whose key represents the default argument, and whose value represents the mapping between","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"     * the parameter names and the argument values. If there is no default argument, then the key value is set","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"     * to null. The default argument is always assumed to be the first argument.","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"     * @param paramsStr The parameter string provided.","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"     * @param hasDefaultArgument Boolean indicating if there is a default argument.","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"     * @return A pair representing the above.","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If any delimiter is not followed by a parameter-argument.","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"    private Pair\u003cString, HashMap\u003cString, String\u003e\u003e getMappingFromParamsStr(","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"            String paramsStr,","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"            boolean hasDefaultArgument","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"    ) throws BadCommandException {","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"        String[] paramsSplit \u003d paramsStr.trim().split(PARAMS_DELIMITER);","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"        // If there\u0027s a default argument (an argument with no specified delimiter like the \u0027deadline\u0027 command),","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"        // then we take the first item in paramsSplit as the default argument.","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"        int startingIdx \u003d hasDefaultArgument ? 1 : 0;","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"        String defaultArgument \u003d hasDefaultArgument ? paramsSplit[0].trim() : null;","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"        HashMap\u003cString, String\u003e paramToArgMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"        for (int i \u003d startingIdx; i \u003c paramsSplit.length; i++) {","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"            String[] paramArgSplit \u003d paramsSplit[i].split(\" \", 2);","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"            if (paramArgSplit.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"                throw BAD_PARAMS_ERROR;","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"            paramToArgMap.put(","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"                    paramArgSplit[0].trim(),","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"                    paramsSplit.length \u003c 2 ? \"\" : paramArgSplit[1].trim()","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"            );","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"        return new Pair\u003c\u003e(defaultArgument, paramToArgMap);","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"     * Returns new task based on the given params.","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"zhacatomn"},"content":"     * @param commandEnum Command enum value of the command.","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"zhacatomn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"zhacatomn"},"content":"     * @param paramToArgMap Parameter to argument map given.","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"zhacatomn"},"content":"     * @return New task based on the above parameters.","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If insufficient or invalid arguments are given.","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"zhacatomn"},"content":"    private Task createNewTask(Command commandEnum,","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"zhacatomn"},"content":"                               String description,","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"zhacatomn"},"content":"                               HashMap\u003cString, String\u003e paramToArgMap) throws BadCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"zhacatomn"},"content":"        boolean hasTagsArg \u003d paramToArgMap.containsKey(\"tag\");","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"zhacatomn"},"content":"        String tags \u003d paramToArgMap.get(\"tag\");","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"zhacatomn"},"content":"            Task newTask \u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"zhacatomn"},"content":"            switch (commandEnum) {","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"zhacatomn"},"content":"            case TODO:","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"zhacatomn"},"content":"                newTask \u003d hasTagsArg ? new Todo(description, tags) : new Todo(description);","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"zhacatomn"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"zhacatomn"},"content":"            case DEADLINE:","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"zhacatomn"},"content":"                if (!paramToArgMap.containsKey(\"by\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"zhacatomn"},"content":"                    throw BAD_PARAMS_ERROR;","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"zhacatomn"},"content":"                newTask \u003d hasTagsArg","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"zhacatomn"},"content":"                        ? new Deadline(description, paramToArgMap.get(\"by\"), tags)","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"zhacatomn"},"content":"                        : new Deadline(description, paramToArgMap.get(\"by\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"zhacatomn"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"zhacatomn"},"content":"            case EVENT:","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"zhacatomn"},"content":"                if (!paramToArgMap.containsKey(\"from\") || !paramToArgMap.containsKey(\"to\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"zhacatomn"},"content":"                    throw BAD_PARAMS_ERROR;","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"zhacatomn"},"content":"                newTask \u003d hasTagsArg","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"zhacatomn"},"content":"                        ? new Event(description, paramToArgMap.get(\"from\"), paramToArgMap.get(\"to\"), tags)","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"zhacatomn"},"content":"                        : new Event(description, paramToArgMap.get(\"from\"), paramToArgMap.get(\"to\")","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"zhacatomn"},"content":"                );","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"zhacatomn"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"zhacatomn"},"content":"            default:","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"zhacatomn"},"content":"                throw UNKNOWN_COMMAND_ERROR;","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"zhacatomn"},"content":"            return newTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"zhacatomn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"zhacatomn"},"content":"            throw new BadCommandException(e.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":145,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"zhacatomn"},"content":"     * Parses a given input string.","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"zhacatomn"},"content":"     * @param inputStr The input string given by the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"zhacatomn"},"content":"     * @param tasks The TaskList to be managed.","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"zhacatomn"},"content":"     * @param ui The Ui to be used to print messages.","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If the parameters of the input string are insufficient, or if","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"zhacatomn"},"content":"     *          the command given is not recognised.","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"zhacatomn"},"content":"    public String parseString(String inputStr, TaskList tasks, Ui ui) throws BadCommandException {","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"zhacatomn"},"content":"        inputStr \u003d inputStr.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"zhacatomn"},"content":"        String[] inputSplit \u003d inputStr.split(\" \", 2);","lastModifiedDate":"2023-02-05"},{"lineNumber":160,"author":{"gitId":"zhacatomn"},"content":"        String commandStr \u003d inputSplit.length \u003c 1 ? \"\" : inputSplit[0].trim();","lastModifiedDate":"2023-02-05"},{"lineNumber":161,"author":{"gitId":"zhacatomn"},"content":"        String paramsStr \u003d inputSplit.length \u003c 2 ? \"\" : inputSplit[1].trim();","lastModifiedDate":"2023-02-05"},{"lineNumber":162,"author":{"gitId":"zhacatomn"},"content":"        Command commandEnumValue \u003d Command.valueOfCommandStr(commandStr);","lastModifiedDate":"2023-02-05"},{"lineNumber":163,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":164,"author":{"gitId":"zhacatomn"},"content":"        if (commandEnumValue \u003d\u003d null) {","lastModifiedDate":"2023-02-05"},{"lineNumber":165,"author":{"gitId":"zhacatomn"},"content":"            throw UNKNOWN_COMMAND_ERROR;","lastModifiedDate":"2023-02-05"},{"lineNumber":166,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":167,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"zhacatomn"},"content":"        switch (commandEnumValue) {","lastModifiedDate":"2023-02-05"},{"lineNumber":169,"author":{"gitId":"zhacatomn"},"content":"        case LIST:","lastModifiedDate":"2023-02-05"},{"lineNumber":170,"author":{"gitId":"zhacatomn"},"content":"            return ui.showNormalMessage(String.format(","lastModifiedDate":"2023-02-02"},{"lineNumber":171,"author":{"gitId":"zhacatomn"},"content":"                    \"Here are the tasks in your list:\\n%s\",","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"zhacatomn"},"content":"                    tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"zhacatomn"},"content":"            ));","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"zhacatomn"},"content":"        case FIND: {","lastModifiedDate":"2023-02-05"},{"lineNumber":175,"author":{"gitId":"zhacatomn"},"content":"            TaskList matchingTasks \u003d tasks.getTasksByKeyword(paramsStr);","lastModifiedDate":"2023-02-05"},{"lineNumber":176,"author":{"gitId":"zhacatomn"},"content":"            return ui.showNormalMessage(String.format(","lastModifiedDate":"2023-02-02"},{"lineNumber":177,"author":{"gitId":"zhacatomn"},"content":"                    \"Here are the matching tasks in your list:\\n%s\",","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"zhacatomn"},"content":"                    matchingTasks","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"zhacatomn"},"content":"            ));","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":181,"author":{"gitId":"zhacatomn"},"content":"        case MARK: {","lastModifiedDate":"2023-02-05"},{"lineNumber":182,"author":{"gitId":"zhacatomn"},"content":"            int idx \u003d getIntegerFromParamsStr(paramsStr) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":183,"author":{"gitId":"zhacatomn"},"content":"            tasks.markTaskAsDone(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"zhacatomn"},"content":"            return ui.showNormalMessage(String.format(","lastModifiedDate":"2023-02-02"},{"lineNumber":185,"author":{"gitId":"zhacatomn"},"content":"                    \"Nice! I\u0027ve marked this task as done:\\n\\t%s\",","lastModifiedDate":"2023-02-02"},{"lineNumber":186,"author":{"gitId":"zhacatomn"},"content":"                    tasks.getTask(idx)","lastModifiedDate":"2023-01-26"},{"lineNumber":187,"author":{"gitId":"zhacatomn"},"content":"            ));","lastModifiedDate":"2023-01-26"},{"lineNumber":188,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":189,"author":{"gitId":"zhacatomn"},"content":"        case UNMARK: {","lastModifiedDate":"2023-02-05"},{"lineNumber":190,"author":{"gitId":"zhacatomn"},"content":"            int idx \u003d getIntegerFromParamsStr(paramsStr) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":191,"author":{"gitId":"zhacatomn"},"content":"            tasks.unmarkTaskAsDone(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"zhacatomn"},"content":"            return ui.showNormalMessage(String.format(","lastModifiedDate":"2023-02-02"},{"lineNumber":193,"author":{"gitId":"zhacatomn"},"content":"                    \"OK, I\u0027ve marked this task as not done yet:\\n\\t%s\",","lastModifiedDate":"2023-02-02"},{"lineNumber":194,"author":{"gitId":"zhacatomn"},"content":"                    tasks.getTask(idx)","lastModifiedDate":"2023-01-26"},{"lineNumber":195,"author":{"gitId":"zhacatomn"},"content":"            ));","lastModifiedDate":"2023-01-26"},{"lineNumber":196,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":197,"author":{"gitId":"zhacatomn"},"content":"        case DELETE: {","lastModifiedDate":"2023-02-05"},{"lineNumber":198,"author":{"gitId":"zhacatomn"},"content":"            int idx \u003d getIntegerFromParamsStr(paramsStr) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":199,"author":{"gitId":"zhacatomn"},"content":"            Task deletedTask \u003d tasks.removeTask(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":200,"author":{"gitId":"zhacatomn"},"content":"            return ui.showNormalMessage(String.format(","lastModifiedDate":"2023-02-02"},{"lineNumber":201,"author":{"gitId":"zhacatomn"},"content":"                    \"Got it. I\u0027ve removed this task:\\n\\t%s\\nNow you have %d task%s in the list.\",","lastModifiedDate":"2023-02-02"},{"lineNumber":202,"author":{"gitId":"zhacatomn"},"content":"                    deletedTask,","lastModifiedDate":"2023-01-26"},{"lineNumber":203,"author":{"gitId":"zhacatomn"},"content":"                    tasks.getSize(),","lastModifiedDate":"2023-01-26"},{"lineNumber":204,"author":{"gitId":"zhacatomn"},"content":"                    tasks.getSize() \u003e 1 ? \"s\" : \"\"","lastModifiedDate":"2023-01-26"},{"lineNumber":205,"author":{"gitId":"zhacatomn"},"content":"            ));","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":207,"author":{"gitId":"zhacatomn"},"content":"        case TODO:","lastModifiedDate":"2023-02-09"},{"lineNumber":208,"author":{"gitId":"zhacatomn"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-05"},{"lineNumber":209,"author":{"gitId":"zhacatomn"},"content":"        case EVENT: {","lastModifiedDate":"2023-02-05"},{"lineNumber":210,"author":{"gitId":"zhacatomn"},"content":"            Pair\u003cString, HashMap\u003cString, String\u003e\u003e descriptionMappingPair \u003d","lastModifiedDate":"2023-02-05"},{"lineNumber":211,"author":{"gitId":"zhacatomn"},"content":"                    getMappingFromParamsStr(paramsStr, true);","lastModifiedDate":"2023-02-05"},{"lineNumber":212,"author":{"gitId":"zhacatomn"},"content":"            String description \u003d descriptionMappingPair.getKey();","lastModifiedDate":"2023-02-05"},{"lineNumber":213,"author":{"gitId":"zhacatomn"},"content":"            HashMap\u003cString, String\u003e paramToArgMap \u003d descriptionMappingPair.getValue();","lastModifiedDate":"2023-02-05"},{"lineNumber":214,"author":{"gitId":"zhacatomn"},"content":"            Task newTask \u003d createNewTask(commandEnumValue, description, paramToArgMap);","lastModifiedDate":"2023-02-09"},{"lineNumber":215,"author":{"gitId":"zhacatomn"},"content":"            assert newTask !\u003d null : \"newTask should not be null\";","lastModifiedDate":"2023-02-05"},{"lineNumber":216,"author":{"gitId":"zhacatomn"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"zhacatomn"},"content":"            return ui.showNormalMessage(String.format(","lastModifiedDate":"2023-02-02"},{"lineNumber":218,"author":{"gitId":"zhacatomn"},"content":"                    \"Got it. I\u0027ve added this task:\\n\\t%s\\nNow you have %d task%s in the list.\",","lastModifiedDate":"2023-02-02"},{"lineNumber":219,"author":{"gitId":"zhacatomn"},"content":"                    newTask,","lastModifiedDate":"2023-01-26"},{"lineNumber":220,"author":{"gitId":"zhacatomn"},"content":"                    tasks.getSize(),","lastModifiedDate":"2023-01-26"},{"lineNumber":221,"author":{"gitId":"zhacatomn"},"content":"                    tasks.getSize() \u003e 1 ? \"s\" : \"\"","lastModifiedDate":"2023-01-26"},{"lineNumber":222,"author":{"gitId":"zhacatomn"},"content":"            ));","lastModifiedDate":"2023-01-26"},{"lineNumber":223,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":224,"author":{"gitId":"zhacatomn"},"content":"        default:","lastModifiedDate":"2023-02-09"},{"lineNumber":225,"author":{"gitId":"zhacatomn"},"content":"            throw UNKNOWN_COMMAND_ERROR;","lastModifiedDate":"2023-02-09"},{"lineNumber":226,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":227,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":228,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":228}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":" * Class representing the loading and retrieving of data.","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    protected static final String LOAD_ERROR_PREFIX_STRING \u003d \"Error retrieving local data: \";","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    protected static final String SAVE_ERROR_PREFIX_STRING \u003d \"Error saving data: \";","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"    protected String filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"     * Returns a Storage object.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"     * @param filePath The file path of the data file to retrieve and store data.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"     * Reads the file and generates a TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"     * @return A TaskList based on the given data.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"     * @throws DukeException If an unexpected entry is given.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(LOAD_ERROR_PREFIX_STRING + \"A data file does not exist\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"            Scanner fileScanner \u003d new Scanner(dataFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"            int rowCnt \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"                rowCnt++;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"                String[] inputStr \u003d fileScanner.nextLine().trim().split(\" \\\\| \");","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"                if (inputStr.length \u003c 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"                    continue;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"                    Task newTask \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"                    String taskIconString \u003d inputStr[0];","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"                    String description \u003d inputStr[2];","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"                    Task.TaskIcon taskIconEnumValue \u003d Task.TaskIcon.valueOfIconString(taskIconString);","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"                    if (taskIconEnumValue \u003d\u003d null) {","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"                        continue;","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"                    switch (taskIconEnumValue) {","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"                    case TODO:","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"                        newTask \u003d inputStr.length \u003e\u003d 4","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"                                ? new Todo(description, inputStr[3])","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"                                : new Todo(description);","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"                        break;","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"                        if (inputStr.length \u003c 4) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"                            continue;","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"                        newTask \u003d inputStr.length \u003e\u003d 5","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"                                ? new Deadline(description, inputStr[3], inputStr[4])","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"                                : new Deadline(description, inputStr[3]);","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"                        break;","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"                    case EVENT:","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"                        if (inputStr.length \u003c 5) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"                            continue;","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"                        newTask \u003d inputStr.length \u003e\u003d 6","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"                            ? new Event(inputStr[2], inputStr[3], inputStr[4], inputStr[5])","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"                            : new Event(inputStr[2], inputStr[3], inputStr[4]);","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"                        break;","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"                    default:","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"                        continue;","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"                    if (Integer.parseInt(inputStr[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"                        newTask.markAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"                    throw new DukeException(String.format(","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"                            LOAD_ERROR_PREFIX_STRING","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"                                    + \"Error processing row %d of %s: %s\",","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"                            rowCnt,","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"                            filePath,","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"                            e.getMessage()","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"                    ));","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"            fileScanner.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(LOAD_ERROR_PREFIX_STRING + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"zhacatomn"},"content":"     * Saves the data from a given TaskList onto the data file.","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"zhacatomn"},"content":"     * @param tasks The TaskList to be saved.","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"zhacatomn"},"content":"     * @throws DukeException If an error occurs when writing to the file.","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"zhacatomn"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"zhacatomn"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"zhacatomn"},"content":"        File parentDir \u003d dataFile.getParentFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"zhacatomn"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists() \u0026\u0026 !parentDir.mkdirs()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(SAVE_ERROR_PREFIX_STRING + \"Unable to create directory\");","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"zhacatomn"},"content":"            FileWriter fw \u003d new FileWriter(dataFile.getAbsoluteFile());","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"zhacatomn"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"zhacatomn"},"content":"                Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"zhacatomn"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"zhacatomn"},"content":"                    task \u003d tasks.getTask(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"zhacatomn"},"content":"                } catch (BadCommandException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"zhacatomn"},"content":"                    throw new DukeException(SAVE_ERROR_PREFIX_STRING + \"Unable to access task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"zhacatomn"},"content":"                ArrayList\u003cString\u003e params \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"zhacatomn"},"content":"                params.add(task.getTaskIcon().getIconString());","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"zhacatomn"},"content":"                params.add(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"zhacatomn"},"content":"                params.add(task.getDescription());","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"zhacatomn"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"zhacatomn"},"content":"                    Event castedTask \u003d (Event) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"zhacatomn"},"content":"                    params.add(castedTask.getStartTime());","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"zhacatomn"},"content":"                    params.add(castedTask.getEndTime());","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"zhacatomn"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"zhacatomn"},"content":"                    Deadline castedTask \u003d (Deadline) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"zhacatomn"},"content":"                    params.add(castedTask.getByDate());","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"zhacatomn"},"content":"                if (task.hasTags()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"zhacatomn"},"content":"                    params.add(task.getTags());","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"zhacatomn"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"zhacatomn"},"content":"                String outputStr \u003d String.join(\" | \", params);","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"zhacatomn"},"content":"                fw.write(outputStr + System.lineSeparator());","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"zhacatomn"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"zhacatomn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(SAVE_ERROR_PREFIX_STRING + e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":149}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import java.util.Collection;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":" * Class representing the list of Tasks.","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"    protected static final BadCommandException INDEX_OOB_ERROR \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"            new BadCommandException(\"Index given is out of bounds!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"     * Initialises an empty TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"     * Initialises an TaskList containing some Tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    public TaskList(Collection\u003cTask\u003e initTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"        tasks \u003d new ArrayList\u003c\u003e(initTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    private boolean isIndexInRange(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"        return idx \u003c tasks.size() \u0026\u0026 idx \u003e\u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"     * Adds a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"     * Removes a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"     * @param idx The index of the task to be removed.","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"     * @return The removed task.","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If the idx given is OOB.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"    public Task removeTask(int idx) throws BadCommandException {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"        if (!isIndexInRange(idx)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"            throw INDEX_OOB_ERROR;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"        Task deletedTask \u003d tasks.get(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"        tasks.remove(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"        return deletedTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"     * @param idx Index of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If the idx given is OOB.","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"    public void markTaskAsDone(int idx) throws BadCommandException {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"        if (!isIndexInRange(idx)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"            throw INDEX_OOB_ERROR;","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"        tasks.get(idx).markAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"     * Unmarks a task as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"     * @param idx Index of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If the idx given is OOB.","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"    public void unmarkTaskAsDone(int idx) throws BadCommandException {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"        if (!isIndexInRange(idx)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"            throw INDEX_OOB_ERROR;","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"        tasks.get(idx).unmarkAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"     * Retrieves a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"     * @param idx Index of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"     * @throws BadCommandException If the idx given is OOB.","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"    public Task getTask(int idx) throws BadCommandException {","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"        if (!isIndexInRange(idx)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"            throw INDEX_OOB_ERROR;","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"        return tasks.get(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"     * Retreives tasks using a keyword.","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"     * @param keyword Keyword to be given.","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"     * @return TaskList containing the matching tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"zhacatomn"},"content":"    public TaskList getTasksByKeyword(String keyword) {","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"zhacatomn"},"content":"        String trimmedKeyword \u003d keyword.trim().toLowerCase();","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"zhacatomn"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"zhacatomn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"zhacatomn"},"content":"            String taskString \u003d task.toString().toLowerCase();","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"zhacatomn"},"content":"            if (task.toString().toLowerCase().contains(trimmedKeyword)","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"zhacatomn"},"content":"                    || trimmedKeyword.contains(taskString)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"zhacatomn"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"zhacatomn"},"content":"        return matchingTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"zhacatomn"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"zhacatomn"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"zhacatomn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"zhacatomn"},"content":"        StringBuilder listOutput \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"zhacatomn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"zhacatomn"},"content":"            listOutput.append(String.format(","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"zhacatomn"},"content":"                    \"%d. %s\",","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"zhacatomn"},"content":"                    i + 1,","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"zhacatomn"},"content":"                    tasks.get(i)","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"zhacatomn"},"content":"            ));","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"zhacatomn"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"zhacatomn"},"content":"                listOutput.append(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"zhacatomn"},"content":"        return listOutput.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":136}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":" * Class for managing the UI.","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"     * Shows normal display message.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"     * @param outputMsg The message to be displayed.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"    public String showNormalMessage(String outputMsg) {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"        return outputMsg.trim();","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"     * Shows an error message.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"     * @param errorMsg The error message to be displayed.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    public String showErrorMessage(String errorMsg) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"        return \"OOPS!!! \" + errorMsg.trim();","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":22}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":" * Class representing a Deadline.","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"    protected static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy[ HHmm]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"    protected static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, hh:mma\");","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    protected String byStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"     * Returns a Deadline object.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"     * @param byStr       The \u0027by\u0027 date.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"     * @throws DukeException If description or byStr are empty.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"    public Deadline(String description, String byStr) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"        super(description.trim(), TaskIcon.DEADLINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"        setByDate(byStr);","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"     * Returns a Deadline object. Accepts additional parameter tag.","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"     * @param byStr The \u0027by\u0027 date","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"     * @param tags Tags of the Deadline.","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"    public Deadline(String description, String byStr, String tags) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"        super(description, TaskIcon.DEADLINE, tags);","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"        setByDate(byStr);","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"    private void setByDate(String byStr) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"        this.byStr \u003d byStr.trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"        if (this.byStr.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(\"The \u0027by\u0027 date of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"            TemporalAccessor temporalAccessor \u003d INPUT_FORMATTER.parseBest(","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"                    byStr, LocalDateTime::from, LocalDate::from);","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"            if (temporalAccessor instanceof LocalDateTime) {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"                byDateTime \u003d (LocalDateTime) temporalAccessor;","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"            } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"                byDateTime \u003d ((LocalDate) temporalAccessor).atStartOfDay();","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"            byDateTime \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"    public String getByDate() {","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"        return byStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"        return String.format(","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"                \"%s (by: %s)\",","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"                super.toString(),","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"                byDateTime \u003d\u003d null ? byStr : byDateTime.format(OUTPUT_FORMATTER)","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"        );","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":74}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":" * Class representing an event","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"    protected static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy[ HHmm]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"    protected static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, hh:mma\");","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    protected String startStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    protected LocalDateTime startDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    protected String endStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    protected LocalDateTime endDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"     * Returns an Event object.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"     * @param startStr A String representing the start date.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"     * @param endStr A String representing the end date.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"     * @throws DukeException If any of the given arguments are empty.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    public Event(String description, String startStr, String endStr) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"        super(description.trim(), TaskIcon.EVENT);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"        setStartTime(startStr);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"        setEndTime(endStr);","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"     * Returns an Event object, with tags.","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"     * @param startStr A String representing the start date.","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"     * @param endStr A String representing the end date.","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"     * @param tags Tags of the Event.","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"    public Event(String description, String startStr, String endStr, String tags) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"        super(description.trim(), TaskIcon.EVENT, tags);","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"        setStartTime(startStr);","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"        setEndTime(endStr);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"    protected void setStartTime(String startStr) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"        this.startStr \u003d startStr.trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"        if (this.startStr.equals(\"\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(\"The start time of an event cannot be empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"            TemporalAccessor temporalAccessor \u003d INPUT_FORMATTER.parseBest(","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"                    startStr, LocalDateTime::from, LocalDate::from);","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"            if (temporalAccessor instanceof LocalDateTime) {","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"                startDateTime \u003d (LocalDateTime) temporalAccessor;","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"            } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"                startDateTime \u003d ((LocalDate) temporalAccessor).atStartOfDay();","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"            startDateTime \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"    protected void setEndTime(String endStr) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"        this.endStr \u003d endStr.trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"        if (this.endStr.equals(\"\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(\"The end time of an event cannot be empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"            TemporalAccessor temporalAccessor \u003d INPUT_FORMATTER.parseBest(","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"                    endStr, LocalDateTime::from, LocalDate::from);","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"            if (temporalAccessor instanceof LocalDateTime) {","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"                endDateTime \u003d (LocalDateTime) temporalAccessor;","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"            } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"                endDateTime \u003d ((LocalDate) temporalAccessor).atStartOfDay();","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"            endDateTime \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"        return startStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"        return endStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"        return String.format(","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"            \"%s (from: %s to: %s)\",","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"            super.toString(),","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"            startDateTime \u003d\u003d null ? startStr : startDateTime.format(OUTPUT_FORMATTER),","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"            endDateTime \u003d\u003d null ? endStr : endDateTime.format(OUTPUT_FORMATTER)","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"        );","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":104}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":" * Class representing a Task.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"     * Enum representing the task icon.","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"    public enum TaskIcon {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"        TODO(\"T\"),","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"        EVENT(\"E\"),","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"        DEADLINE(\"D\");","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"        private static final HashMap\u003cString, TaskIcon\u003e STRING_TO_ENUM_MAP \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"        private final String iconString;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"        static {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"            for (TaskIcon taskIcon : values()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"                STRING_TO_ENUM_MAP.put(taskIcon.getIconString(), taskIcon);","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"        TaskIcon(String iconString) {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"            this.iconString \u003d iconString;","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"        public static TaskIcon valueOfIconString(String iconString) {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"            return STRING_TO_ENUM_MAP.get(iconString);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"        /**","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"         * Getter function for the symbol of the enum","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"         *","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"         * @return Symbol string","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"         */","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"        public String getIconString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"            return iconString;","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"    };","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"    protected String tags \u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"    protected TaskIcon taskIcon;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"     * Returns a Task object.","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"    protected Task(String description, TaskIcon taskIcon) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"        this.taskIcon \u003d taskIcon;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"        if (this.description.equals(\"\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(\"The description of a Task cannot be empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"    protected Task(String description, TaskIcon taskIcon, String tags) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"        this(description, taskIcon);","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"        this.tags \u003d tags.trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"        if (this.tags.equals(\"\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"            throw new DukeException(\"The tags of a Task cannot be empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"        return description;","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"    public String getTags() {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"        return tags;","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"    public boolean hasTags() {","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"        return tags !\u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"        return isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"    public TaskIcon getTaskIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"        return this.taskIcon;","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"zhacatomn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"zhacatomn"},"content":"        String baseString \u003d String.format(","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"zhacatomn"},"content":"                \"[%s][%s] %s\",","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"zhacatomn"},"content":"                this.taskIcon.getIconString(),","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"zhacatomn"},"content":"                getStatusIcon(),","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"zhacatomn"},"content":"                getDescription()","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"zhacatomn"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"zhacatomn"},"content":"        if (hasTags()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"zhacatomn"},"content":"            return String.format(\"%s [%s]\", baseString, getTags());","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"zhacatomn"},"content":"        return baseString;","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":117}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":" * Class representing a Todo.","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    public Todo(String description) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"        super(description.trim(), TaskIcon.TODO);","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"    public Todo(String description, String tasks) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"        super(description.trim(), TaskIcon.TODO, tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"     * Represent duke.task.Todo as a string","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"     * @return String representation of a duke.task.Todo","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"        return String.format(\"%s\", super.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":24}},{"path":"src/test/java/seedu/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"    public void deadline_emptyDescription_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"            new Deadline(\"   \", \"1\");","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"            assertEquals(\"The description of a deadline cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    public void deadline_emptyByTime_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"            new Deadline(\"1\", \"   \");","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"            assertEquals(\"The \u0027by\u0027 date of a deadline cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":27}},{"path":"src/test/java/seedu/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"public class EventTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"    public void event_emptyDescription_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"            new Event(\"   \", \"1\", \"1\");","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"            assertEquals(\"The description of an event cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    public void event_emptyStartEndTime_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"            new Event(\"desc\", \"  \", \"  \");","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"            assertEquals(\"The start and/or end time of an event cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":27}},{"path":"src/test/java/seedu/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"    public void todo_emptyDescription_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"            new Todo(\"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"            assertEquals(\"The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhacatomn":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"todo join sports club","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"delete 5","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"delete 10","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhacatomn":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"zhacatomn":1}}]
