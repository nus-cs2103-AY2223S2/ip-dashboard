[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"# RED : Robotic Enhancer of Development","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"Personal Assistant Chatbot that helps a person to keep track of various things efficiently","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhengsterz":2,"-":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhengsterz":15,"-":41}},{"path":"data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"This is your current task list:","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"1. [E][ ] cry          (From: 2pm         To: 8am) ","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"2. [T][ ] eat5        ","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"3. [T][ ] die  ","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"4. [T][ ] eat food  ","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"5. [T][ ] eat drink  ","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"6. [D][ ] die  (Before: Nov 08 2022) ","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"7. [D][ ] dieee  (Before: 2022-11-08T16:00) ","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"zhengsterz":9}},{"path":"src/main/java/red/Red.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import red.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import red.exception.RedException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import red.parser.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import red.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import red.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import red.ui.UI;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"import red.ui.DialogBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":" * The main Red class to run","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"public class Red {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    private final UI ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     * The constructor","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    public Red() {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        this.tasks \u003d new TaskList(100);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        this.storage \u003d new Storage(this.tasks,this.ui);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        this.storage.createStorage();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"     * The function that starts the whole program.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        ui.sayHello();","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"            } catch (RedException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"            } finally {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"        this.storage.saveToStorage();","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"            this.ui.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"            command.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"            return this.ui.getCurrentReply();","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"        } catch (RedException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"            // append the error message to the ui\u0027s response","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"            this.ui.addCurrentReply(e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"            return this.ui.getCurrentReply();","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"        new Red().run();","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhengsterz":80}},{"path":"src/main/java/red/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import red.exception.RedException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import red.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import red.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import red.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import red.ui.UI;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":" * This class specifies the act of adding a class to the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    private final Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"     * The constructor of AddCommand that takes in the task to be added.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"     * Adds the given task to the TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     * @param tasks The TaskList that contains the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"     * @param ui The UI that interprets any user inputs.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"     * @param storage The Storage that keeps track of how the list of tasks changes from user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"     * @throws RedException Throws Exception when the user inputs invalid instruction.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws RedException {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        ui.addCurrentReply(\"Add Task: \" + this.task +\"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"     * Compares this object to the specified object.","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"     * @param obj the object to compare with.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"     * @return true if the objects are the same; false otherwise.","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        if (!(obj instanceof AddCommand)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"        AddCommand ddlObj \u003d (AddCommand) obj;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        return this.task.equals(ddlObj.task);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"     * Returns a string representation of the AddCommand in the format \"Add Task: task\".","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"     * @return A string representation of the AddCommand.","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"        return \"Add Task: \" + this.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhengsterz":70}},{"path":"src/main/java/red/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import red.exception.RedException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import red.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import red.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import red.ui.UI;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":" * This abstract class is the parent class of classes that alter the current list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     * Indicates whether the Command is the Exit Command.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"     * @return true if command is the exit command and false if it is not.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     * Executes the specified command.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"     * @param tasks The TaskList that contains the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"     * @param ui The UI that interprets any user inputs.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     * @param storage The Storage that keeps track of how the list of tasks changes from user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"     * @throws RedException Throws Exception when the user inputs invalid instruction.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws RedException;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhengsterz":35}},{"path":"src/main/java/red/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import red.exception.RedException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import red.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import red.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import red.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import red.ui.UI;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":" * This class specifies the act of deleting a class from the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"     * The constructor for DeleteCommand that takes in the index of the task to be deleted.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * @param taskIndex the index of the task to be deleted","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"     * Remove the specified task(by index) from the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"     * @param tasks The TaskList that contains the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"     * @param ui The UI that interprets any user inputs.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"     * @param storage The Storage that keeps track of how the list of tasks changes from user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"     * @throws RedException Throws Exception when the user inputs invalid instruction.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws RedException {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        if (tasks.getTaskListSize() \u003c 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"            throw new RedException(\"There are no tasks to be removed\");","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"        if (tasks.getTaskListSize() \u003c this.taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"            throw new RedException(\"The task with the specified index does not exist\");","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"            Task deletedTask \u003d tasks.deleteTask(this.taskIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"            String message \u003d String.format(\"Noted. I\u0027ve removed this task:\\n %s \\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"                    deletedTask.toString(), tasks.getTaskListSize());","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"            ui.addCurrentReply(message);","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"            System.out.println(message);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhengsterz":54}},{"path":"src/main/java/red/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import red.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import red.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import red.ui.UI;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":" * This class specifies the act of exiting the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"     * Displays the goodbye message and terminate the program.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     * @param tasks The TaskList that contains the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"     * @param ui The UI that interprets any user inputs.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"     * @param storage The Storage that keeps track of how the list of tasks changes from user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"        ui.addCurrentReply(\"Goodbye\");","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        System.out.println(\"Goodbye\");","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"     * Indicates that this Command is the exit Command.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     * @return returns true","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhengsterz":36}},{"path":"src/main/java/red/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import red.exception.RedException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import red.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import red.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import red.ui.UI;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"    private final String descriptor;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"     * The constructor of FindCommand that takes in the descriptor of the task(s) to be found.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"     * @param descriptor The description of the task to be found.","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public FindCommand(String descriptor) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"        this.descriptor \u003d descriptor;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     * Locates the task(s) that correspond to the descriptor provided.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     * @param tasks The TaskList that contains the current list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     * @param ui The UI that interprets any user inputs.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"     * @param storage The Storage that keeps track of how the list of tasks changes from user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     * @throws RedException Throws Exception when the user inputs invalid instruction.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws RedException {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        ui.addCurrentReply(tasks.find(descriptor));","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        System.out.println(tasks.find(descriptor));","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"zhengsterz":33}},{"path":"src/main/java/red/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import red.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import red.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import red.ui.UI;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":" * This class specifies the act of listing out the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     * Displays all the tasks with their respective types and status.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"     * @param tasks The TaskList that contains the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"     * @param ui The UI that interprets any user inputs.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"     * @param storage The Storage that keeps track of how the list of tasks changes from user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        if (tasks.getTaskListSize() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"            System.out.println(\"There are no tasks in your list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"            return;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        ui.addCurrentReply(String.valueOf(tasks));","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        System.out.println(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhengsterz":31}},{"path":"src/main/java/red/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import red.exception.RedException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import red.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import red.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import red.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import red.ui.UI;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":" * This class specifies the marking of a task in the current list of tasks as completed.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"     * The constructor of MarkCommand that takes in the index of the task to be marked.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * @param taskIndex The index of the task to be marked","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"     * Marks the task in the current list of tasks with the given index as done.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"     * @param tasks The TaskList that contains the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"     * @param ui The UI that interprets any user inputs.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"     * @param storage The Storage that keeps track of how the list of tasks changes from user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"     * @throws RedException Throws Exception when the user inputs invalid instruction.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws RedException {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"        if (tasks.getTaskListSize() \u003c\u003d 0 || tasks.getTaskListSize() \u003c this.taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"            throw new RedException(\"Task specified does not exist\");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"            Task currentTask \u003d tasks.indexOf(this.taskIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"            ui.addCurrentReply(currentTask.mark());","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhengsterz":47}},{"path":"src/main/java/red/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import red.exception.RedException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import red.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import red.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import red.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import red.ui.UI;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":" * This class specifies the marking of a task in the current list of tasks as not completed.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     * The constructor of UnmarkCommand that takes in the index of the task to be unmarked.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     * @param taskIndex The index of the task to be marked","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     * Marks the task in the current list of tasks with the given index as not done.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"     * @param tasks The TaskList that contains the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"     * @param ui The UI that interprets any user inputs.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"     * @param storage The Storage that keeps track of how the list of tasks changes from user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     * @throws RedException Throws Exception when the user inputs invalid instruction.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws RedException {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"        if (tasks.getTaskListSize() \u003c\u003d 0 || tasks.getTaskListSize() \u003c taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"            throw new RedException(\"Task specified does not exist\");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"            Task currentTask \u003d tasks.indexOf(this.taskIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"            ui.addCurrentReply(currentTask.unmark());","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhengsterz":46}},{"path":"src/main/java/red/exception/RedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":" * This class specifies the exceptions that arise when the Red program is running.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"public class RedException extends RuntimeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"    public RedException(String errMessage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"        super(errMessage);","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhengsterz":11}},{"path":"src/main/java/red/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import red.exception.RedException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import red.task.DeadlineTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import red.task.EventTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import red.task.ToDoTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import red.command.AddCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import red.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import red.command.DeleteCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import red.command.ExitCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import red.command.ListCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"import red.command.MarkCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"import red.command.UnmarkCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"import red.command.FindCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":" * This class interprets the inputs by the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     * Parses through the user string input to understand what action should be taken next.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"     * @param input The user\u0027s instructions to the program.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"     * @throws RedException Throws Exception when the user inputs invalid instruction.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    public static Command parse(String input) throws RedException {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"        String[] arrOfStr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        } else if (arrOfStr[0].equals(\"find\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"            if(arrOfStr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"                throw new RedException(\"Specification of which task to find is missing\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"            return new FindCommand(arrOfStr[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        } else if (arrOfStr[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"            if(arrOfStr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"                throw new RedException(\"Specification of which task to mark is missing\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"            Integer index \u003d Integer.valueOf(arrOfStr[1]) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"        } else if (arrOfStr[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"            if(arrOfStr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"                throw new RedException(\"Specification of a which task to unmark is missing\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"            Integer index \u003d Integer.valueOf(arrOfStr[1]) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"            return  new UnmarkCommand(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        } else if (arrOfStr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"            DeadlineTask NewDeadlineTask \u003d null;","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"            if (arrOfStr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"                throw new RuntimeException(\"Specification of the DeadlineTask is missing\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"            String[] deadstr \u003d arrOfStr[1].split(\"/by \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"            if (deadstr.length !\u003d 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"                throw new RuntimeException(\"Specification of the DeadlineTask is missing\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"            String[] timestr \u003d deadstr[1].split(\" \", 2);","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"            if (timestr.length \u003c 1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"                throw new RuntimeException(\"Specification of the DeadlineTask is missing\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"            if (timestr.length \u003d\u003d 2 \u0026\u0026 timestr[1].isEmpty()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"                NewDeadlineTask \u003d new DeadlineTask(deadstr[0],timestr[0]);","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"            } else if (timestr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"                System.out.println(timestr[1].isEmpty());","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"                NewDeadlineTask \u003d new DeadlineTask(deadstr[0],timestr[0],timestr[1]);","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"            } else if (timestr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"                NewDeadlineTask \u003d new DeadlineTask(deadstr[0],timestr[0]);","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"            return new AddCommand(NewDeadlineTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"        } else if(arrOfStr[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"            if(arrOfStr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"                throw new RuntimeException(\"Specification of the ToDoTask is missing\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"            ToDoTask NewToDoTask \u003d new ToDoTask(arrOfStr[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"            return new AddCommand(NewToDoTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"        } else if(arrOfStr[0].equals(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"            if(arrOfStr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"                throw new RuntimeException(\"Specification of the EventTask is missing\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"            String[] eventStr \u003d arrOfStr[1].split(\"/from \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"            if(eventStr.length !\u003d 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"zhengsterz"},"content":"                throw new RuntimeException(\"Specification of the EventTask is missing\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"            String[] dateTimeStr \u003d eventStr[1].split(\" /to \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"zhengsterz"},"content":"            if(dateTimeStr.length !\u003d 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"zhengsterz"},"content":"                throw new RuntimeException(\"Specification of the EventTask is missing\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"            EventTask NewEventTask \u003d new EventTask(eventStr[0], dateTimeStr[0], dateTimeStr[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"zhengsterz"},"content":"            return new AddCommand(NewEventTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"zhengsterz"},"content":"        } else if(arrOfStr[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"zhengsterz"},"content":"            if(arrOfStr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"zhengsterz"},"content":"                throw new RuntimeException(\"Specification of the DeleteTask is missing\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"zhengsterz"},"content":"            return new DeleteCommand(Integer.parseInt(arrOfStr[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"zhengsterz"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"zhengsterz"},"content":"            throw new RedException(\"Cannot understand input\");","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zhengsterz":117,"-":2}},{"path":"src/main/java/red/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import java.io.File;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"import red.command.AddCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"import red.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"import red.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"import red.task.DeadlineTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"import red.task.EventTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"import red.task.ToDoTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"import red.ui.UI;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":" * This class stores the information contained in the user\u0027s TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    private final UI ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    protected static File f \u003d new File(\"data\\\\tasklist.txt\");","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"     * The constructor for Storage that takes in the TaskList and the UI.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"     * @param list The current list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"     * @param ui The current ui","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    public Storage(TaskList list, UI ui) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        this.tasks \u003d list;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"     * Saves the current TaskList to the file.","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"     * @throws IOException Throws Exception when there is an issue with the file.","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    public static void writeToStorage(String textToAdd) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        FileWriter fw \u003d new FileWriter(\"data\\\\tasklist.txt\");","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        fw.write(textToAdd + System.lineSeparator());","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        fw.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"     * Saves the current TaskList to the file.","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"    public void saveToStorage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        String TaskListCopy \u003d tasks.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"            this.writeToStorage(TaskListCopy);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"     * Loads the file that will store the information of the TaskList and creates a file if it does not exist","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"     * while copying any information contained from a previous session into the current session.","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"    public void createStorage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"        if(!f.exists()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"            try {","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"            Scanner s \u003d null;","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"                s \u003d new Scanner(f);","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"                s.useDelimiter(System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"                String str \u003d s.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"                System.out.println(str.charAt(4));","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"                char todo \u003d \u0027T\u0027;","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"                char event \u003d \u0027E\u0027;","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"                char deadline \u003d \u0027D\u0027;","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"                if(Character.compare(str.charAt(4),todo) \u003d\u003d 0) {","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"                    String[] arrOfStr\u003d str.split(\"] \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"                    ToDoTask currentTask \u003d new ToDoTask(arrOfStr[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"                    Command CurrentCommand \u003d new AddCommand(currentTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"zhengsterz"},"content":"                    CurrentCommand.execute(this.tasks,this.ui,this);","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"zhengsterz"},"content":"                    ","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"                } else if(Character.compare(str.charAt(4),event) \u003d\u003d 0) {","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"zhengsterz"},"content":"                    String[] arrOfStr\u003d str.split(\"] \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"zhengsterz"},"content":"                    String[] arrOfStrStr\u003d arrOfStr[1].split(\"\\\\(From: \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"                    String[] arrOfStrStrStr\u003d arrOfStrStr[1].split(\"To: \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"                    String[] arrOfStrStrStrStr\u003d arrOfStrStrStr[1].split(\"\\\\)\", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"zhengsterz"},"content":"                    EventTask currentTask \u003d new EventTask(arrOfStrStr[0],arrOfStrStrStr[0],arrOfStrStrStrStr[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"zhengsterz"},"content":"                    Command CurrentCommand \u003d new AddCommand(currentTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"zhengsterz"},"content":"                    CurrentCommand.execute(this.tasks,this.ui,this);","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"zhengsterz"},"content":"                } else if(Character.compare(str.charAt(4),deadline) \u003d\u003d 0) {","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"zhengsterz"},"content":"                    DeadlineTask currentTask \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"zhengsterz"},"content":"                    String[] arrOfStr\u003d str.split(\"] \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"zhengsterz"},"content":"                    String[] arrOfStrStr\u003d arrOfStr[1].split(\"\\\\(Before: \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"zhengsterz"},"content":"                    String[] arrOfStrStrStr\u003d arrOfStrStr[1].split(\"\\\\)\", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"zhengsterz"},"content":"                    if(arrOfStrStrStr[0].length() \u003c 12) {","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"zhengsterz"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"zhengsterz"},"content":"                        LocalDate date \u003d LocalDate.parse(arrOfStrStrStr[0],formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"zhengsterz"},"content":"                        currentTask \u003d new DeadlineTask(arrOfStrStr[0], date);","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"zhengsterz"},"content":"                    } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"zhengsterz"},"content":"                        LocalDateTime dateTime \u003d LocalDateTime.parse(arrOfStrStrStr[0]);","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"zhengsterz"},"content":"                        currentTask \u003d new DeadlineTask(arrOfStrStr[0], dateTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"zhengsterz"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"zhengsterz"},"content":"                    Command CurrentCommand \u003d new AddCommand(currentTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"zhengsterz"},"content":"                    CurrentCommand.execute(this.tasks,this.ui,this);","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":129,"author":{"gitId":"zhengsterz"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":130,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":131,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":133,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"zhengsterz":136}},{"path":"src/main/java/red/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":" * This class is for tasks that have a deadline.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"    protected LocalDateTime dateTime \u003d null;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"    protected LocalDate date \u003d null;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     * Constructor for a DeadlineTask that takes in a String description as well as String date","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"     * and String time.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"     * @param description The description of the EventTask.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     * @param date The date of the event.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * @param time The time of the event.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTask(String description, String date, String time) {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        String[] dateStr \u003d date.split(\"/\", 3);","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"        String[] altDateStr \u003d date.split(\"-\", 3);","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        if(altDateStr.length !\u003d 3 \u0026\u0026 dateStr.length !\u003d 3) {","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"            throw new RuntimeException(\"Specification of the DeadlineTask date is incorrect\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        } else if (dateStr.length \u003d\u003d 3) {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"            this.dateTime \u003d LocalDateTime.of( Integer.valueOf(dateStr[2]),","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"                    Integer.valueOf(dateStr[1]), Integer.valueOf(dateStr[0]), Integer.valueOf(time.substring(0,2)),","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"                    Integer.valueOf(time.substring(2)));","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        } else if(altDateStr.length \u003d\u003d 3) {","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"            LocalDate temp \u003d LocalDate.parse(date);","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"            LocalTime temptime \u003d LocalTime.of(Integer.valueOf(time.substring(0,2)), Integer.valueOf(time.substring(2)));","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"            this.dateTime \u003d LocalDateTime.of(temp,temptime);","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"     * Constructor for a DeadlineTask that takes in a String description as well as","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"     * date and time in LocalDateTime format","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"     * @param description The description of the EventTask.","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"     * @param dateTime The date and time of the event.","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTask(String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"     * Constructor for a DeadlineTask that takes in a String description as well as","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"     * date in LocalDate format","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"     * @param description The description of the EventTask.","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"     * @param date The date of the event.","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTask(String description, LocalDate date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"     * Constructor for a DeadlineTask that takes in a String description as well as String date.","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"     * @param description The description of the EventTask.","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"     * @param date The date of the event.","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTask(String description, String date) {","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"        String[] dateStr \u003d date.split(\"/\", 3);","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"        String[] altDateStr \u003d date.split(\"-\", 3);","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"        if(altDateStr.length !\u003d 3 \u0026\u0026 dateStr.length !\u003d 3) {","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"            System.out.println(date);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"            throw new RuntimeException(\"Specification of the DeadlineTask date is incorrect\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"        } else if (dateStr.length \u003d\u003d 3) {","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"            this.date \u003d LocalDate.of( Integer.valueOf(dateStr[2]),","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"                    Integer.valueOf(dateStr[1]), Integer.valueOf(dateStr[0]));","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"        } else if(altDateStr.length \u003d\u003d 3) {","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"            System.out.println(date);","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"        if(dateTime \u003d\u003d null) {","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"            return \"[D]\" + super.toString() + \" (Before: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"        return \"[D]\" + super.toString() + \" (Before: \" + dateTime  + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhengsterz":98}},{"path":"src/main/java/red/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":" * This class is for tasks that are considered an event with a timeframe.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"    protected String start;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"    protected String end;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"     * Constructor for a EventTask that takes in a description as well as starting and ending time.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"     * @param description The description of the EventTask.","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"     * @param by The starting time of the event.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     * @param byy The ending time of the event.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    public EventTask(String description, String start, String end) {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"        this.start \u003d end;","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        return \"[E]\" + super.toString() + \" (From: \" + start + \" To: \" + end + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhengsterz":28}},{"path":"src/main/java/red/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":" * This class is the parent class of tasks that make up the tasklist.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"     * The constructor of the Task that takes in description of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"     * Supplies description of the current task when requested.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * @return String description of the task","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        return this.description;","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"     * Supplies description of the completeness of current task when requested.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"     * @return String description of the completeness of current task","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"     * Changes status of current task as done by assigning isDone as true.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    public String mark() {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"        return \"This task has been marked as completed:\\n\" + this + \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"     * Changes status of current task as not done by assigning isDone as false.","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    public String unmark() {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"        return \"This task has been marked as uncompleted:\\n\" + this + \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"        String statusicon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        str \u003d String.format(\"[\" + statusicon + \"] \" + this.description);","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"        return str;","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"zhengsterz":61}},{"path":"src/main/java/red/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":" * This class is the class that keeps track of tasks added by the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"public class TaskList {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    /** An array to store the items in the queue. */","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    private ArrayList\u003cTask\u003e items;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     * Constructor for a queue.","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"     * @param size The maximum num of elements we can put in the queue.","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    public TaskList(int size) {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"        this.items \u003d new ArrayList\u003cTask\u003e(size);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"     * Add the Task e into the queue.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     * @param e The item to put in the queue.","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"     * @return false if the queue is full; true if e is added successfully.","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    public boolean addTask(Task e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        items.add(e);","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"        System.out.println(\"New Task Added: \" + e.getDescription());","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        System.out.println(\"There are now \" + this.items.size() + \" task(s) awaiting completion\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        return true;","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"     * Removes the Task with the specified index from the queue.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"     * @param index The index of the task to be removed from the queue.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"     * @return the specified task that was removed from the queue.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        return this.items.remove(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"     * @return integer size of the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"        return this.items.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"     * Returns the string representation of the queue.","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"     * @return A string consisting of the string representation of","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"     * every object in the queue.","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"        String str \u003d \"This is your current task list:\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"        while (count \u003c this.items.size()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"            int counter \u003d count + 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"            str +\u003d counter + \". \" + this.items.get(count) + \" \\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"            count++;","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"        return str;","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"     * Returns the string representation of the task(s) that contain the specified keyword.","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"     * @return A string consisting of the string representation of","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"     * specific object in the queue with the specified keyword.","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"    public String find(String descriptor) {","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"        String str \u003d \" Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"        while (count \u003c this.items.size()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"            int counter \u003d count + 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"            if(this.items.get(count).getDescription().contains(descriptor)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"                str +\u003d counter + \". \" + this.items.get(count) + \" \\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"            count++;","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"        return str;","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"     * Returns the Task in the TaskList that corresponds to the index provided.","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"     * @param index The index of the Task in question.","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"zhengsterz"},"content":"     * @return task specified by index.","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"    public Task indexOf(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"zhengsterz"},"content":"        return items.get(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"zhengsterz":105}},{"path":"src/main/java/red/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":" * This class is for tasks that do not have a timeframe associated with it.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"public class ToDoTask extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"     * The constructor of the ToDoTask that takes in description of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhengsterz":19}},{"path":"src/main/java/red/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"    private void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"        db.flip();","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        return db;","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"zhengsterz":65}},{"path":"src/main/java/red/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"public class Launcher {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"zhengsterz":13}},{"path":"src/main/java/red/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"import red.Red;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    private Red duke \u003d new Red();","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setRed(duke);","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"            stage.show();","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"zhengsterz":36}},{"path":"src/main/java/red/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import red.Red;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    private Red red;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"    public void setRed(Red d) {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        red \u003d d;","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        String response \u003d red.getResponse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"zhengsterz":54}},{"path":"src/main/java/red/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":" * This class functions facilitates interaction between the user and the program.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"public class UI {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"    private static Scanner scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    private StringBuilder redReply \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"     * Sends a greeting to the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public void sayHello() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"        System.out.println(\"Red is ready to assist you\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     * Processes the user input and returns it as a String","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     * @return user input in a String format.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"     * Prints out a line to separate statements for readability","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        System.out.println(\"********************************************\");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"     * Prints out the error message.","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"     * @param err The error message.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    public void showError(String err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"        System.out.println(\"Error Message String \u003d \" + err);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    public void clear() {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        this.redReply \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    public String getCurrentReply() {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        return String.valueOf(this.redReply);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"    public void addCurrentReply(String reply) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        this.redReply.append(reply);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhengsterz":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"zhengsterz":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"red.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"zhengsterz":19}},{"path":"src/test/java/red/RedTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package red;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import red.task.DeadlineTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import red.task.ToDoTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"public class RedTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    public void deadlineTaskTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask currentTask \u003d new DeadlineTask(\"eat\",\"8/12/2022\");","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(\"[D][ ] eat (Before: Dec 08 2022)\", currentTask.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    public void toDoTaskTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        ToDoTask currentTask \u003d new ToDoTask(\"eat\");","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(\"[T][ ] eat\", currentTask.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"zhengsterz":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"todo eat","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"todo sleep","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"deadline eat /8pm","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"deadline sleep /8pm","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"deadline drink /8pm","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"event eat /10am /9pm","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"unmark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"event sleep /10am /9pm","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"mark 6","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"event drink /10am /9pm","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"unmark 6","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhengsterz":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"java -classpath ..\\bin Red \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhengsterz":3,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"java -classpath ../bin Red \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhengsterz":1,"-":37}}]
