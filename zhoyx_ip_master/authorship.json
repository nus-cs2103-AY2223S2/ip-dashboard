[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhoyx":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zhoyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"zhoyx"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"zhoyx"},"content":"checkstyle {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"zhoyx"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"zhoyx":21,"-":40}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"zhoyx"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 duke.command could be found in your PATH.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":init","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"zhoyx"},"content":"@rem Get duke.command-line arguments, handling Windows variants","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":":win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"zhoyx"},"content":"@rem Slurp the duke.command line arguments.","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"set _SKIP\u003d2","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":":win9xME_args_slurp","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"zhoyx"},"content":"@rem Setup the duke.command line","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhoyx":4,"-":99}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":" * Instance of Duke class.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"    private static Storage storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"    private static Ui ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"     * Creates an instance of the Duke chatbot.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"     * @param filePath File path to store task data for Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"     * Starts an instance of the Duke chatbot.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"    public void run() {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"        ui.greet();","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zhoyx"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"zhoyx"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zhoyx"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"zhoyx"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"zhoyx"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"zhoyx"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"zhoyx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"zhoyx"},"content":"                ui.reply(e.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"zhoyx"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"zhoyx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"zhoyx"},"content":"        new Duke(\"/duke.txt\").run();","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zhoyx":41,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":" * Exceptions related to Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"        super(error);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"        return \"DukeException: \" + super.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zhoyx":15}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"import static duke.utils.FormatHelper.INPUTFORMAT;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":" * Parser class that processes user inputs.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"public class Parser {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"     * Parses user command input and returns an appropriate Command object.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"     * @param userInput text command that the user inputted.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"     * @return Command object representing the type of command.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"     * @throws DukeException If user inputted command is invalid.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"        if (userInput.equals(\"\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"            return new EmptyCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"        } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"        } else if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"        } else if (userInput.matches(\"mark \\\\d+\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"            int index \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zhoyx"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"zhoyx"},"content":"        } else if (userInput.matches(\"unmark \\\\d+\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"zhoyx"},"content":"            int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"zhoyx"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"zhoyx"},"content":"        } else if (userInput.matches(\"^todo .*\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"zhoyx"},"content":"            String description \u003d userInput.substring(5);","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"zhoyx"},"content":"            return new AddTodoCommand(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"zhoyx"},"content":"        } else if (userInput.matches(\"^deadline .*\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"zhoyx"},"content":"            int byPos \u003d userInput.indexOf(\" /by \");","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"zhoyx"},"content":"            if (byPos \u003d\u003d -1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"zhoyx"},"content":"                throw new DukeException(\"Deadline not specified with /by\");","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"zhoyx"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"zhoyx"},"content":"            String description \u003d userInput.substring(9, byPos);","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"zhoyx"},"content":"            String by \u003d userInput.substring(byPos + 5);","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"zhoyx"},"content":"            LocalDateTime convertedBy;","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"zhoyx"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"zhoyx"},"content":"                convertedBy \u003d LocalDateTime.parse(by, INPUTFORMAT);","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"zhoyx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"zhoyx"},"content":"                throw new DukeException(\"Invalid Date and Time provided, use the format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"zhoyx"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"zhoyx"},"content":"            return new AddDeadlineCommand(description, convertedBy);","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"zhoyx"},"content":"        } else if (userInput.matches(\"^event .*\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"zhoyx"},"content":"            int fromPos \u003d userInput.indexOf(\" /from \");","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"zhoyx"},"content":"            int toPos \u003d userInput.indexOf(\" /to \");","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"zhoyx"},"content":"            if (fromPos \u003d\u003d -1 || toPos \u003d\u003d -1 || toPos \u003e userInput.length() + 4) {","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"zhoyx"},"content":"                throw new DukeException(\"Please include both /from and /to\");","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"zhoyx"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"zhoyx"},"content":"            if (fromPos \u003e toPos) {","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"zhoyx"},"content":"                throw new DukeException(\"Please add the from date first followed by to date\");","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"zhoyx"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"zhoyx"},"content":"            if (fromPos \u003d\u003d 5) {","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"zhoyx"},"content":"                throw new DukeException(\"Please include a description of the task\");","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"zhoyx"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"zhoyx"},"content":"            String description \u003d userInput.substring(6, fromPos);","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"zhoyx"},"content":"            String from \u003d userInput.substring(fromPos + 7, toPos);","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"zhoyx"},"content":"            String to \u003d userInput.substring(toPos + 5);","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"zhoyx"},"content":"            LocalDateTime convertedFrom;","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"zhoyx"},"content":"            LocalDateTime convertedTo;","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"zhoyx"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"zhoyx"},"content":"                convertedFrom \u003d LocalDateTime.parse(from, INPUTFORMAT);","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"zhoyx"},"content":"                convertedTo \u003d LocalDateTime.parse(to, INPUTFORMAT);","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"zhoyx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"zhoyx"},"content":"                throw new DukeException(\"Invalid Date and Time provided, use the format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"zhoyx"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"zhoyx"},"content":"            return new AddEventCommand(description, convertedFrom, convertedTo);","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"zhoyx"},"content":"        } else if (userInput.matches(\"^delete \\\\d+\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"zhoyx"},"content":"            int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"zhoyx"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"zhoyx"},"content":"        } else if (userInput.matches(\"^find .*\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"zhoyx"},"content":"            String keyword \u003d userInput.substring(5);","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"zhoyx"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"zhoyx"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"zhoyx"},"content":"            return new UnknownCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":84}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":" * Manages storage of tasks between sessions.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"    private File storageFile;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"     * Constructor for a Storage object.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"     * @param file File path for storage.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"    public Storage(String file) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"zhoyx"},"content":"            String innerPath \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"zhoyx"},"content":"            Path path \u003d Paths.get(innerPath, \"src\", \"main\", \"java\", \"data\");","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"zhoyx"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"zhoyx"},"content":"            storageFile \u003d new File(path.toString() + file);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"zhoyx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"zhoyx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"zhoyx"},"content":"     * Parses Storage file for previously stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"zhoyx"},"content":"     * @return ArrayList containing all previously stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"zhoyx"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhoyx"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhoyx"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhoyx"},"content":"            if (!storageFile.createNewFile()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhoyx"},"content":"                // Parse the file and add the tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhoyx"},"content":"                Scanner s \u003d new Scanner(storageFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zhoyx"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zhoyx"},"content":"                    String line \u003d s.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zhoyx"},"content":"                    switch (line.charAt(0)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhoyx"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhoyx"},"content":"                        tasks.add(Todo.fromSaveFormat(line));","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhoyx"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhoyx"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhoyx"},"content":"                        tasks.add(Deadline.fromSaveFormat(line));","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zhoyx"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zhoyx"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zhoyx"},"content":"                        tasks.add(Event.fromSaveFormat(line));","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zhoyx"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"zhoyx"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zhoyx"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"zhoyx"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"zhoyx"},"content":"            return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"zhoyx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"zhoyx"},"content":"            System.out.println(\"Error creating Storage file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zhoyx"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"zhoyx"},"content":"     * Adds Task to storage file.","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"zhoyx"},"content":"     * @param t Task object to be stored.","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"zhoyx"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"zhoyx"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"zhoyx"},"content":"            FileWriter fw \u003d new FileWriter(storageFile, true);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"zhoyx"},"content":"            if (storageFile.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"zhoyx"},"content":"                fw.write(t.toSaveFormat());","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"zhoyx"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"zhoyx"},"content":"                fw.write(System.lineSeparator() + t.toSaveFormat());","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"zhoyx"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"zhoyx"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"zhoyx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"zhoyx"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"zhoyx"},"content":"     * Updates storage file with the current state of all tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"zhoyx"},"content":"     * @param tasks TaskList containing all current tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"zhoyx"},"content":"    public void saveState(TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"zhoyx"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"zhoyx"},"content":"            int numberOfTasks \u003d tasks.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"zhoyx"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"zhoyx"},"content":"            for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"zhoyx"},"content":"                Task t \u003d tasks.getTask(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"zhoyx"},"content":"                if (i !\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"zhoyx"},"content":"                    sb.append(System.lineSeparator());","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"zhoyx"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"zhoyx"},"content":"                sb.append(t.toSaveFormat());","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"zhoyx"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"zhoyx"},"content":"            FileWriter fw \u003d new FileWriter(storageFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"zhoyx"},"content":"            fw.write(sb.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"zhoyx"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"zhoyx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"zhoyx"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zhoyx":111}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":" * A list of tasks that a user can add, modify, view and delete.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"public class TaskList {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"    TaskList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"    public TaskList(ArrayList\u003cTask\u003e existingTasks) {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"        this.tasks \u003d existingTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"     * Formats to string all the Tasks stored in TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"     * @return String representation of all Tasks in TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"zhoyx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"zhoyx"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"zhoyx"},"content":"            return \"List empty, add tasks!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"zhoyx"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"zhoyx"},"content":"            StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"zhoyx"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"zhoyx"},"content":"                Task curTask \u003d tasks.get(i);","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"zhoyx"},"content":"                response.append((i+ 1)).append(\".\").append(curTask.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"zhoyx"},"content":"                if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"zhoyx"},"content":"                    response.append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"zhoyx"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"zhoyx"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"zhoyx"},"content":"            return response.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"zhoyx"},"content":"    public int size() {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"zhoyx"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"zhoyx"},"content":"    public String getTaskString(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"zhoyx"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"zhoyx"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"zhoyx"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"zhoyx"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"zhoyx"},"content":"        this.tasks.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"zhoyx"},"content":"     * Deletes a task from the TaskList based on its index.","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"zhoyx"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"zhoyx"},"content":"     * @return Output string containing details of deleted Task.","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"zhoyx"},"content":"     * @throws DukeException If index out of bounds.","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"zhoyx"},"content":"    public String deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"zhoyx"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"zhoyx"},"content":"            throw new DukeException(\"Error: Please input a valid task index!\");","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"zhoyx"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"zhoyx"},"content":"        response.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"zhoyx"},"content":"        response.append(\"  \").append(this.getTaskString(index)).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"zhoyx"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"zhoyx"},"content":"        response.append(\"Now you have \").append(this.size()).append(\" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"zhoyx"},"content":"        return response.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"zhoyx"},"content":"     * Marks a Task as completed.","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"zhoyx"},"content":"     * @param index Index of task to mark as completed.","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"zhoyx"},"content":"     * @return String containing details Task marked.","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"zhoyx"},"content":"     * @throws DukeException If index out of bounds.","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"zhoyx"},"content":"    public String mark(int index) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"zhoyx"},"content":"        if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"zhoyx"},"content":"            throw new DukeException(\"Task index out of bounds, please input a valid index\");","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"zhoyx"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"zhoyx"},"content":"            Task curTask \u003d tasks.get(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"zhoyx"},"content":"            curTask.setCompleted(true);","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"zhoyx"},"content":"            String output;","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"zhoyx"},"content":"            output \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"zhoyx"},"content":"            return output + \"  \" + curTask.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"zhoyx"},"content":"     * Marks a Task as not completed.","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"zhoyx"},"content":"     * @param index Index of task to mark as not completed.","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"zhoyx"},"content":"     * @return String containing details Task unmarked.","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"zhoyx"},"content":"     * @throws DukeException If index out of bounds.","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"zhoyx"},"content":"    public String unmark(int index) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"zhoyx"},"content":"        if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"zhoyx"},"content":"            throw new DukeException(\"Task index out of bounds, please input a valid index\");","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"zhoyx"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"zhoyx"},"content":"            Task curTask \u003d tasks.get(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"zhoyx"},"content":"            curTask.setCompleted(false);","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"zhoyx"},"content":"            String output;","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"zhoyx"},"content":"            output \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"zhoyx"},"content":"            return output + \"  \" + curTask.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"zhoyx"},"content":"     * Adds a Todo Task to the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"zhoyx"},"content":"     * @param description Description of Todo Task.","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"zhoyx"},"content":"     * @return String with details of Todo Task added.","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"zhoyx"},"content":"    public String addTodo(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"zhoyx"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"zhoyx"},"content":"        response.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"zhoyx"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"zhoyx"},"content":"        response.append(getAfterAddStatus());","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"zhoyx"},"content":"        return response.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"zhoyx"},"content":"     * Adds a Deadline Task to the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"zhoyx"},"content":"     * @param description Description of Deadline Task.","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"zhoyx"},"content":"     * @param by Deadline date and time.","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"zhoyx"},"content":"     * @return String with details of Deadline Task added.","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"zhoyx"},"content":"    public String addDeadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"zhoyx"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"zhoyx"},"content":"        response.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"zhoyx"},"content":"        tasks.add(new Deadline(description, by));","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"zhoyx"},"content":"        response.append(getAfterAddStatus());","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"zhoyx"},"content":"        return response.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":144,"author":{"gitId":"zhoyx"},"content":"     * Adds an Event Task to the list","lastModifiedDate":"2023-02-03"},{"lineNumber":145,"author":{"gitId":"zhoyx"},"content":"     * @param description Description of Event Task.","lastModifiedDate":"2023-02-03"},{"lineNumber":146,"author":{"gitId":"zhoyx"},"content":"     * @param from Start date and time of Event.","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"zhoyx"},"content":"     * @param to End date and time of Event.","lastModifiedDate":"2023-02-03"},{"lineNumber":148,"author":{"gitId":"zhoyx"},"content":"     * @return String with details of Event added.","lastModifiedDate":"2023-02-03"},{"lineNumber":149,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":150,"author":{"gitId":"zhoyx"},"content":"    public String addEvent(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-03"},{"lineNumber":151,"author":{"gitId":"zhoyx"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"zhoyx"},"content":"        response.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"zhoyx"},"content":"        tasks.add(new Event(description, from, to));","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"zhoyx"},"content":"        response.append(getAfterAddStatus());","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"zhoyx"},"content":"        return response.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":156,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":159,"author":{"gitId":"zhoyx"},"content":"     * Generates string with number of Tasks in the list and added Task details.","lastModifiedDate":"2023-02-03"},{"lineNumber":160,"author":{"gitId":"zhoyx"},"content":"     * @return String with number of Task and details of added Task.","lastModifiedDate":"2023-02-03"},{"lineNumber":161,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":162,"author":{"gitId":"zhoyx"},"content":"    private String getAfterAddStatus() {","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"zhoyx"},"content":"        int count \u003d tasks.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"zhoyx"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":165,"author":{"gitId":"zhoyx"},"content":"        response.append(\"  \").append(getTaskString(count - 1)).append(\"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":166,"author":{"gitId":"zhoyx"},"content":"        response.append(\"Now you have \").append(count).append(\" tasks in the list.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":167,"author":{"gitId":"zhoyx"},"content":"        return response.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":168,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":169,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":170,"author":{"gitId":"zhoyx"},"content":"    public String find(String keyword) {","lastModifiedDate":"2023-02-03"},{"lineNumber":171,"author":{"gitId":"zhoyx"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":172,"author":{"gitId":"zhoyx"},"content":"        response.append(\"Here are the matching tasks in your list\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":173,"author":{"gitId":"zhoyx"},"content":"        int taskCount \u003d 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":174,"author":{"gitId":"zhoyx"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":175,"author":{"gitId":"zhoyx"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-02-03"},{"lineNumber":176,"author":{"gitId":"zhoyx"},"content":"            if (currentTask.getDescription().contains(keyword)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":177,"author":{"gitId":"zhoyx"},"content":"                response.append(String.format(\"%d. %s\\n\", taskCount, currentTask.toString()));","lastModifiedDate":"2023-02-03"},{"lineNumber":178,"author":{"gitId":"zhoyx"},"content":"                taskCount++;","lastModifiedDate":"2023-02-03"},{"lineNumber":179,"author":{"gitId":"zhoyx"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":180,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":181,"author":{"gitId":"zhoyx"},"content":"        if (taskCount \u003d\u003d 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":182,"author":{"gitId":"zhoyx"},"content":"            response.append(\"No task matching description\");","lastModifiedDate":"2023-02-03"},{"lineNumber":183,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":184,"author":{"gitId":"zhoyx"},"content":"        return response.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":185,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":186,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":186}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"import duke.utils.FormatHelper;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":" * Class for methods relating to user interface input and output.","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"    private static final String linebreak \u003d \"    ___________________________________________________________________________________\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"    private Scanner input;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"    private PrintStream output;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"    public Ui() {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"        this.input \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"        this.output \u003d new PrintStream(System.out);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"     * Outputs to console text with padded line break before and after.","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"     * @param s String to output.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"    public void reply(String s) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"zhoyx"},"content":"        if (s.equals(\"\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"zhoyx"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"zhoyx"},"content":"        output.println(linebreak);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"zhoyx"},"content":"        output.println(FormatHelper.indent(4, s));","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"zhoyx"},"content":"        output.println(linebreak);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"zhoyx"},"content":"    public void greet() {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"zhoyx"},"content":"        reply(\"Hello! I\u0027m Duke\\n What can I do for you?\");","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"zhoyx"},"content":"    public void signOff() {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"zhoyx"},"content":"        reply(\"Bye. Hope to see you again!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"zhoyx"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"zhoyx"},"content":"        return input.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":48}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":" * Command that adds a Deadline Task to the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"    private String description;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"    public AddDeadlineCommand(String description, LocalDateTime by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"     * Execute adding Deadline Task to list and storing it in Storage.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"     * @param taskList Tasklist containing current tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"     * @param ui Ui Component for input and output.","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"     * @param storage Storage component for persistent storage of Tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"        ui.reply(taskList.addDeadline(description, by));","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"zhoyx"},"content":"        storage.saveState(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":31}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":" * Command that adds an Event Task to the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"    private String description;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"    public AddEventCommand(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"     * Execute adding Event Task to list and storing it in Storage.","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"     * @param taskList Tasklist containing current tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"     * @param ui Ui Component for input and output.","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"     * @param storage Storage component for persistent storage of Tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"zhoyx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"zhoyx"},"content":"        ui.reply(taskList.addEvent(description, from, to));","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"zhoyx"},"content":"        storage.saveState(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":33}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":" * Command that adds a Todo Task to the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"    private String description;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"     * Execute adding Todo Task to list and storing it in Storage.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"     * @param taskList Tasklist containing current tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"     * @param ui Ui Component for input and output.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"     * @param storage Storage component for persistent storage of Tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"        ui.reply(taskList.addTodo(description));","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"        storage.saveState(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":28}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":" * Abstract class for Commands, allowing other commands to extend from it","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":" * and add different execution steps.","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"        return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":17}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"    private int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"            ui.reply(taskList.deleteTask(index));","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"            storage.saveState(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"            ui.reply(e.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":24}},{"path":"src/main/java/duke/command/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"public class EmptyCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"        ui.reply(\"Please input a command\");","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":12}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"        return true;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"        ui.signOff();","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":18}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.command;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":" * Command to Look for tasks with a keyword.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"    private String keyword;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"        ui.reply(taskList.find(keyword));","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"zhoyx":21}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"        ui.reply(taskList.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":12}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"    private int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"            ui.reply(taskList.mark(index));","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"            storage.saveState(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"            ui.reply(e.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":24}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"        ui.reply(\"Unknown command, please try again\");","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zhoyx":12}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"    private int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"            ui.reply(taskList.unmark(index));","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"            storage.saveState(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"            ui.reply(e.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"zhoyx":24}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import static duke.utils.FormatHelper.INPUTFORMAT;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import static duke.utils.FormatHelper.PRINTFORMAT;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":" * Task with a deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"     * @param description Description of Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"     * @param by Date and time to complete the Task by.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"     * Converts Deadline data to save format to be stored.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"     * @return Save string format.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zhoyx"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zhoyx"},"content":"        return \"D||\" + super.toSaveFormat() + \"||\" + by.format(INPUTFORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"zhoyx"},"content":"     * Convert Deadline data to print format.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"zhoyx"},"content":"     * @return Print string format.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"zhoyx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"zhoyx"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(PRINTFORMAT) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"zhoyx"},"content":"     * Takes string savedData, parse the values and create a Deadline object.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"zhoyx"},"content":"     * @param savedData String input to be decoded.","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"zhoyx"},"content":"     * @return Deadline object created from data in savedData.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"zhoyx"},"content":"    public static Deadline fromSaveFormat(String savedData) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zhoyx"},"content":"        String[] inputs \u003d savedData.split(\"\\\\|\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zhoyx"},"content":"        Deadline generatedDeadline \u003d new Deadline(inputs[2], LocalDateTime.parse(inputs[3], INPUTFORMAT));","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"zhoyx"},"content":"        if (inputs[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zhoyx"},"content":"            generatedDeadline.setCompleted(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhoyx"},"content":"        return generatedDeadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhoyx":55}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import static duke.utils.FormatHelper.INPUTFORMAT;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import static duke.utils.FormatHelper.PRINTFORMAT;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":" * Task with to date and a from date.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"     * Constructor to create an Event","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"     * @param from Start date and time of the Event.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"     * @param to End date and time of the Event.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"     * Converts Event data to Save string format.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zhoyx"},"content":"     * @return Save string format of Event.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zhoyx"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zhoyx"},"content":"        return \"E||\" + super.toSaveFormat() + \"||\" + this.from.format(INPUTFORMAT) + \"||\" + this.to.format(INPUTFORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"zhoyx"},"content":"     * Converts Event data to print format.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"zhoyx"},"content":"     * @return Print string format.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"zhoyx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"zhoyx"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhoyx"},"content":"                + \" (from: \" + this.from.format(PRINTFORMAT) + \", to: \" + this.to.format(PRINTFORMAT) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"zhoyx"},"content":"     * Takes string savedData, parse the values and create an Event object.","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"zhoyx"},"content":"     * @param savedData String input to be decoded.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"zhoyx"},"content":"     * @return Event object created from data in savedData.","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"zhoyx"},"content":"    public static Event fromSaveFormat(String savedData) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zhoyx"},"content":"        String[] inputs \u003d savedData.split(\"\\\\|\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zhoyx"},"content":"        LocalDateTime parseFrom \u003d LocalDateTime.parse(inputs[3], INPUTFORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"zhoyx"},"content":"        LocalDateTime parseTo \u003d LocalDateTime.parse(inputs[4], INPUTFORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"zhoyx"},"content":"        Event generatedEvent \u003d new Event(inputs[2], parseFrom, parseTo);","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"zhoyx"},"content":"        if (inputs[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zhoyx"},"content":"            generatedEvent.setCompleted(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zhoyx"},"content":"        return generatedEvent;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhoyx":61}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":" * A Task contains a description and a completed status.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":" * It is an abstract class with basic functionality and is","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":" * extended by other classes to implement additional features.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"    private String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"     * @param description Description of Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"     * Returns the status of Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"     * @return \"X\" if task is completed and \" \" otherwise.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"        return this.isCompleted ? \"X\" : \" \";","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"zhoyx"},"content":"     * Sets completion status of Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"zhoyx"},"content":"     * @param completed Task status.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"zhoyx"},"content":"    public void setCompleted(boolean completed) {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"zhoyx"},"content":"        this.isCompleted \u003d completed;","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"zhoyx"},"content":"     * Generates String representing data stored in Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"zhoyx"},"content":"     * @return String containing data in Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"zhoyx"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhoyx"},"content":"        String status \u003d isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"zhoyx"},"content":"        return status + \"||\" + description;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhoyx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"zhoyx"},"content":"        return this.description;","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"zhoyx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"zhoyx"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"zhoyx":56}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":" * Todo is a Task with no added variables.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"     * Constructor of Todo class.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"     * @param description Description of Todo task.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"     * Generates Save format to write into data.txt file.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"     * @return String format of Todo task.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"        return \"T||\" + super.toSaveFormat();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"     * String representation of Todo task.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"     * @return String representation of Todo task.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zhoyx"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"zhoyx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"zhoyx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"zhoyx"},"content":"     * Returns a Todo object generated from parsing savedData string.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"zhoyx"},"content":"     * @param savedData String stored to represent a Todo task.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"zhoyx"},"content":"     * @return Todo task.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"zhoyx"},"content":"    public static Todo fromSaveFormat(String savedData) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zhoyx"},"content":"        String[] inputs \u003d savedData.split(\"\\\\|\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zhoyx"},"content":"        Todo generatedTodo \u003d new Todo(inputs[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zhoyx"},"content":"        if (inputs[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zhoyx"},"content":"            generatedTodo.setCompleted(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zhoyx"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zhoyx"},"content":"        return generatedTodo;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"zhoyx":47}},{"path":"src/main/java/duke/utils/FormatHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.utils;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":" * A utility class containing formatting methods","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"public final class FormatHelper {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"    public static final DateTimeFormatter PRINTFORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"    public static final DateTimeFormatter INPUTFORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"     * Adds indentations of n spaces to each new line in the input string.","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"     * @param n Number of spaces to add to each new line.","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"     * @param s The String to add indentation to.","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"     * @return A String with n spaces of indentation added to each new line.","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"    public static String indent(int n, String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"        Stream\u003cString\u003e stream \u003d s.lines();","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"        final String spaces \u003d \" \".repeat(n);","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"        stream \u003d stream.map(sentence -\u003e spaces + sentence);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"        return stream.collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zhoyx":28}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"import static duke.utils.FormatHelper.INPUTFORMAT;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"import static duke.utils.FormatHelper.PRINTFORMAT;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"class DeadlineTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"    public void testT0SaveFormat() {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"22/02/2023 13:00\", INPUTFORMAT);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"        Deadline deadline \u003d new Deadline(\"Clean the room\", by);","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"        assertEquals(\"D||0||Clean the room||22/02/2023 13:00\", deadline.toSaveFormat());","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"    public void testFromSaveFormat() {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"        Deadline deadline \u003d Deadline.fromSaveFormat(\"D||0||Clean the room||22/02/2023 13:00\");","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"        assertEquals(\"[D][ ] Clean the room (by: 22 Feb 2023 13:00)\", deadline.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zhoyx":25}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"    public void testT0SaveFormat() {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"        Todo todo \u003d new Todo(\"Clean the room\");","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"        assertEquals(\"T||0||Clean the room\", todo.toSaveFormat());","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"//    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"//    public void testFromSaveFormat() {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"//        Todo todo \u003d Todo.fromSaveFormat(\"T||0||Clean the room\");","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"//        assertEquals(\"[T][ ] Clean the room\", todo.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"//    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zhoyx":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhoyx"},"content":"wrong duke.command","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"zhoyx"},"content":"todo Borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zhoyx"},"content":"deadline return book /by 23/01/2023 03:22","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zhoyx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zhoyx"},"content":"event project meeting /from 30/12/2023 12:33 /to 12/12/2024 23:59","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zhoyx"},"content":"event /from /to","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zhoyx"},"content":"event Tennis /from Friday","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zhoyx"},"content":"event /from 28 Jan 2023 /to 30 Jan 2023","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zhoyx"},"content":"event Tennis /to Friday /from Monday","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zhoyx"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zhoyx"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zhoyx"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zhoyx"},"content":"mark 5","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"zhoyx"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zhoyx"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"zhoyx"},"content":"delete 10","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"zhoyx"},"content":"delete -2","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"zhoyx"},"content":"delete 1","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"zhoyx"},"content":"delete 1","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zhoyx":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"zhoyx"},"content":"REM run the program, feed duke.command from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"zhoyx"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhoyx":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"zhoyx"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zhoyx"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhoyx":2,"-":36}}]
