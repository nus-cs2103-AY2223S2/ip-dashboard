[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zm-l":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"checkstyle {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.7.1\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zm-l":6,"-":41}},{"path":"data/duke.tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"T | 0 | readbook","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"D | 0 | return book | 2016-06-06","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"T | 0 | boki","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"T | 0 | book court","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"zm-l":4}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"T | 0 | jog","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"import duke.commands.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"import duke.storage.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"public class Duke {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"            tasks \u003d new TaskList(storage.readTaskList());","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"            } finally {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"        new Duke(\"data/duke.tasks.txt\").run();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zm-l":47,"-":2}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"public class AddDeadlineCommand extends Command{","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"    private String userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"     * Constructor for the AddDeadlineCommand class.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"     * @param userInput Given user input parsed by parser.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"    public AddDeadlineCommand(String userInput) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"     * Adds a Deadline task to the given TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"     * Displays success message if task is added or throw exception if fails.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"     * @param tasks The TaskList to add the new task.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"     * @param ui Ui given by Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"     * @param storage Storage for storing the newly created task.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"        String[] inputs \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"        String[] taskNameAndDeadline \u003d userInput.split(\" \", 2)[1].split(\" /by \");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"        if (taskNameAndDeadline.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"            throw new DukeException(\"☹ OOPS!! The date of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"        String taskName \u003d taskNameAndDeadline[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"        String deadline \u003d taskNameAndDeadline[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"        Deadline userTask \u003d new Deadline(taskName, LocalDate.parse(deadline));","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"        tasks.addTask(userTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"            storage.appendToFile(storage.getFilePath(), \"D | 0 | \" + taskName + \" | \" + deadline + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"            throw new DukeException(\"Error writing to file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"        ui.showToUser(\"Got it. I\u0027ve added this task: \\n    \" + userTask + \"\\nNow you have \" + tasks.getSize() + \" duke.tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":55}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"public class AddEventCommand extends Command{","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"    private String userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"     * Constructor for the AddEventCommand class.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"     * @param userInput Given user input parsed by parser.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"    public AddEventCommand(String userInput) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"     * Adds a Event task to the given TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"     * Displays success message if task is added or throw exception if fails.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"     * @param tasks The TaskList to add the new task.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"     * @param ui Ui given by Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"     * @param storage Storage for storing the newly created task.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"        String[] inputs \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"        String[] taskNameAndDate \u003d userInput.split(\" \", 2)[1].split(\" /from \");","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"        if (taskNameAndDate.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"            throw new DukeException(\"☹ OOPS!!! The from date of an event cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"        String taskName \u003d taskNameAndDate[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"        String[] toAndFrom \u003d taskNameAndDate[1].split(\" /to \");","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"        if (toAndFrom.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"            throw new DukeException(\"☹ OOPS!!! The to date of an event cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"        String from \u003d toAndFrom[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"        String to \u003d toAndFrom[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"        Event userTask \u003d new Event(taskName, LocalDate.parse(from), LocalDate.parse(to));","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"        tasks.addTask(userTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"            storage.appendToFile(storage.getFilePath(), \"E | 0 | \" + taskName + \" | \" + from + \" | \" + to + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"            throw new DukeException(\"Error writing to file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"        ui.showToUser(\"Got it. I\u0027ve added this task: \\n    \" + userTask + \"\\nNow you have \" + tasks.getSize() + \" duke.tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":59}},{"path":"src/main/java/duke/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import duke.storage.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"public class AddToDoCommand extends Command{","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"    private String userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"     * Constructor for the AddToDoCommand class.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"     * @param userInput Given user input parsed by parser.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"    public AddToDoCommand(String userInput) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"     * Adds a ToDo task to the given TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"     * Displays success message if task is added or throw exception if fails.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"     * @param tasks The TaskList to add the new task.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"     * @param ui Ui given by Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"     * @param storage Storage for storing the newly created task.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"        String[] inputs \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"        String taskName \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"        ToDo userTask \u003d new ToDo(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"        tasks.addTask(userTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"            storage.appendToFile(storage.getFilePath(), \"T | 0 | \" + taskName + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"            throw new DukeException(\"Error writing to file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"        ui.showToUser(\"Got it. I\u0027ve added this task: \\n    \" + userTask + \"\\nNow you have \" + tasks.getSize() + \" duke.tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":47}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import duke.storage.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"public class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"     * Indicates the programme is not exiting","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"     * Throws exception for invalid inputs.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"    };","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":23}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"    private int idx;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"    public DeleteCommand(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"     * Deletes task from TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"     * @param tasks The TaskList to add the new task.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"     * @param ui Ui given by Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"     * @param storage Storage for storing the newly created task.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"        ui.showToUser(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"        ui.showToUser(\"    \" + idx + \".\" + tasks.printTask(idx - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"        tasks.deleteTask(idx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"            storage.deleteTaskInFile(storage.getFilePath(), idx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"            throw new DukeException(\"Error deleting\");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"        ui.showToUser(\"Now you have \" + tasks.getSize() + \" duke.tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":37}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"     * Indicates the command is exit","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"        return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"     * Displays goodbye message.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":24}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"    private String keyword;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"        int idx \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"            if (tasks.printDescription(i).contains(keyword)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"                idx++;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"                if (idx \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"                    ui.showToUser(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"                ui.showToUser(idx + \".\" + tasks.printTask(i));","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"        if (idx \u003d\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"            ui.showToUser(\"There\u0027s no matching task in your list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":31}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"        ui.showToUser(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"        ArrayList\u003cTask\u003e userTasks \u003d tasks.getTasks();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"        for (int i \u003d 1; i \u003c\u003d userTasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"            ui.showToUser(i + \".\" + userTasks.get(i - 1).toString() + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":23}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"    private int idx;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"    public MarkCommand(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"        ui.showToUser(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"        tasks.markTask(idx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"            storage.writeMarkingToFile(storage.getFilePath(), \"1\", idx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"            throw new DukeException(\"Error overwriting\");","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"        ui.showToUser(\"    \" + idx + \".\" + tasks.printTask(idx - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":28}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"    private int idx;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"    public UnmarkCommand(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"        ui.showToUser(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"        tasks.unmarkTask(idx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"            storage.writeMarkingToFile(storage.getFilePath(), \"0\", idx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"            throw new DukeException(\"Error overwriting\");","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"        ui.showToUser(\"    \" + idx + \".\" + tasks.printTask(idx - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":29}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import java.lang.Exception;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"    public DukeException(String message)","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"    {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"        throw new IllegalArgumentException(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zm-l":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import duke.commands.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"     * @param userInput user\u0027s input string","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"     * @return A command with respect to the user\u0027s input","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"    public static Command parse(String userInput) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"        Pattern mark \u003d Pattern.compile(\"mark [0-9]+\");","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"        Pattern unmark \u003d Pattern.compile(\"unmark [0-9]+\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"        Pattern delete \u003d Pattern.compile(\"delete [0-9]+\");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"        Pattern find \u003d Pattern.compile(\"find .*\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"        Matcher matchMark \u003d mark.matcher(userInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"        Matcher matchUnmark \u003d unmark.matcher(userInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"        Matcher matchDelete \u003d delete.matcher(userInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"        Matcher matchFind \u003d find.matcher(userInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"        } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"        } else if (matchMark.matches()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"            int idx \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"            return new MarkCommand(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"        } else if (matchUnmark.matches()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"            int idx \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"            return new UnmarkCommand(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"        } else if (matchDelete.matches()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"            int idx \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"            return new DeleteCommand(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"        } else if (matchFind.matches()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"            String keyword \u003d userInput.split(\" \")[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"            String[] inputs \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"            String taskType \u003d inputs[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"            switch (taskType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"                case \"todo\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"                    return new AddToDoCommand(userInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"                case \"deadline\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"                    return new AddDeadlineCommand(userInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"                case \"event\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"                    return new AddEventCommand(userInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"                default:","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"                    return new Command();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":61}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"    private String filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"    public String getFilePath() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"        return filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"    public void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"        fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"    public void writeMarkingToFile(String filePath, String mark, int line) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"        ArrayList\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(filePath), StandardCharsets.UTF_8));","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"        String s \u003d fileContent.get(line);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"        ArrayList\u003cString\u003e taskDetails \u003d new ArrayList\u003c\u003e(Arrays.asList(s.split(\" \\\\| \")));","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"        taskDetails.set(1, mark);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"        for (int i \u003d 0; i \u003c taskDetails.size() - 1; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"            task +\u003d taskDetails.get(i) + \" | \";","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"        task +\u003d taskDetails.get(taskDetails.size() - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"        fileContent.set(line, task);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"        Files.write(Paths.get(filePath), fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"    public void deleteTaskInFile(String filePath, int line) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"        ArrayList\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(filePath), StandardCharsets.UTF_8));","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"        fileContent.remove(line);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"        Files.write(Paths.get(filePath), fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"    public ArrayList\u003cTask\u003ereadTaskList() throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"        ArrayList\u003cString\u003e dirsArray \u003d new ArrayList\u003c\u003e(Arrays.asList(filePath.split(\"/\")));","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"        for (int i \u003d 0; i \u003c dirsArray.size() - 1; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"            stringBuilder.append(dirsArray.get(i));","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"        String dirPath \u003d stringBuilder.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"        Files.createDirectories(Paths.get(dirPath));","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        File directory \u003d new File(\"./data\");","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        if (! directory.exists()){","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//            directory.mkdir();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"        f.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"        ArrayList\u003cTask\u003e userTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"            String[] taskDetails \u003d task.split(\" \\\\| \");","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"            Task loadTask \u003d new Task(\"err\");","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"            switch(taskDetails[0]){","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"                case \"T\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"                    loadTask \u003d new ToDo(taskDetails[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"                case \"D\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"                    loadTask \u003d new Deadline(taskDetails[2], LocalDate.parse(taskDetails[3]));","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"                case \"E\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"                    loadTask \u003d new Event(taskDetails[2], LocalDate.parse(taskDetails[3]), LocalDate.parse(taskDetails[4]));","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"            if (taskDetails[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"                loadTask.markTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"            userTasks.add(loadTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"        return userTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":94}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zm-l":19}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zm-l":20}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"        return description;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zm-l":32}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"    public String printDescription(int idx) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"        return tasks.get(idx).getDescription();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"    public void markTask(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"        tasks.get(idx).markTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"    public void unmarkTask(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"        tasks.get(idx).unmarkTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"    public String printTask(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"        return tasks.get(idx).toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"    public void deleteTask(int idx) {tasks.remove(idx); };","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"    public int getSize() {return tasks.size(); };","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":42}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zm-l":13}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"    private static final String LINE_PREFIX \u003d \"|| \";","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"    private final Scanner in;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"        String message \u003d \"Hello from\\n\" + logo + \"\\nWhat can I do for you?\";","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"        showToUser(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"        for (String m : message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"            out.println(LINE_PREFIX + m.replace(\"\\n\", LS + LINE_PREFIX));","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"    private boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"        return rawInputLine.trim().isEmpty();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"        out.print(LINE_PREFIX + \"Enter command: \");","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"        String fullInputLine \u003d in.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"        // silently consume all ignored lines","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"        while (shouldIgnore(fullInputLine)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"            fullInputLine \u003d in.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"        showToUser(\"[Command entered:\" + fullInputLine + \"]\");","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"        return fullInputLine;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"        showToUser(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"        showToUser(DIVIDER);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"    public void showError(String e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"        showToUser(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"        showToUser(\"Error Loading\");","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":73}},{"path":"src/test/java/duke/commands/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"public class ExitCommandTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"    public void test1() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"        Command c \u003d new ExitCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"        assertEquals(false, c.isExit());","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":13}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"    public void test2() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e(10);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"        TaskList t \u003d new TaskList(arr);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"        assertEquals(10, t.getSize());","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"zm-l":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"deadline do homework /by no idea :-","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zm-l":12}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zm-l":1,"-":37}}]
