[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"checkstyle {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zrei":6,"-":40}},{"path":"src/main/java/duke/Duke copy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"// previous copy of Duke as a backup","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"/*import java.io.File;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class Duke {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    private static ArrayList\u003cTask\u003e taskStore \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    private static final String END_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    private static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    private static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    private static final String byIndicator \u003d \"/by\";","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private static final String fromIndicator \u003d \"/from\";","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private static final String toIndicator \u003d \"/to\";","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private static final String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"            Path dirPath \u003d Paths.get(\"./data\");","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"            if (!Files.exists(dirPath)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"                Files.createDirectory(dirPath);","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"            File savedData \u003d new File(Duke.filePath);","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"            savedData.createNewFile();","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"            Scanner dataReader \u003d new Scanner(savedData);","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"            while (dataReader.hasNext()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"                createTaskListFromFile(dataReader.nextLine());","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"            dataReader.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"            System.out.println(\"Reading from storage failed\");","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        String separator \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        String goodbye \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        System.out.println(greeting + separator);","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        while (true) {","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"                String command \u003d sc.nextLine().trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"                if (command.equals(Duke.END_COMMAND)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"                    sc.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"                    System.out.println(goodbye);","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"                } else if (command.equals(Duke.LIST_COMMAND)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"                    for (int i \u003d 0; i \u003c Duke.taskStore.size(); i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"                        System.out.println((i + 1) + \". \" + Duke.taskStore.get(i));","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"                } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"                    processCommand(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"            } finally {","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"                System.out.println(separator);","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"            String toSave \u003d createTaskListString();","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"            fw.write(toSave);","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"            fw.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"            System.out.println(\"Writing to storage failed\");","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"    private static void processCommand(String line) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"        String[] splitCommand \u003d line.split(\" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"        String command \u003d splitCommand[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        if (command.equals(Duke.MARK_COMMAND) || command.equals(Duke.UNMARK_COMMAND)","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"            || command.equals(Duke.DELETE_COMMAND)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"            processTask(command, splitCommand);","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"        } else if (command.equals(Duke.TODO_COMMAND) || command.equals(Duke.DEADLINE_COMMAND)","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"            || command.equals(Duke.EVENT_COMMAND)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"            addTask(command, line);","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"    private static void processTask(String command, String[] splitCommand) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"A task number needs to be provided.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"        } else if (splitCommand.length \u003e 2) {","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"I don\u0027t recognise that task number.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"        int taskIndex;","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"            taskIndex \u003d Integer.parseInt(splitCommand[1]) - 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"I don\u0027t recognise that task number.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        if (taskIndex \u003e\u003d taskStore.size()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"There aren\u0027t that many tasks in the list!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"        } else if (taskIndex \u003c 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"I don\u0027t recognise that task number.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"        switch (command) {","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"        case Duke.MARK_COMMAND:","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"            Duke.taskStore.get(taskIndex).setDone(true);","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"            System.out.println(Duke.taskStore.get(taskIndex));","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"        case Duke.UNMARK_COMMAND:","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"            Duke.taskStore.get(taskIndex).setDone(false);","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"            System.out.println(Duke.taskStore.get(taskIndex));","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"        case Duke.DELETE_COMMAND:","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"            Task task \u003d Duke.taskStore.get(taskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"            Duke.taskStore.remove(taskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"            System.out.println(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"            System.out.println(\"Now you have \" + Duke.taskStore.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"        default:","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"    private static void addTask(String command, String line) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"        switch (command) {","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"        case Duke.TODO_COMMAND:","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"                String description \u003d line.split(Duke.TODO_COMMAND)[1].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"        case Duke.DEADLINE_COMMAND:","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"                String details \u003d line.split(Duke.DEADLINE_COMMAND)[1].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"                String name \u003d details.split(Duke.byIndicator)[0].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"                String deadline \u003d details.split(Duke.byIndicator)[1].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"                if (name.isEmpty() || deadline.isEmpty()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"                    throw new DukeException(\"The description and /by of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"                task \u003d new Deadline(name, deadline);","lastModifiedDate":"2023-01-20"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"                throw new DukeException(\"The description and /by of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"                throw new DukeException(\"The inputted date(s) aren\u0027t formatted correctly!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"        case Duke.EVENT_COMMAND:","lastModifiedDate":"2023-01-20"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"                String details \u003d line.split(Duke.EVENT_COMMAND)[1].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"                String name \u003d details.split(Duke.fromIndicator)[0].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"                String from \u003d details.split(Duke.fromIndicator)[1].split(Duke.toIndicator)[0].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"                String to \u003d details.split(Duke.fromIndicator)[1].split(Duke.toIndicator)[1].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"                if (name.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":183,"author":{"gitId":"zrei"},"content":"                    throw new DukeException(\"The description, /from and /to of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":184,"author":{"gitId":"zrei"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":185,"author":{"gitId":"zrei"},"content":"                task \u003d new Event(name, from, to);","lastModifiedDate":"2023-01-20"},{"lineNumber":186,"author":{"gitId":"zrei"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":187,"author":{"gitId":"zrei"},"content":"                throw new DukeException(\"The description, /from and /to of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":188,"author":{"gitId":"zrei"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"zrei"},"content":"                throw new DukeException(\"The inputted date(s) aren\u0027t formatted correctly!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":190,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":191,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":192,"author":{"gitId":"zrei"},"content":"        default:","lastModifiedDate":"2023-01-20"},{"lineNumber":193,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":194,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":195,"author":{"gitId":"zrei"},"content":"        Duke.taskStore.add(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":196,"author":{"gitId":"zrei"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"zrei"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"zrei"},"content":"        System.out.println(\"Now you have \" + Duke.taskStore.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":199,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"zrei"},"content":"    private static void createTaskListFromFile(String task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"zrei"},"content":"        char typeOfTask \u003d task.charAt(0);","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"zrei"},"content":"        String[] details \u003d task.split(\"@\");","lastModifiedDate":"2023-01-20"},{"lineNumber":204,"author":{"gitId":"zrei"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-01-20"},{"lineNumber":205,"author":{"gitId":"zrei"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2023-01-20"},{"lineNumber":206,"author":{"gitId":"zrei"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-01-20"},{"lineNumber":207,"author":{"gitId":"zrei"},"content":"            newTask \u003d new Todo(details[2]);","lastModifiedDate":"2023-01-20"},{"lineNumber":208,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":209,"author":{"gitId":"zrei"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-01-20"},{"lineNumber":210,"author":{"gitId":"zrei"},"content":"            newTask \u003d new Event(details[2], details[3], details[4]);","lastModifiedDate":"2023-01-20"},{"lineNumber":211,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":212,"author":{"gitId":"zrei"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-01-20"},{"lineNumber":213,"author":{"gitId":"zrei"},"content":"            newTask \u003d new Deadline(details[2], details[3]);","lastModifiedDate":"2023-01-20"},{"lineNumber":214,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":215,"author":{"gitId":"zrei"},"content":"        default:","lastModifiedDate":"2023-01-20"},{"lineNumber":216,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":217,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":218,"author":{"gitId":"zrei"},"content":"        newTask.setDone(details[1].equals(\"1\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":219,"author":{"gitId":"zrei"},"content":"        taskStore.add(newTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":220,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":221,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":222,"author":{"gitId":"zrei"},"content":"    private static String createTaskListString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":223,"author":{"gitId":"zrei"},"content":"        StringBuffer representation \u003d new StringBuffer();","lastModifiedDate":"2023-01-20"},{"lineNumber":224,"author":{"gitId":"zrei"},"content":"        for (Task t : taskStore) {","lastModifiedDate":"2023-01-20"},{"lineNumber":225,"author":{"gitId":"zrei"},"content":"            representation.append(t.getFileRepresentation() + \"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":226,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":227,"author":{"gitId":"zrei"},"content":"        return representation.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":228,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":229,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":230,"author":{"gitId":"zrei"},"content":"}*/","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":230}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"/** Class that encapsulates the Duke chatbot */","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    /** Relative path to the data directory used for storing tasks */","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"    private static final String dirPath \u003d \"./data/\";","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    /** Storage object to interact with storage */","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    /** TaskList object to store tasks */","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    /** UI object to display user interface and read user input */","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"     * Constructs a Duke object with a specified path","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"     * to the data directory used for storing tasks.","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"     * @param dirPath Relative path to the data directory","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"     *                used for storing tasks.","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    */","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    public Duke(String dirPath) {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"        this.storage \u003d new Storage(dirPath);","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"            this.ui.showErrorMessage(e);","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"     * Runs the main loop of the Duke chatbot","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"     * where Duke takes in user input","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"     * and responds to the commands given.","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    public void run() {","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"        this.ui.showGreeting();","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"        this.ui.showSeparator();","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"            try {","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"                ui.showArrow();","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"                String fullCommand \u003d this.ui.readCommand();","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"                ui.showSeparator();","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"                Command c \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"                c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"                ui.showErrorMessage(e);","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"            } finally {","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"                ui.showSeparator();","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        ui.closeScanner();","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        new Duke(Duke.dirPath).run();","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zrei":65,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"/** Class that parses user input */","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"public class Parser {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    /** Constant Strings to represent each command supported by Duke */","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    private static final String END_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    private static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    private static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    private static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    private static final String BY_INDICATOR \u003d \"/by\";","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    private static final String FROM_INDICATOR \u003d \"/from\";","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    private static final String TO_INDICATOR \u003d \"/to\";","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"     * Parses the given command string.","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"     * @param line String representing user command.","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"     * @return Command object representing user command.","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"     * @throws DukeException if given command string cannot be parsed.","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"    public static Command parseCommand(String line) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"        if (line.equals(Parser.END_COMMAND)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"        } else if (line.equals(Parser.LIST_COMMAND)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"            return processCommand(line);","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"     * Parses multi-word command strings.","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"     * @param line String representing multi-word command.","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"     * @return Command object representing multi-word command.","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"     * @throws DukeException if given multi-word command string cannot be parsed.","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"    private static Command processCommand(String line) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"        String[] splitCommand \u003d line.split(\" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        String command \u003d splitCommand[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        if (command.equals(Parser.MARK_COMMAND) || command.equals(Parser.UNMARK_COMMAND)","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"            || command.equals(Parser.DELETE_COMMAND)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"            return processTask(command, splitCommand);","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        } else if (command.equals(Parser.TODO_COMMAND) || command.equals(Parser.DEADLINE_COMMAND)","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"            || command.equals(Parser.EVENT_COMMAND)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"            return addTask(command, line);","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        } else if (command.equals(Parser.FIND_COMMAND)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"            return processFind(line);","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"     * Parses command strings to do with altering the task list","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"     * or the state of tasks.","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"     * @param command Command keyword.","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"     * @param splitCommand Command string split by spaces.","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"     * @return Command object representing user command.","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"     * @throws DukeException if given command string cannot be parsed.","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"    private static Command processTask(String command, String[] splitCommand) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"A task number needs to be provided.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"        } else if (splitCommand.length \u003e 2) {","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"I don\u0027t recognise that task number.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"            int taskIndex \u003d Integer.parseInt(splitCommand[1]) - 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"            if (command.equals(Parser.MARK_COMMAND)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"                return new MarkCommand(taskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"            } else if (command.equals(Parser.UNMARK_COMMAND)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"                return new UnmarkCommand(taskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"                return new DeleteCommand(taskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"I don\u0027t recognise that task number.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"     * Parses command strings to do with adding tasks.","lastModifiedDate":"2023-01-21"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"     * @param command Command keyword.","lastModifiedDate":"2023-01-21"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"     * @param line String representing user command.","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"     * @return Command object.","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"     * @throws DukeException if task cannot be created.","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"    private static Command addTask(String command, String line) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        switch (command) {","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        case Parser.TODO_COMMAND:","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"                String description \u003d line.split(Parser.TODO_COMMAND)[1].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        case Parser.DEADLINE_COMMAND:","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"                String details \u003d line.split(Parser.DEADLINE_COMMAND)[1].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"                String name \u003d details.split(Parser.BY_INDICATOR)[0].trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"                String deadline \u003d details.split(Parser.BY_INDICATOR)[1].trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"                if (name.isEmpty() || deadline.isEmpty()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"                    throw new DukeException(\"The description and /by of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"                task \u003d new Deadline(name, deadline);","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"                throw new DukeException(\"The description and /by of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"                throw new DukeException(\"The inputted date(s) aren\u0027t formatted correctly!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"        case Parser.EVENT_COMMAND:","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"                String details \u003d line.split(Parser.EVENT_COMMAND)[1].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"                String name \u003d details.split(Parser.FROM_INDICATOR)[0].trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"                String from \u003d details.split(Parser.FROM_INDICATOR)[1].split(Parser.TO_INDICATOR)[0].trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"                String to \u003d details.split(Parser.FROM_INDICATOR)[1].split(Parser.TO_INDICATOR)[1].trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"                if (name.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"                    throw new DukeException(\"The description, /from and /to of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"                task \u003d new Event(name, from, to);","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"                throw new DukeException(\"The description, /from and /to of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"                throw new DukeException(\"The inputted date(s) aren\u0027t formatted correctly!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"zrei"},"content":"        default:","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"zrei"},"content":"        return new AddCommand(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":166,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":167,"author":{"gitId":"zrei"},"content":"     * Parses command strings to do with finding matching","lastModifiedDate":"2023-01-22"},{"lineNumber":168,"author":{"gitId":"zrei"},"content":"     * tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":169,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":170,"author":{"gitId":"zrei"},"content":"     * @param line String representing user command.","lastModifiedDate":"2023-01-22"},{"lineNumber":171,"author":{"gitId":"zrei"},"content":"     * @return Command object.","lastModifiedDate":"2023-01-22"},{"lineNumber":172,"author":{"gitId":"zrei"},"content":"     * @throws DukeException if no keyword is provided.","lastModifiedDate":"2023-01-22"},{"lineNumber":173,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":174,"author":{"gitId":"zrei"},"content":"    private static Command processFind(String line) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":175,"author":{"gitId":"zrei"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":176,"author":{"gitId":"zrei"},"content":"            String keyword \u003d line.split(Parser.FIND_COMMAND)[1].trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":177,"author":{"gitId":"zrei"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-01-21"},{"lineNumber":178,"author":{"gitId":"zrei"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":179,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"No keyword has been provided!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":180,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":181,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":182,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":182}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.io.File;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"/** Class that saves to and loads from task storage */","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"public class Storage {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    /** Relative path to the data directory used for storing tasks */","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    private String dirPath;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    /** Name of file used for storing tasks */","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    private final String fileName \u003d \"duke.txt\";","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"     * Constructs a Storage object with a specified path","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"     * to the data directory used for storing tasks.","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"     * @param dirPath Relative path to the data directory","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"     *                used for storing tasks.","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public Storage(String dirPath) {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        this.dirPath \u003d dirPath;","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"     * Loads tasks from storage.","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"     * @return String representing all stored tasks","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"     * @throws DukeException if loading from storage fails.","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    public String load() throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"            Path dirPath \u003d Paths.get(this.dirPath);","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"            if (!Files.exists(dirPath)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"                Files.createDirectory(dirPath);","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"            if (!Files.exists(Paths.get(this.dirPath + this.fileName))) {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"                File f \u003d new File(this.dirPath + this.fileName);","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"            return Files.readString(Paths.get(this.dirPath + this.fileName));","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"Reading from storage failed\");","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"     * Saves tasks to storage.","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"     * @param taskList String representing all tasks to save","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"     * @throws DukeException if saving to storage fails.","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    public void save(String taskList) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"            FileWriter fw \u003d new FileWriter(this.dirPath + this.fileName);","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"            fw.write(taskList);","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"            fw.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"Writing to storage failed\");","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":70}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"/** Contains task list */","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"public class TaskList {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    /** ArrayList with initial capacity of 100 to store tasks */","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"     * Empty constructor.","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"     * Constructs a TaskList from a String","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"     * representing all tasks to add to the list.","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"     * @param taskList String representing all tasks","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"     *                 to add to the task list.","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"    public TaskList(String taskList) {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"        this.processTaskListString(taskList);","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"     * @param task Task to add.","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"     * Deletes the task at the given index.","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"     * @param index Index to delete task from.","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"     * @return Deleted task.","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"     * @throws DukeException if index is not valid.","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        if (index \u003e\u003d this.getSize()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"There aren\u0027t that many tasks in the list!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        } else if (index \u003c 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"I don\u0027t recognise that task number.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        Task task \u003d this.getTaskAtIndex(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"        return task;","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"     * Marks the task at the given index.","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"     * @param index Index to mark tast at.","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"     * @return Task that was marked.","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"     * @throws DukeException if index is not valid.","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"    public Task markTaskDone(int index) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        if (index \u003e\u003d this.getSize()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"There aren\u0027t that many tasks in the list!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"        } else if (index \u003c 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"I don\u0027t recognise that task number.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"        this.getTaskAtIndex(index).setDone(true);","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        return this.getTaskAtIndex(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"     * Unmarks the test at the given index.","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"     * @param index Index to unmark test at.","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"     * @return Task that was unmarked.","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"     * @throws DukeException if index is not valid.","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"    public Task unmarkTask(int index) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        if (index \u003e\u003d this.getSize()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"There aren\u0027t that many tasks in the list!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        } else if (index \u003c 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"            throw new DukeException(\"I don\u0027t recognise that task number.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"        this.getTaskAtIndex(index).setDone(false);","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"        return this.getTaskAtIndex(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"     * Processes a String representing a group of tasks","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"     * and adds these tasks to the list.","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"     * @param taskList String representing a group of tasks.","lastModifiedDate":"2023-01-21"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    private void processTaskListString(String taskList) {","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"        Scanner sc \u003d new Scanner(taskList);","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"            String taskStringRepresentation \u003d sc.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"            this.addTask(Task.createTaskFromStringRepresentation(taskStringRepresentation));","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        sc.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"     * Converts the task list to a String","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"     * for storage.","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"     * @return String representing tasks in task list.","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"    public String createTaskListString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"        StringBuffer representation \u003d new StringBuffer();","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"            representation.append(t.getFileRepresentation() + \"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"        return representation.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-21"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"        StringBuffer res \u003d new StringBuffer();","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"        for (int i \u003d 0; i \u003c this.getSize() - 1; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"            res.append((i + 1) + \". \" + this.getTaskAtIndex(i) + \"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"        res.append(this.getSize() + \". \" + this.getTaskAtIndex(this.getSize() - 1));","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"        return res.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"    private Task getTaskAtIndex(int index) {","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"     * Finds all tasks in the list that contains the given","lastModifiedDate":"2023-01-22"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"     * keyword and returns a new TaskList containing only","lastModifiedDate":"2023-01-22"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"     * these tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"     * @param keyword The given keyword that tasks must contain.","lastModifiedDate":"2023-01-22"},{"lineNumber":147,"author":{"gitId":"zrei"},"content":"     * @return New TaskList containing only matching tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":148,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":149,"author":{"gitId":"zrei"},"content":"    public TaskList findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-01-21"},{"lineNumber":150,"author":{"gitId":"zrei"},"content":"        TaskList filteredTaskList \u003d new TaskList();","lastModifiedDate":"2023-01-21"},{"lineNumber":151,"author":{"gitId":"zrei"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":152,"author":{"gitId":"zrei"},"content":"            if (t.nameContainsKeyword(keyword)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":153,"author":{"gitId":"zrei"},"content":"                filteredTaskList.addTask(t);","lastModifiedDate":"2023-01-21"},{"lineNumber":154,"author":{"gitId":"zrei"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":155,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":156,"author":{"gitId":"zrei"},"content":"        return filteredTaskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":157,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":158,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":159,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":159}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"/** Class that handles user interface */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"public class Ui {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    /** Scanner to read in user input */","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"     * Prints greeting text.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    public void showGreeting() {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"     * Prints arrow to indicate user should input something.","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    public void showArrow() {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"     * Prints separator.","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"    public void showSeparator() {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"     * Prints error message.","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"     * @param e Error.","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"    public void showErrorMessage(DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"     * Reads in user\u0027s next command.","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"     * @return User\u0027s next command.","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"        String command \u003d this.sc.nextLine().trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"        return command;","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"     * Prints user\u0027s tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"     * @param tasks User\u0027s task list.","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"            System.out.println(\"There are currently no tasks in your list.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"            System.out.println(tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"zrei"},"content":"     * Prints text for adding task to task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"zrei"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"zrei"},"content":"     * @param tasks Task list.","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"zrei"},"content":"    public void showAddTask(Task task, TaskList tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"zrei"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"zrei"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"zrei"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"zrei"},"content":"     * Prints text for marking task.","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":93,"author":{"gitId":"zrei"},"content":"     * @param task Task that has been marked.","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"zrei"},"content":"    public void showMarkTask(Task task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"zrei"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"zrei"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":101,"author":{"gitId":"zrei"},"content":"     * Prints text for unmarking task.","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"zrei"},"content":"     * @param task Task that has been unmarked.","lastModifiedDate":"2023-01-21"},{"lineNumber":104,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"zrei"},"content":"    public void showUnmarkTask(Task task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"zrei"},"content":"        System.out.println(\"Got it. I\u0027ve marked this task as not done:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"zrei"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":111,"author":{"gitId":"zrei"},"content":"     * Prints text for deleting task.","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"zrei"},"content":"     * @param task Deleted task.","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"zrei"},"content":"     * @param tasks Task list.","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"zrei"},"content":"    public void showDeleteTask(Task task, TaskList tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"zrei"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"zrei"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"zrei"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":120,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":123,"author":{"gitId":"zrei"},"content":"     * Prints goodbye text.","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":125,"author":{"gitId":"zrei"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"zrei"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":130,"author":{"gitId":"zrei"},"content":"     * Prints matching tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"zrei"},"content":"     * @param tasks TaskList containing matching tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":132,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":133,"author":{"gitId":"zrei"},"content":"    public void showFind(TaskList tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":134,"author":{"gitId":"zrei"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"zrei"},"content":"            System.out.println(\"There are no matching tasks.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"zrei"},"content":"        } else {","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"zrei"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"zrei"},"content":"            System.out.println(tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":139,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":140,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":141,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":142,"author":{"gitId":"zrei"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"zrei"},"content":"        this.sc.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":146}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.command;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    private Task task;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"        super(false);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        storage.save(tasks.createTaskListString());","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        ui.showAddTask(task, tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":24}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.command;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"/** Class that represents a user command */","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    /** Whether Duke should exit */","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"    private boolean isExit;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"     * Constructs a Command object.","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"     * @param isExit Whether this command","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"     *               exits Duke.","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"     * Executes this command.","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"     * @param tasks Current task list.","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"     * @param storage Storage.","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"     * @throws DukeException if execution fails.","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"        return this.isExit;","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":37}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.command;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    private int index;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"        super(false);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        Task task \u003d tasks.deleteTask(this.index);","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        ui.showDeleteTask(task, tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        storage.save(tasks.createTaskListString());","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":23}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.command;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"        super(true);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":17}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.command;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"    private String keyword;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"        super(false);","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"        ui.showFind(tasks.findTasksByKeyword(this.keyword));","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"zrei":20}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.command;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"        super(false);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"        ui.showList(tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":18}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.command;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    private int index;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"        super(false);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        Task task \u003d tasks.markTaskDone(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        ui.showMarkTask(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        storage.save(tasks.createTaskListString());","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":23}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.command;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    private int index;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"        super(false);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        Task task \u003d tasks.unmarkTask(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        ui.showUnmarkTask(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        storage.save(tasks.createTaskListString());","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":23}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.exception;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"/** Exception for problems that arise when running Duke */","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"        super(\"☹ OOPS!!! \" + message);","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"zrei":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"    private LocalDate by;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"    public Deadline(String name, String by) throws DateTimeParseException {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"        super(name);","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"        return \"[D] \" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"            + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        return \"D\" + \"@\" + (super.isDone() ? \"1\" : \"0\") + \"@\" + this.getName() + \"@\" + this.by;","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"zrei":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"    public Event(String name, String from, String to) throws DateTimeParseException {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"        super(name);","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        return \"[E] \" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"            + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to: \"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"            + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"        return \"E\" + \"@\" + (super.isDone() ? \"1\" : \"0\") + \"@\" + this.getName() + \"@\" + this.from + \"@\" + this.to;","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"zrei":28}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"/** Class that represents a task */","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"    private String name;","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"     * Constructs a Task object with the specified","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"     * name.","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"     * @param name Name to give task.","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"    public void setDone(boolean status) {","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"     * Converts the task to a string representation","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"     * that can be saved in storage.","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"     * @return String representation to be saved in storage.","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"    public abstract String getFileRepresentation();","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"    protected String getName() {","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        return this.name;","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    };","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":39,"author":{"gitId":"zrei"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":40,"author":{"gitId":"zrei"},"content":"        return (this.isDone ? \"[X] \" : \"[ ] \") + this.name;","lastModifiedDate":"2023-01-14"},{"lineNumber":41,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":42,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"zrei"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"zrei"},"content":"     * Converts the string representation of a task from storage","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"zrei"},"content":"     * to a Task object.","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"zrei"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"zrei"},"content":"     * @param stringRepresentation String representation of a task from storage.","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"zrei"},"content":"     * @return Task object.","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"zrei"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"zrei"},"content":"    public static Task createTaskFromStringRepresentation(String stringRepresentation) {","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"zrei"},"content":"        char typeOfTask \u003d stringRepresentation.charAt(0);","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"zrei"},"content":"        String[] details \u003d stringRepresentation.split(\"@\");","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"zrei"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"zrei"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"zrei"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"zrei"},"content":"            newTask \u003d new Todo(details[2]);","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"zrei"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"zrei"},"content":"            newTask \u003d new Event(details[2], details[3], details[4]);","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"zrei"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"zrei"},"content":"            newTask \u003d new Deadline(details[2], details[3]);","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"zrei"},"content":"        default:","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"zrei"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"zrei"},"content":"        newTask.setDone(details[1].equals(\"1\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"zrei"},"content":"        return newTask;","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"zrei"},"content":"    public boolean nameContainsKeyword(String keyword) {","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"zrei"},"content":"        return this.name.contains(keyword);","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"zrei":75}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"        super(name);","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"        return \"T\" + \"@\" + (super.isDone() ? \"1\" : \"0\") + \"@\" + this.getName();","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"zrei":17}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"        Deadline testDeadline \u003d new Deadline(\"return library books\", \"2022-02-02\");","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"        assertEquals(\"[D] [ ] return library books (by: Feb 2 2022)\", testDeadline.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"        testDeadline.setDone(true);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"        assertEquals(\"[D] [X] return library books (by: Feb 2 2022)\", testDeadline.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"    public void testFileRepresentationConversion() {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        Deadline testDeadline \u003d new Deadline(\"return library books\", \"2022-02-02\");","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"        assertEquals(\"D@0@return library books@2022-02-02\", testDeadline.getFileRepresentation());","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"        testDeadline.setDone(true);","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"zrei"},"content":"        assertEquals(\"D@1@return library books@2022-02-02\", testDeadline.getFileRepresentation());","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"zrei"},"content":"    public void deadlineCreation_invalidDate_exceptionThrown() {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"zrei"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"zrei"},"content":"            assertEquals(\"[D] [ ] return library books (by: Feb 2 2022)\",","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"zrei"},"content":"                new Deadline(\"return library books\", \"2022-2-2\").toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"zrei"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"zrei"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"zrei"},"content":"            assertEquals(\"Text \u00272022-2-2\u0027 could not be parsed at index 5\", e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"zrei"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":37}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"package duke.task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"        Todo testTodo \u003d new Todo(\"test\");","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"zrei"},"content":"        assertEquals(\"[T] [ ] test\", testTodo.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"zrei"},"content":"        testTodo.setDone(true);","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"zrei"},"content":"        assertEquals(\"[T] [X] test\", testTodo.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"zrei"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"zrei"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"zrei"},"content":"    public void testFileRepresentationConversion() {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"zrei"},"content":"        Todo testTodo \u003d new Todo(\"test\");","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"zrei"},"content":"        assertEquals(\"T@0@test\", testTodo.getFileRepresentation());","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"zrei"},"content":"        testTodo.setDone(true);","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"zrei"},"content":"        assertEquals(\"T@1@test\", testTodo.getFileRepresentation());","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"zrei"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"zrei"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zrei":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zrei"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"zrei"},"content":"todo yeet","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"zrei"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"zrei"},"content":"mark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"zrei"},"content":"deadline free /by 6pm","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"zrei"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"zrei"},"content":"unmark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"zrei"},"content":"mark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"zrei"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"zrei"},"content":"bye","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"zrei":10}}]
