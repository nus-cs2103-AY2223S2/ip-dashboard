[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"zuohui48":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"checkstyle {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"zuohui48"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"zuohui48"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"zuohui48"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"zuohui48"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"zuohui48"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"zuohui48"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"-":40,"zuohui48":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"D | X | return book | 12/06/2023","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"E | X | project meeting | 12/06/2023 1400 | 12/06/2024 1700","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"T |   | join sports club","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"zuohui48":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"### Feature - Add Task","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"Allow users to add different types of tasks from the following list: ","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"1. Todo","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"2. Deadline","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"3. Event","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"### Feature - Task List","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"Allow users to view a list of taks.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"### Feature - Mark/Unmark Task","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"Allow users to mark a task as done or mark a task as undone. ","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"### Feature - Delete Task","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"Allow users to delete a task from the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"### Feature - Find Tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"Allow users to find tasks in their task list based on a given keyword.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"zuohui48"},"content":"### `todo` - Adds a Todo task","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"zuohui48"},"content":"Adds a Todo task to the list of tasks using the command `todo`","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"zuohui48"},"content":"Example of usage: `todo go to school`","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"zuohui48"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"zuohui48"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"zuohui48"},"content":"  [T][ ] go to school","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"zuohui48"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"zuohui48"},"content":"### `deadline` - Adds a Deadline task","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"zuohui48"},"content":"Adds a Deadline task to the list of tasks using the command `deadline`","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"zuohui48"},"content":"Example of usage: `deadline have dinner /by 14/10/2023 1800`","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"zuohui48"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"zuohui48"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"zuohui48"},"content":"  [D][ ] have dinner (by: Oct 14 2023 18:00)","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"zuohui48"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"zuohui48"},"content":"### `event` - Adds a Event task","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"zuohui48"},"content":"Adds a Event task to the list of tasks using the command `event`","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"zuohui48"},"content":"Example of usage: `event open house /from 20/11/2023 1200 /to 21/11/2023 1700`","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"zuohui48"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"zuohui48"},"content":"  [E][ ] open house (from: Nov 20 2023 12:00 to: Nov 21 2023 17:00)","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"zuohui48"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"zuohui48"},"content":"### `list` - view task list","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"zuohui48"},"content":"Shows the current list of tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"zuohui48"},"content":"Example of usage: `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"zuohui48"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"zuohui48"},"content":"1: [T][] assignment","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"zuohui48"},"content":"2: [T][] go to school","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"zuohui48"},"content":"3: [D][] have dinner (by: Oct 14 2023 18:00)","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"zuohui48"},"content":"4: [E][] open house (from: Nov 20 2023 12:00 to: Nov 21 2023 17:00)","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"zuohui48"},"content":"### `mark` - Marks a task as done","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"zuohui48"},"content":"Marks a task as done ","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"zuohui48"},"content":"Example of usage: `mark 2`","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"zuohui48"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"zuohui48"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"zuohui48"},"content":"[T][X] go to school","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"zuohui48"},"content":"### `unmark` - Marks a task as undone","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"zuohui48"},"content":"Marks a task as undone ","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"zuohui48"},"content":"Example of usage: `unmark 2`","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"zuohui48"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"zuohui48"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"zuohui48"},"content":"[T][] go to school","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"zuohui48"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"zuohui48"},"content":"Delete the task from the task list ","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"zuohui48"},"content":"Example of usage: `delete 2`","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"zuohui48"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"zuohui48"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"zuohui48"},"content":"[T][] go to school","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"zuohui48"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"zuohui48"},"content":"### `find` - Find tasks with keyword","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"zuohui48"},"content":"List all tasks in task list with the given keyword","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"zuohui48"},"content":"Example of usage: `find dinner`","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"zuohui48"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"zuohui48"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"zuohui48"},"content":"[D][] have dinner (by: Oct 14 2023 18:00)","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"zuohui48"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"zuohui48"},"content":"### `bye` - Exits the program","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"zuohui48"},"content":"Exits the program, updates and save task list in duke.txt","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"zuohui48"},"content":"Example of usage: `bye`","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"zuohui48"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":148,"author":{"gitId":"zuohui48"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":19,"zuohui48":130}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"zuohui48"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"zuohui48"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"zuohui48"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"zuohui48"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"zuohui48"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"zuohui48"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"zuohui48"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"zuohui48"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"zuohui48"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"zuohui48"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"zuohui48"},"content":"    private void flip() {","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"zuohui48"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"zuohui48"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"zuohui48"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"zuohui48"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"zuohui48"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"zuohui48"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"zuohui48"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"zuohui48"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"zuohui48"},"content":"        db.flip();","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"zuohui48"},"content":"        return db;","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"public class Duke {","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"    static TaskList list;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    private static final Parser logic \u003d new Parser();","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"    Storage storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"    public Duke(String data, String dataPath) {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"        this.storage \u003d new Storage(data, dataPath);","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"            list \u003d storage.loadData();","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"            list \u003d new TaskList();","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"zuohui48"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"zuohui48"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"zuohui48"},"content":"        ui.showLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"zuohui48"},"content":"        list \u003d Storage.loadData();","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"zuohui48"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"zuohui48"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"zuohui48"},"content":"        while (!logic.checkBye(input)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"zuohui48"},"content":"            if (logic.checkList(input)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"zuohui48"},"content":"                ui.printListMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"zuohui48"},"content":"                list.list();","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"zuohui48"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"zuohui48"},"content":"            } else if (logic.checkFind(input)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"zuohui48"},"content":"                String word \u003d input.split(\" \")[1];","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"zuohui48"},"content":"                ui.printFindMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"zuohui48"},"content":"                list.find(word);","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"zuohui48"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"zuohui48"},"content":"            } else if (logic.checkMark(input)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"zuohui48"},"content":"                int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"zuohui48"},"content":"                list.mark(num);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"zuohui48"},"content":"                ui.printMarkMessage(list.get(num));","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"zuohui48"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"zuohui48"},"content":"            } else if (logic.checkUnmark(input)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"zuohui48"},"content":"                int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"zuohui48"},"content":"                list.unmark(num);","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"zuohui48"},"content":"                ui.printUnmarkMessage(list.get(num));","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"zuohui48"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"zuohui48"},"content":"           } else if (logic.checkDelete(input)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"zuohui48"},"content":"                int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"zuohui48"},"content":"                ui.printDeleteMessage(list.get(num), list);","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"zuohui48"},"content":"                list.removeFind(list.get(num));","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"zuohui48"},"content":"                list.delete(num);","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"zuohui48"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"zuohui48"},"content":"            } else if (logic.checkTask(input)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"zuohui48"},"content":"                list.add(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"zuohui48"},"content":"                ui.printAddMessage(list.getLast(), list);","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"zuohui48"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"zuohui48"},"content":"            } else if (!logic.isValidCommand(input)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"zuohui48"},"content":"                ui.printInvalidCommandMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"zuohui48"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"zuohui48"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"zuohui48"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"zuohui48"},"content":"        Storage.saveData(list);","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"zuohui48"},"content":"        ui.printByeMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"zuohui48"},"content":"        ui.showLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"zuohui48"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"zuohui48"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"zuohui48"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"zuohui48"},"content":"        Command cmd \u003d logic.parse(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"zuohui48"},"content":"        assert cmd !\u003d null : \"command must not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"zuohui48"},"content":"        return cmd.execute(list, ui);","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":89}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"public class Launcher {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    private Duke duke \u003d new Duke(\"./data/duke.txt\", \"./data\");","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"            assert duke !\u003d null: \"duke must not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"            stage.show();","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"zuohui48"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"zuohui48"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"zuohui48"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"zuohui48"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"zuohui48"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"zuohui48"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"zuohui48"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"zuohui48"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"zuohui48"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"zuohui48"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"zuohui48"},"content":"        String input \u003d userInput.getText() + \"  \";","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"zuohui48"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"zuohui48"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"zuohui48"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"zuohui48"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"zuohui48"},"content":"        );","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"zuohui48"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"zuohui48"},"content":"        if (response.equals(\"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"zuohui48"},"content":"            duke.storage.saveData(duke.list);","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"zuohui48"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":57}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.command;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"    private String task;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"    public AddCommand(String task) {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"    public String execute(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"        assert task !\u003d null : \"task must not null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"        if (list.isDuplicate(task)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"            return ui.printDuplicateTaskMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"        list.add(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"        return ui.printAddMessage(list.getLast(), list);","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":23}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.command;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    public String execute(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"        return ui.printByeMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":12}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.command;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    public abstract String execute(TaskList list, Ui ui);","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":11}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.command;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    private int index;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    public String execute(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"            list.get(index);","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"        catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"            return ui.printOutOfBoundsMessage(list);","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"        String output \u003d ui.printDeleteMessage(list.get(index), list);","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"        list.delete(index);","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"        return output;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":27}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.command;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"    private String keyword;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"    public FindCommand(String word) {","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"        this.keyword \u003d word;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"    public String execute(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"        output +\u003d ui.printFindMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"        output +\u003d list.find(keyword);","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"        return output;","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":23}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.command;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"    String message \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    public InvalidCommand(String msg) {","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"        this.message \u003d msg;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"    public InvalidCommand() {}","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    public String execute(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"        if (message.equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"            return ui.printInvalidCommandMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"            return message;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"zuohui48":23}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.command;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"    public String execute(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"        output +\u003d ui.printListMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"        output +\u003d list.list();","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"        return output;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":17}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.command;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    private int index;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    public String execute(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"            list.get(index);","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"        catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"            return ui.printOutOfBoundsMessage(list);","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"        list.mark(index);","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"        return ui.printMarkMessage(list.get(index));","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":26}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.command;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    private int index;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    public String execute(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"            list.get(index);","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"        catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"            return ui.printOutOfBoundsMessage(list);","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"        list.unmark(index);","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"        return ui.printUnmarkMessage(list.get(index));","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":26}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.exception;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"        super(msg);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"zuohui48":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"public class Parser {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"    private final static String[] VALID_COMMANDS \u003d {\"mark\", \"unmark\", \"list\", \"delete\", \"bye\", \"todo\", \"event\", \"deadline\"};","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"     * Returns a boolean stating if the command is valid.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"     * @param input Command to check.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"     * @return True if command is valid, False otherwise.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"    public boolean isValidCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"        return Arrays.asList(VALID_COMMANDS).contains(input.split(\" \")[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"    public boolean checkFind(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"        return input.split(\" \")[0].equals(\"find\");","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"    public boolean checkTask(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"        return checkTodo(input) || checkEvent(input) || checkDeadline(input);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"zuohui48"},"content":"    public boolean checkDeadline(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"zuohui48"},"content":"        String cmd \u003d input.split(\" \")[0];","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"zuohui48"},"content":"        return cmd.equals(\"deadline\") || cmd.equals(\"Deadline\");","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"zuohui48"},"content":"    public boolean checkEvent(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"zuohui48"},"content":"        String cmd \u003d input.split(\" \")[0];","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"zuohui48"},"content":"        return cmd.equals(\"event\") || cmd.equals(\"Event\");","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"zuohui48"},"content":"    public boolean checkTodo(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"zuohui48"},"content":"        String cmd \u003d input.split(\" \")[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"zuohui48"},"content":"        return cmd.equals(\"todo\") || cmd.equals(\"Todo\");","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"zuohui48"},"content":"    public boolean checkMark(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"zuohui48"},"content":"        return input.split(\" \")[0].equals(\"mark\");","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"zuohui48"},"content":"    public boolean checkUnmark(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"zuohui48"},"content":"        return input.split(\" \")[0].equals(\"unmark\");","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"zuohui48"},"content":"    public boolean checkList(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"zuohui48"},"content":"        return input.split(\" \")[0].equals(\"list\");","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"zuohui48"},"content":"    public boolean checkBye(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"zuohui48"},"content":"        return input.split(\" \")[0].equals(\"bye\");","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"zuohui48"},"content":"    public boolean checkDelete(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"zuohui48"},"content":"        return input.split(\" \")[0].equals(\"delete\");","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"zuohui48"},"content":"    public boolean checkValidTask(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"zuohui48"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"zuohui48"},"content":"        return inputs.length \u003e\u003d 2;","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"zuohui48"},"content":"    public boolean checkValidDeadline(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"zuohui48"},"content":"        String[] nameAndDeadline \u003d input.split(\" \", 2)[1].split(\" /by \");","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"zuohui48"},"content":"        return nameAndDeadline.length \u003e\u003d 2;","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"zuohui48"},"content":"    public boolean checkValidEvent(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"zuohui48"},"content":"        String[] nameAndStart \u003d input.split(\" \", 2)[1].split(\" /from \");","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"zuohui48"},"content":"        if (nameAndStart.length \u003c 2) {","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"zuohui48"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"zuohui48"},"content":"        String[] startAndEnd \u003d nameAndStart[1].split(\" /to \");","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"zuohui48"},"content":"        if (startAndEnd.length \u003c 2) {","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"zuohui48"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"zuohui48"},"content":"        return true;","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"zuohui48"},"content":"    public boolean isValidEvent(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"zuohui48"},"content":"        String[] nameAndStart \u003d input.split(\" \", 2)[1].split(\" /from \");","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"zuohui48"},"content":"        if (!checkValidEvent(input)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"zuohui48"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"zuohui48"},"content":"        String[] startAndEnd \u003d nameAndStart[1].split(\" /to \");","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"zuohui48"},"content":"        String[] start \u003d startAndEnd[0].split(\" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"zuohui48"},"content":"        String[] end \u003d startAndEnd[1].split(\" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"zuohui48"},"content":"        if (!isValidDate(start[0]) || !isValidDate(end[0])) {","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"zuohui48"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"zuohui48"},"content":"        if (start.length \u003e 1 \u0026\u0026 (!isValidTime(start[1]) || !isValidTime(end[1]))) {","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"zuohui48"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"zuohui48"},"content":"        return true;","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"zuohui48"},"content":"    public boolean isValidDate(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"zuohui48"},"content":"        String[] date \u003d input.split(\"/\");","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"zuohui48"},"content":"        if (date.length \u003c 3 || date[2].length() !\u003d 4 ||","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"zuohui48"},"content":"                date[1].length() \u003e 2 || date[0].length() \u003e 2) {","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"zuohui48"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"zuohui48"},"content":"        return true;","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"zuohui48"},"content":"    public boolean isValidTime(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"zuohui48"},"content":"        String[] time \u003d input.split(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"zuohui48"},"content":"        if (time.length !\u003d 4 || Integer.parseInt(input) \u003e 2359) {","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"zuohui48"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"zuohui48"},"content":"        return true;","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"zuohui48"},"content":"    public boolean isValidDeadline(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"zuohui48"},"content":"        String[] nameAndDeadline \u003d input.split(\" \", 2)[1].split(\" /by \");","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"zuohui48"},"content":"        if (!checkValidDeadline(input)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"zuohui48"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"zuohui48"},"content":"        String[] deadline \u003d nameAndDeadline[1].split(\" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"zuohui48"},"content":"        if (!isValidDate(deadline[0])) {","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"zuohui48"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"zuohui48"},"content":"        if (deadline.length \u003d\u003d 2 \u0026\u0026 !isValidTime(deadline[1])) {","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"zuohui48"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"zuohui48"},"content":"        return true;","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"zuohui48"},"content":"    public Command parse(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":131,"author":{"gitId":"zuohui48"},"content":"        Command cmd;","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"zuohui48"},"content":"        if (checkList(input)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"zuohui48"},"content":"            cmd \u003d new ListCommand();","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"zuohui48"},"content":"        } else if (checkFind(input)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"zuohui48"},"content":"            String word \u003d input.split(\" \")[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"zuohui48"},"content":"            cmd \u003d new FindCommand(word);","lastModifiedDate":"2023-02-10"},{"lineNumber":137,"author":{"gitId":"zuohui48"},"content":"        } else if (checkMark(input)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":138,"author":{"gitId":"zuohui48"},"content":"            int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-02-10"},{"lineNumber":139,"author":{"gitId":"zuohui48"},"content":"            cmd \u003d new MarkCommand(num);","lastModifiedDate":"2023-02-10"},{"lineNumber":140,"author":{"gitId":"zuohui48"},"content":"        } else if (checkUnmark(input)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":141,"author":{"gitId":"zuohui48"},"content":"            int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-02-10"},{"lineNumber":142,"author":{"gitId":"zuohui48"},"content":"            cmd \u003d new UnmarkCommand(num);","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"zuohui48"},"content":"        } else if (checkDelete(input)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"zuohui48"},"content":"            int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-02-10"},{"lineNumber":145,"author":{"gitId":"zuohui48"},"content":"            cmd \u003d new DeleteCommand(num);","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"zuohui48"},"content":"        } else if (checkTask(input)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"zuohui48"},"content":"            if (!checkValidTask(input)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"zuohui48"},"content":"                cmd \u003d new InvalidCommand(\"Please enter task description!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"zuohui48"},"content":"            } else if (checkDeadline(input) \u0026\u0026 !isValidDeadline(input)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"zuohui48"},"content":"                cmd \u003d new InvalidCommand(\"Format of deadline should be: \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"zuohui48"},"content":"                        \"deadline \u003cdescription\u003e /by: \u003cdd/mm/yyyy hhmm\");","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"zuohui48"},"content":"            } else if (checkEvent(input) \u0026\u0026 !isValidEvent(input)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"zuohui48"},"content":"                cmd \u003d new InvalidCommand(\"Format of event should be: \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"zuohui48"},"content":"                        \"event \u003cdescription\u003e /from: dd/mm/yyyy hhmm /to dd/mm/yyyy hhmm\");","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"zuohui48"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"zuohui48"},"content":"                cmd \u003d new AddCommand(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":157,"author":{"gitId":"zuohui48"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"zuohui48"},"content":"        } else if (!isValidCommand(input)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":159,"author":{"gitId":"zuohui48"},"content":"            cmd \u003d new InvalidCommand();","lastModifiedDate":"2023-02-10"},{"lineNumber":160,"author":{"gitId":"zuohui48"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":161,"author":{"gitId":"zuohui48"},"content":"            cmd \u003d new ByeCommand();","lastModifiedDate":"2023-02-10"},{"lineNumber":162,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":163,"author":{"gitId":"zuohui48"},"content":"        return cmd;","lastModifiedDate":"2023-02-10"},{"lineNumber":164,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":165,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":166,"author":{"gitId":"zuohui48"},"content":"    public Task parseTask(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":167,"author":{"gitId":"zuohui48"},"content":"        Task newTask;","lastModifiedDate":"2023-02-10"},{"lineNumber":168,"author":{"gitId":"zuohui48"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":169,"author":{"gitId":"zuohui48"},"content":"        String type \u003d inputs[0];","lastModifiedDate":"2023-02-10"},{"lineNumber":170,"author":{"gitId":"zuohui48"},"content":"        switch(type) {","lastModifiedDate":"2023-02-10"},{"lineNumber":171,"author":{"gitId":"zuohui48"},"content":"            case \"todo\": {","lastModifiedDate":"2023-02-10"},{"lineNumber":172,"author":{"gitId":"zuohui48"},"content":"                if (inputs.length \u003c 2) {","lastModifiedDate":"2023-02-10"},{"lineNumber":173,"author":{"gitId":"zuohui48"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":174,"author":{"gitId":"zuohui48"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":175,"author":{"gitId":"zuohui48"},"content":"                String name \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":176,"author":{"gitId":"zuohui48"},"content":"                newTask \u003d new ToDo(name);","lastModifiedDate":"2023-02-10"},{"lineNumber":177,"author":{"gitId":"zuohui48"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":178,"author":{"gitId":"zuohui48"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":179,"author":{"gitId":"zuohui48"},"content":"            case \"deadline\": {","lastModifiedDate":"2023-02-10"},{"lineNumber":180,"author":{"gitId":"zuohui48"},"content":"                if (inputs.length \u003c 2) {","lastModifiedDate":"2023-02-10"},{"lineNumber":181,"author":{"gitId":"zuohui48"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":182,"author":{"gitId":"zuohui48"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":183,"author":{"gitId":"zuohui48"},"content":"                String[] nameAndDeadline \u003d input.split(\" \", 2)[1].split(\" /by \");","lastModifiedDate":"2023-02-10"},{"lineNumber":184,"author":{"gitId":"zuohui48"},"content":"                if (nameAndDeadline.length \u003c 2) {","lastModifiedDate":"2023-02-10"},{"lineNumber":185,"author":{"gitId":"zuohui48"},"content":"                    throw new DukeException(\"☹ OOPS!!! The deadline of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":186,"author":{"gitId":"zuohui48"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":187,"author":{"gitId":"zuohui48"},"content":"                String name \u003d nameAndDeadline[0];","lastModifiedDate":"2023-02-10"},{"lineNumber":188,"author":{"gitId":"zuohui48"},"content":"                String[] deadline \u003d nameAndDeadline[1].split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":189,"author":{"gitId":"zuohui48"},"content":"                String[] date \u003d deadline[0].split(\"/\");","lastModifiedDate":"2023-02-10"},{"lineNumber":190,"author":{"gitId":"zuohui48"},"content":"                String remarks \u003d \" | \" + nameAndDeadline[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":191,"author":{"gitId":"zuohui48"},"content":"                for (int i \u003d 0; i \u003c date.length; i++) {","lastModifiedDate":"2023-02-10"},{"lineNumber":192,"author":{"gitId":"zuohui48"},"content":"                    if (date[i].length() \u003c 2) {","lastModifiedDate":"2023-02-10"},{"lineNumber":193,"author":{"gitId":"zuohui48"},"content":"                        date[i] \u003d \"0\" + date[i];","lastModifiedDate":"2023-02-10"},{"lineNumber":194,"author":{"gitId":"zuohui48"},"content":"                    }","lastModifiedDate":"2023-02-10"},{"lineNumber":195,"author":{"gitId":"zuohui48"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":196,"author":{"gitId":"zuohui48"},"content":"                String newDate \u003d date[2] + \"-\" + date[1] + \"-\" + date[0];","lastModifiedDate":"2023-02-10"},{"lineNumber":197,"author":{"gitId":"zuohui48"},"content":"                if (deadline.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-10"},{"lineNumber":198,"author":{"gitId":"zuohui48"},"content":"                    newTask \u003d new Deadline(name, newDate, remarks);","lastModifiedDate":"2023-02-10"},{"lineNumber":199,"author":{"gitId":"zuohui48"},"content":"                } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":200,"author":{"gitId":"zuohui48"},"content":"                    String[] time \u003d deadline[1].split(\"\");","lastModifiedDate":"2023-02-10"},{"lineNumber":201,"author":{"gitId":"zuohui48"},"content":"                    String newTime \u003d time[0] + time[1] + \":\" + time[2] + time[3];","lastModifiedDate":"2023-02-10"},{"lineNumber":202,"author":{"gitId":"zuohui48"},"content":"                    newTask \u003d new Deadline(name, newDate, newTime, remarks);","lastModifiedDate":"2023-02-10"},{"lineNumber":203,"author":{"gitId":"zuohui48"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":204,"author":{"gitId":"zuohui48"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":205,"author":{"gitId":"zuohui48"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":206,"author":{"gitId":"zuohui48"},"content":"            case \"event\": {","lastModifiedDate":"2023-02-10"},{"lineNumber":207,"author":{"gitId":"zuohui48"},"content":"                if (inputs.length \u003c 2) {","lastModifiedDate":"2023-02-10"},{"lineNumber":208,"author":{"gitId":"zuohui48"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":209,"author":{"gitId":"zuohui48"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":210,"author":{"gitId":"zuohui48"},"content":"                String[] nameAndStart \u003d input.split(\" \", 2)[1].split(\" /from \");","lastModifiedDate":"2023-02-10"},{"lineNumber":211,"author":{"gitId":"zuohui48"},"content":"                if (nameAndStart.length \u003c 2) {","lastModifiedDate":"2023-02-10"},{"lineNumber":212,"author":{"gitId":"zuohui48"},"content":"                    throw new DukeException(\"☹ OOPS!!! The start of a event cannot be empty.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":213,"author":{"gitId":"zuohui48"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":214,"author":{"gitId":"zuohui48"},"content":"                String name \u003d nameAndStart[0];","lastModifiedDate":"2023-02-10"},{"lineNumber":215,"author":{"gitId":"zuohui48"},"content":"                String[] startAndEnd \u003d nameAndStart[1].split(\" /to \");","lastModifiedDate":"2023-02-10"},{"lineNumber":216,"author":{"gitId":"zuohui48"},"content":"                if (startAndEnd.length \u003c 2) {","lastModifiedDate":"2023-02-10"},{"lineNumber":217,"author":{"gitId":"zuohui48"},"content":"                    throw new DukeException(\"☹ OOPS!!! The end of a event cannot be empty.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":218,"author":{"gitId":"zuohui48"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":219,"author":{"gitId":"zuohui48"},"content":"                String[] start \u003d startAndEnd[0].split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":220,"author":{"gitId":"zuohui48"},"content":"                String[] startDate \u003d start[0].split(\"/\");","lastModifiedDate":"2023-02-10"},{"lineNumber":221,"author":{"gitId":"zuohui48"},"content":"                String[] end \u003d startAndEnd[1].split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":222,"author":{"gitId":"zuohui48"},"content":"                String[] endDate \u003d end[0].split(\"/\");","lastModifiedDate":"2023-02-10"},{"lineNumber":223,"author":{"gitId":"zuohui48"},"content":"                for (int i \u003d 0; i \u003c startDate.length; i++) {","lastModifiedDate":"2023-02-10"},{"lineNumber":224,"author":{"gitId":"zuohui48"},"content":"                    if (startDate[i].length() \u003c 2) {","lastModifiedDate":"2023-02-10"},{"lineNumber":225,"author":{"gitId":"zuohui48"},"content":"                        startDate[i] \u003d \"0\" + startDate[i];","lastModifiedDate":"2023-02-10"},{"lineNumber":226,"author":{"gitId":"zuohui48"},"content":"                    }","lastModifiedDate":"2023-02-10"},{"lineNumber":227,"author":{"gitId":"zuohui48"},"content":"                    if (endDate[i].length() \u003c 2) {","lastModifiedDate":"2023-02-10"},{"lineNumber":228,"author":{"gitId":"zuohui48"},"content":"                        endDate[i] \u003d \"0\" + endDate[i];","lastModifiedDate":"2023-02-10"},{"lineNumber":229,"author":{"gitId":"zuohui48"},"content":"                    }","lastModifiedDate":"2023-02-10"},{"lineNumber":230,"author":{"gitId":"zuohui48"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":231,"author":{"gitId":"zuohui48"},"content":"                String newStartDate \u003d startDate[2] + \"-\" + startDate[1] + \"-\" + startDate[0];","lastModifiedDate":"2023-02-10"},{"lineNumber":232,"author":{"gitId":"zuohui48"},"content":"                String newEndDate \u003d endDate[2] + \"-\" + endDate[1] + \"-\" + endDate[0];","lastModifiedDate":"2023-02-10"},{"lineNumber":233,"author":{"gitId":"zuohui48"},"content":"                String remarks \u003d \" | \" + startAndEnd[0] + \" | \" + startAndEnd[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":234,"author":{"gitId":"zuohui48"},"content":"                if (start.length \u003e 1) {","lastModifiedDate":"2023-02-10"},{"lineNumber":235,"author":{"gitId":"zuohui48"},"content":"                    String[] startTime \u003d start[1].split(\"\");","lastModifiedDate":"2023-02-10"},{"lineNumber":236,"author":{"gitId":"zuohui48"},"content":"                    String newStartTime \u003d startTime[0] + startTime[1] + \":\" + startTime[2] + startTime[3];","lastModifiedDate":"2023-02-10"},{"lineNumber":237,"author":{"gitId":"zuohui48"},"content":"                    String[] endTime \u003d end[1].split(\"\");","lastModifiedDate":"2023-02-10"},{"lineNumber":238,"author":{"gitId":"zuohui48"},"content":"                    String newEndTime \u003d endTime[0] + endTime[1] + \":\" + endTime[2] + endTime[3];","lastModifiedDate":"2023-02-10"},{"lineNumber":239,"author":{"gitId":"zuohui48"},"content":"                    newTask \u003d new Event(name, newStartDate, newEndDate, newStartTime, newEndTime, remarks);","lastModifiedDate":"2023-02-10"},{"lineNumber":240,"author":{"gitId":"zuohui48"},"content":"                } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":241,"author":{"gitId":"zuohui48"},"content":"                    newTask \u003d new Event(name, newStartDate, newEndDate, remarks);","lastModifiedDate":"2023-02-10"},{"lineNumber":242,"author":{"gitId":"zuohui48"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":243,"author":{"gitId":"zuohui48"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":244,"author":{"gitId":"zuohui48"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":245,"author":{"gitId":"zuohui48"},"content":"            default: {","lastModifiedDate":"2023-02-10"},{"lineNumber":246,"author":{"gitId":"zuohui48"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-10"},{"lineNumber":247,"author":{"gitId":"zuohui48"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":248,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":249,"author":{"gitId":"zuohui48"},"content":"        return newTask;","lastModifiedDate":"2023-02-10"},{"lineNumber":250,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":251,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":252,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"zuohui48":252}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"import java.util.List;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"    private static String path;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"    private static File data;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"    private static File dataFolder;","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"    public Storage(String path, String folderPath) {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"        this.data \u003d new File(path);","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"        this.dataFolder \u003d new File(folderPath);","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"zuohui48"},"content":"    public static TaskList loadData() throws IOException {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"zuohui48"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"zuohui48"},"content":"        if (!dataFolder.exists()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"zuohui48"},"content":"            System.out.println(\"The data folder is not found, creating new data folder\");","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"zuohui48"},"content":"            dataFolder.mkdir();","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"zuohui48"},"content":"            System.out.println(\"Folder created successfully\");","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"zuohui48"},"content":"            File f \u003d new File(dataFolder, \"duke.txt\");","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"zuohui48"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"zuohui48"},"content":"                f.createNewFile();","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"zuohui48"},"content":"                System.out.printf(\"file created successfully\\n\");","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"zuohui48"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"zuohui48"},"content":"                throw new DukeException(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"zuohui48"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"zuohui48"},"content":"        } else if(!data.exists()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"zuohui48"},"content":"            System.out.println(\"file does not exist, creating new file\");","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"zuohui48"},"content":"            File f \u003d new File(dataFolder, \"duke.txt\");","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"zuohui48"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"zuohui48"},"content":"                f.createNewFile();","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"zuohui48"},"content":"                System.out.printf(\"file create successfully\");","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"zuohui48"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"zuohui48"},"content":"                throw new DukeException(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"zuohui48"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"zuohui48"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"zuohui48"},"content":"            List\u003cString\u003e tmp \u003d Files.readAllLines(Paths.get(path), StandardCharsets.UTF_8);","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"zuohui48"},"content":"            Iterator\u003cString\u003e itr \u003d tmp.iterator();","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"zuohui48"},"content":"            Task newTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"zuohui48"},"content":"            while (itr.hasNext()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"zuohui48"},"content":"                String curr \u003d itr.next();","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"zuohui48"},"content":"                String[] currLine \u003d curr.split(\" \\\\| \");","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"zuohui48"},"content":"                String type \u003d currLine[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"zuohui48"},"content":"                String description \u003d currLine[2];","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"zuohui48"},"content":"                switch (type) {","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"zuohui48"},"content":"                    case \"D\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"zuohui48"},"content":"                        String[] deadline \u003d currLine[3].split(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"zuohui48"},"content":"                        String[] date \u003d deadline[0].split(\"/\");","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"zuohui48"},"content":"                        for (int i \u003d 0; i \u003c date.length; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"zuohui48"},"content":"                            if (date[i].length() \u003c 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"zuohui48"},"content":"                                date[i] \u003d \"0\" + date[i];","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"zuohui48"},"content":"                            }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"zuohui48"},"content":"                        }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"zuohui48"},"content":"                        String newDate \u003d date[2] + \"-\" + date[1] + \"-\" + date[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"zuohui48"},"content":"                        String remarks \u003d \" | \" + currLine[3];","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"zuohui48"},"content":"                        if (deadline.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"zuohui48"},"content":"                            newTask \u003d new Deadline(description, newDate, remarks);","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"zuohui48"},"content":"                        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"zuohui48"},"content":"                            String[] time \u003d deadline[1].split(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"zuohui48"},"content":"                            String newTime \u003d time[0] + time[1] + \":\" + time[2] + time[3];","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"zuohui48"},"content":"                            newTask \u003d new Deadline(description, newDate, newTime, remarks);","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"zuohui48"},"content":"                        }","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"zuohui48"},"content":"                        break;","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"zuohui48"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"zuohui48"},"content":"                    case \"E\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"zuohui48"},"content":"                        String[] start \u003d currLine[3].split(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"zuohui48"},"content":"                        String[] end \u003d currLine[4].split(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"zuohui48"},"content":"                        String[] startDate \u003d start[0].split(\"/\");","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"zuohui48"},"content":"                        String[] endDate \u003d end[0].split(\"/\");","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"zuohui48"},"content":"                        for (int i \u003d 0; i \u003c startDate.length; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"zuohui48"},"content":"                            if (startDate[i].length() \u003c 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"zuohui48"},"content":"                                startDate[i] \u003d \"0\" + startDate[i];","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"zuohui48"},"content":"                            }","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"zuohui48"},"content":"                            if (endDate[i].length() \u003c 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"zuohui48"},"content":"                                endDate[i] \u003d \"0\" + endDate[i];","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"zuohui48"},"content":"                            }","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"zuohui48"},"content":"                        }","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"zuohui48"},"content":"                        String newStartDate \u003d startDate[2] + \"-\" + startDate[1] + \"-\" + startDate[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"zuohui48"},"content":"                        String newEndDate \u003d endDate[2] + \"-\" + endDate[1] + \"-\" + endDate[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"zuohui48"},"content":"                        String remarks \u003d \" | \" + currLine[3] + \" | \" + currLine[4];","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"zuohui48"},"content":"                        if (start.length \u003e 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"zuohui48"},"content":"                            String[] startTime \u003d start[1].split(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"zuohui48"},"content":"                            String newStartTime \u003d startTime[0] + startTime[1] + \":\" + startTime[2] + startTime[3];","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"zuohui48"},"content":"                            String[] endTime \u003d end[1].split(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"zuohui48"},"content":"                            String newEndTime \u003d endTime[0] + endTime[1] + \":\" + endTime[2] + endTime[3];","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"zuohui48"},"content":"                            newTask \u003d new Event(description, newStartDate, newEndDate, newStartTime, newEndTime, remarks);","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"zuohui48"},"content":"                        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"zuohui48"},"content":"                            newTask \u003d new Event(description, newStartDate, newEndDate, remarks);","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"zuohui48"},"content":"                        }","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"zuohui48"},"content":"                        break;","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"zuohui48"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"zuohui48"},"content":"                    default: {","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"zuohui48"},"content":"                        newTask \u003d new ToDo(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"zuohui48"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"zuohui48"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"zuohui48"},"content":"                if (currLine[1].equals(\"X\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"zuohui48"},"content":"                    newTask.mark();","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"zuohui48"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"zuohui48"},"content":"                list.addFind(description, newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"zuohui48"},"content":"                list.add(newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"zuohui48"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"zuohui48"},"content":"        return list;","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":122,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"zuohui48"},"content":"    public static void saveData(TaskList list) throws IOException {","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"zuohui48"},"content":"        FileWriter dukeWriter \u003d new FileWriter(path, true);","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"zuohui48"},"content":"        for (Task i : list.getList()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"zuohui48"},"content":"            if (i instanceof ToDo) {","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"zuohui48"},"content":"                dukeWriter.write(\"T | \" + i.getStatusIcon() + \" | \" + i.getDescription() + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"zuohui48"},"content":"            } else if (i instanceof Deadline) {","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"zuohui48"},"content":"                dukeWriter.write(\"D | \" + i.getStatusIcon() + \" | \" + i.getDescription() + i.getRemarks() + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"zuohui48"},"content":"            } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"zuohui48"},"content":"                String[] nameAndStart \u003d i.toString().split(\" \\\\(from: \");","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"zuohui48"},"content":"                dukeWriter.write(\"E | \" + i.getStatusIcon() + \" | \" + i.getDescription() + i.getRemarks() + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"zuohui48"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"zuohui48"},"content":"        dukeWriter.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"zuohui48":137}},{"path":"src/main/java/duke/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":" * Represents list of tasks. A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":" * the list of tasks that the user has recorded","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":" *","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"    private final HashMap\u003cString, HashSet\u003cTask\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"    public void addFind(String description, Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"        String[] words \u003d description.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"zuohui48"},"content":"        for (String word: words) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"zuohui48"},"content":"            if (!map.containsKey(word)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"zuohui48"},"content":"                map.put(word, new HashSet\u003c\u003e());","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"zuohui48"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"zuohui48"},"content":"            map.get(word).add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"zuohui48"},"content":"    public void removeFind(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"zuohui48"},"content":"        for (Map.Entry\u003cString, HashSet\u003cTask\u003e\u003e set : map.entrySet()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"zuohui48"},"content":"            set.getValue().remove(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"zuohui48"},"content":"    ","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"zuohui48"},"content":"    public String find(String word) {","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"zuohui48"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"zuohui48"},"content":"        if (!map.containsKey(word)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"zuohui48"},"content":"            return \"\";","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"zuohui48"},"content":"        for (Task task: map.get(word)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"zuohui48"},"content":"            output +\u003d (task.toString() + \"\\n\");","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"zuohui48"},"content":"        return output;","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"zuohui48"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"zuohui48"},"content":"        return list;","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"zuohui48"},"content":"     * Prints tasks in the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"zuohui48"},"content":"    public String list() {","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"zuohui48"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"zuohui48"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"zuohui48"},"content":"            output +\u003d (i + \": \" + list.get(i - 1) + \"\\n\");","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"zuohui48"},"content":"        return output;","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"zuohui48"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"zuohui48"},"content":"     * @param newTask Task to be added.","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"zuohui48"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"zuohui48"},"content":"        list.add(newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"zuohui48"},"content":"     * Converts a string into a task and adds it to the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"zuohui48"},"content":"     * @param input String to be converted to task, then added to task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"zuohui48"},"content":"    public void add(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"zuohui48"},"content":"        Task newTask \u003d parser.parseTask(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"zuohui48"},"content":"        addFind(newTask.getDescription(), newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"zuohui48"},"content":"        list.add(newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"zuohui48"},"content":"     * Deletes the task from task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"zuohui48"},"content":"     * @param num Index of the task to be deleted.","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"zuohui48"},"content":"    public void delete(int num) {","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"zuohui48"},"content":"        list.remove(num - 1);","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"zuohui48"},"content":"     * Marks the task in task list as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"zuohui48"},"content":"     * @param num Index of the task to be marked as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"zuohui48"},"content":"    public void mark(int num) {","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"zuohui48"},"content":"        list.get(num - 1).mark();","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"zuohui48"},"content":"     * Marks the task in task list as undone.","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"zuohui48"},"content":"     * @param num Index of the task to be marked as undone.","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"zuohui48"},"content":"    public void unmark(int num) {","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"zuohui48"},"content":"        list.get(num - 1).unmark();","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"zuohui48"},"content":"     * Returns the number of tasks in task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"zuohui48"},"content":"     * @return Size of task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"zuohui48"},"content":"    public int size() {","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"zuohui48"},"content":"        return list.size();","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"zuohui48"},"content":"     * Returns the task with the specified index in task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"zuohui48"},"content":"     * @param num Index of the task to be returned.","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"zuohui48"},"content":"     * @return Task at index num.","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"zuohui48"},"content":"    public Task get(int num) {","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"zuohui48"},"content":"        return list.get(num - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"zuohui48"},"content":"     * Returns the last task in task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"zuohui48"},"content":"     * @return Task at end of task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"zuohui48"},"content":"    public Task getLast() {","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"zuohui48"},"content":"        return list.get(list.size() - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"zuohui48"},"content":"    public boolean isDuplicate(String task) {","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"zuohui48"},"content":"        Task newTask \u003d parser.parseTask(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":145,"author":{"gitId":"zuohui48"},"content":"        for (Task t: list) {","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"zuohui48"},"content":"            if (t.equals(newTask)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"zuohui48"},"content":"                return true;","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"zuohui48"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"zuohui48"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":150,"author":{"gitId":"zuohui48"},"content":"        return false;","lastModifiedDate":"2023-02-10"},{"lineNumber":151,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"zuohui48":152}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"    protected String date;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"    protected LocalTime time \u003d LocalTime.of(23,59);","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"    public Deadline(String description, String date, String remarks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"        super(description, remarks);","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"        LocalDate d \u003d LocalDate.parse(date);","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"        this.date \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"    public Deadline(String description, String date, String time, String remarks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"        this(description, date, remarks);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"        this.time \u003d LocalTime.parse(time);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \" \" + time + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"zuohui48":26}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":" * Represents a task of type event. An \u003ccode\u003eEvent\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":" * a task that has a start time and an end time.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"    protected String start;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"    protected LocalTime startTime \u003d LocalTime.of(0,0);","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"    protected String end;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    protected LocalTime endTime \u003d LocalTime.of(23,59);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"     * Returns a Event object.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"     * @param start Start date of the Event.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"     * @param end End date of the Event.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"     * @param remarks Remarks of the Event.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"     * @return Event that starts at start 00:00 and ends at end 23:59.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"    public Event(String description, String start, String end, String remarks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"        super(description, remarks);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"zuohui48"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"zuohui48"},"content":"        LocalDate s \u003d LocalDate.parse(start);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"zuohui48"},"content":"        this.start \u003d s.format(dtf);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"zuohui48"},"content":"        LocalDate e \u003d LocalDate.parse(end);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"zuohui48"},"content":"        this.end \u003d e.format(dtf);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"zuohui48"},"content":"     * Returns a Event object.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"zuohui48"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"zuohui48"},"content":"     * @param start Start date of the Event.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"zuohui48"},"content":"     * @param end End date of the Event.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"zuohui48"},"content":"     * @param startTime Start time of the Event.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"zuohui48"},"content":"     * @param endTime End time of the Event.","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"zuohui48"},"content":"     * @param remarks Remarks of the Event.","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"zuohui48"},"content":"     * @return Event that starts at start 00:00 and ends at end 23:59.","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"zuohui48"},"content":"    public Event(String description, String start, String end, String startTime, String endTime, String remarks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"zuohui48"},"content":"        this(description, start, end, remarks);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"zuohui48"},"content":"        this.startTime \u003d LocalTime.parse(startTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"zuohui48"},"content":"        this.endTime \u003d LocalTime.parse(endTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"zuohui48"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"zuohui48"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" \" + startTime + \" to: \" + end + \" \" + endTime + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"zuohui48":58}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":" * Represents an action that is to be done. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":" * the action that is to be done by the user e.g., \u003ccode\u003e\"cook dinner\"\u003c/code\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"public class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"    protected String description;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"    protected String remarks;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"        this.remarks \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"    public Task(String description, String remarks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"        this(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"    public void mark() {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"zuohui48"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"zuohui48"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"zuohui48"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"zuohui48"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"zuohui48"},"content":"     * @return Description.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"zuohui48"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"zuohui48"},"content":"        return description.trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"zuohui48"},"content":"     * Returns status icon of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"zuohui48"},"content":"     * @return Status icon.","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"zuohui48"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"zuohui48"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"zuohui48"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"zuohui48"},"content":"     * Returns the remarks of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"zuohui48"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"zuohui48"},"content":"     * @return Remarks.","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"zuohui48"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"zuohui48"},"content":"    public String getRemarks() {","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"zuohui48"},"content":"        return remarks.trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"zuohui48"},"content":"    public boolean equals(Task task) {","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"zuohui48"},"content":"        return (task.getDescription().equals(this.getDescription()) \u0026\u0026 task.getRemarks().equals(this.getRemarks()));","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"zuohui48"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"zuohui48"},"content":"        return (\"[\" + getStatusIcon() + \"] \" + description);","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"zuohui48":73}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"zuohui48":12}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package duke.ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"    public String printInvalidCommandMessage() {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"        return (\"Sorry, I don\u0027t know what that means! :\u0027( \\n\");","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"    public String printWelcomeMessage() {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"        return (\"Hello!\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"    public String showLine() {","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"        return (\"----------------------------------\");","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"    public String printFindMessage() {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"        return (\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"    public String printListMessage() {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"        return (\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"    public String printAddMessage(Task newTask, TaskList list) {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\" + newTask + \"\\nNow you have \"","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"                + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"zuohui48"},"content":"    public String printMarkMessage(Task task) {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"zuohui48"},"content":"        return (\"Nice! I\u0027ve marked this task as done: \\n\" + task);","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"zuohui48"},"content":"    public String printUnmarkMessage(Task task) {","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"zuohui48"},"content":"        return (\"OK, I\u0027ve marked this task as not done yet: \\n\" + task);","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"zuohui48"},"content":"    public String printDeleteMessage(Task removed, TaskList list) {","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"zuohui48"},"content":"        return (\"Noted. I\u0027ve removed this task: \\n\" + removed + \"\\nNow you have \"","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"zuohui48"},"content":"                + (list.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"zuohui48"},"content":"    public String printByeMessage() {","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"zuohui48"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"zuohui48"},"content":"    public String printDuplicateTaskMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"zuohui48"},"content":"        return (\"Oops, this task already exist!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"zuohui48"},"content":"    public String printOutOfBoundsMessage(TaskList list) {","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"zuohui48"},"content":"        return (\"There are \" + list.size() + \" tasks in the list, please choose \" +","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"zuohui48"},"content":"                \"a number from 1 to \" + list.size() + \"!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"zuohui48":56}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"zuohui48":19}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"public class EventTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    public void testEventString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"        Event event \u003d new Event(\"project meeting\", \"2023-06-12\", \"2023-07-12\", \" | 12/06/2023 | 12/06/2023\");","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"        String expected \u003d \"[E][ ] project meeting (from: Jun 12 2023 00:00 to: Jul 12 2023 23:59)\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    public void testEventDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"        Event event \u003d new Event(\"project meeting\", \"2023-06-12\", \"2023-07-12\", \" | 12/06/2023 | 12/06/2023\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"        String expected \u003d \"project meeting\";","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"        assertEquals(expected, event.getDescription());","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"    public void testEventRemarks() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"        Event event \u003d new Event(\"project meeting\", \"2023-06-12\", \"2023-07-12\", \" | 12/06/2023 | 12/06/2023\");","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"        String expected \u003d \" | 12/06/2023 | 12/06/2023\";","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"        assertEquals(expected, event.getRemarks());","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"zuohui48":28}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"zuohui48"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"zuohui48"},"content":"    public void testTaskString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"zuohui48"},"content":"        Task task \u003d new Task(\"test\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"zuohui48"},"content":"        String expected \u003d \"[ ] test\";","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"zuohui48"},"content":"        assertEquals(expected, task.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"zuohui48"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"zuohui48"},"content":"    public void testTaskRemarks() {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"        Task task \u003d new Task(\"test\", \"\");","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"zuohui48"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zuohui48"},"content":"        assertEquals(expected, task.getRemarks());","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"zuohui48"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"zuohui48"},"content":"    public void testTaskDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"zuohui48"},"content":"        Task task \u003d new Task(\"test\");","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zuohui48"},"content":"        String expected \u003d \"test\";","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"zuohui48"},"content":"        assertEquals(expected, task.getDescription());","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"zuohui48"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"zuohui48"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"zuohui48":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zuohui48"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"zuohui48"},"content":"deadline return book by/ Sunday","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"zuohui48"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"zuohui48"},"content":"mark 4","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"zuohui48"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"zuohui48"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"zuohui48"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"zuohui48"},"content":"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"zuohui48":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zuohui48"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"zuohui48":1}}]
