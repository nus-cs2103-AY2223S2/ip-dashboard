[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"    private String endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"    public Deadline(String description, String endDate) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"        return \"[\" + TaskType.D + \"]\" + super.toString() + \" (by: \" + this.endDate + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"        printTextWithLines(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"        while (true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"            reply \u003d input.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"                if (reply.equals(\"bye\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"                    printTextWithLines(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"                } else if (reply.equals(\"list\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"                    printTextWithLines(taskList.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"                } else if (reply.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"                    Pattern pattern \u003d Pattern.compile(\"mark (.*)\");","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"                    Matcher matcher \u003d pattern.matcher(reply);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"                    if (matcher.find() \u0026\u0026 matcher.group(1).length() \u003e 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"                        int taskNumber \u003d Integer.parseInt(matcher.group(1));","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"                        taskList.setDone(taskNumber, true);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"                        printTextWithLines(\"Nice! I\u0027ve marked this task as done:\\n  \" + taskList.getTask(taskNumber));","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"                    } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"                        throw new InvalidCommandException(\"The task number of a mark command cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"                } else if (reply.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"                    Pattern pattern \u003d Pattern.compile(\"unmark (.*)\");","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"                    Matcher matcher \u003d pattern.matcher(reply);","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"                    if (matcher.find() \u0026\u0026 matcher.group(1).length() \u003e 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"                        int taskNumber \u003d Integer.parseInt(matcher.group(1));","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"                        taskList.setDone(taskNumber, true);","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"                        printTextWithLines(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + taskList.getTask(taskNumber));","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"                    } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"                        throw new InvalidCommandException(\"The task number of an unmark command cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"                } else if (reply.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"                    Pattern pattern \u003d Pattern.compile(\"delete (.*)\");","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"                    Matcher matcher \u003d pattern.matcher(reply);","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"                    if (matcher.find() \u0026\u0026 matcher.group(1).length() \u003e 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"                        int taskNumber \u003d Integer.parseInt(matcher.group(1));","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"                        String taskDescription \u003d taskList.getTask(taskNumber).toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"                        taskList.deleteTask(taskNumber);","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"                        printTextWithLines(\"Noted. I\u0027ve removed this task:\\n  \" + taskDescription + \"\\n\" + taskList.describeLength());","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"                    } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"                        throw new InvalidCommandException(\"The task number to be deleted must be specified, and must be an integer.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"                } else if (reply.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"                    Pattern pattern \u003d Pattern.compile(\"todo (.*)\");","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"                    Matcher matcher \u003d pattern.matcher(reply);","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"                    if (matcher.find() \u0026\u0026 matcher.group(1).length() \u003e 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"                        Task task \u003d new ToDo(matcher.group(1));","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"                        taskList.addTask(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"                        printTextWithLines(\"Got it. I\u0027ve added this task:\\n  \" + task + \"\\n\" + taskList.describeLength());","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"                    } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"                        throw new InvalidCommandException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"                } else if (reply.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"                    Pattern pattern \u003d Pattern.compile(\"deadline (.*) /by (.*)\");","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"                    Matcher matcher \u003d pattern.matcher(reply);","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"                    if (matcher.find() \u0026\u0026 matcher.group(1).length() \u003e 0 \u0026\u0026 matcher.group(2).length() \u003e 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"                        Task task \u003d new Deadline(matcher.group(1), matcher.group(2));","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"                        taskList.addTask(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"                        printTextWithLines(\"Got it. I\u0027ve added this task:\\n  \" + task + \"\\n\" + taskList.describeLength());","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"                    } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"                        throw new InvalidCommandException(\"The end date of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"                } else if (reply.startsWith(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"                    Pattern pattern \u003d Pattern.compile(\"event (.*) /from (.*) /to (.*)\");","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"                    Matcher matcher \u003d pattern.matcher(reply);","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"                    if (matcher.find() \u0026\u0026 matcher.group(1).length() \u003e 0 \u0026\u0026 matcher.group(2).length() \u003e 0 \u0026\u0026 matcher.group(3).length() \u003e 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"                        Task task \u003d new Event(matcher.group(1), matcher.group(2), matcher.group(3));","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"                        taskList.addTask(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"                        printTextWithLines(\"Got it. I\u0027ve added this task:\\n  \" + task + \"\\n\" + taskList.describeLength());","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"                    } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"                        throw new InvalidCommandException(\"An event must have a nonempty from date and a to date.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"                } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"                    throw new UnknownCommandException();","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"                printTextWithLines(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"    static void printTextWithLines(String text) {","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"        printLineBreak();","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"        System.out.println(text);","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"        printLineBreak();","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"        System.out.println();","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"    static void printLineBreak() {","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"        System.out.println(\"_________________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zxisatree":96,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"    public DukeException(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"    private String startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"    private String endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"        return \"[\" + TaskType.E + \"]\" + super.toString() + \" (from: \" + this.startDate + \" to: \" + this.endDate + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":14}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"    public InvalidCommandException(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"        super(\"☹ OOPS!!! \" + description);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":22}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"public class TaskList {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"    // taskList is 1 indexed","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"    public Task getTask(int taskNumber) throws TaskNotFoundException {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"        if (taskNumber - 1 \u003e\u003d getLength()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"        return taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"    public int getLength() {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    public void deleteTask(int taskNumber) throws TaskNotFoundException {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        if (taskNumber - 1 \u003e\u003d getLength()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"        this.taskList.remove(taskNumber - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    public void setDone(int taskNumber, boolean done) throws TaskNotFoundException {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"        if (taskNumber - 1 \u003e\u003d getLength()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        taskList.get(taskNumber - 1).setDone(done);","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"    public String describeLength() {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"        return \"Now you have \" + this.getLength() + \" tasks in the list.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"        if (getLength() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"            return \"No tasks found.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"        for (int i \u003d 0; i \u003c getLength(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"            result.append(i + 1).append(\".\").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"        if (result.length() \u003e 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"            result.deleteCharAt(result.length() - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"        return result.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":59}},{"path":"src/main/java/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"public class TaskNotFoundException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"        super(\"☹ OOPS!!! The requested task was not found in the task list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":5}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"public enum TaskType {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"    T,","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"    D,","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"    E","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":5}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"        return \"[\" + TaskType.T + \"]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":10}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"deadline fail /by","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"event","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"event fail /from","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"event fail /from 1 /to","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"mark","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"unmark","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":18}}]
