[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"checkstyle {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zxisatree":23,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"Duke is a desktop app for managing tasks, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Duke can get your task management done faster than traditional GUI apps.","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"- Quick start","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"- Features","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"- Usage","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"  - Listing all tasks: `list`","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"  - Adding a todo: `todo`","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"  - Adding a deadline: `deadline`","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"  - Adding an event: `event`","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"  - Marking a task as done: `mark`","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"  - Marking a task as undone: `unmark`","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"  - Locating tasks by description: `find`","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"  - Deleting a task: `delete`","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"  - Exiting the program: `bye`","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"## Quick start","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"2. Download the lastest `duke.jar` from [here](https://github.com/zxisatree/ip/releases).","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"3. Copy the file to the folder you want to use as the home folder for your task management.","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"4. Open a command terminal in the folder you put the jar file in, then run `java -jar duke.jar` to start the application. A GUI should appear in a few seconds.","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"5. Type the command in the text box and press Enter or click on the \"Send\" button to execute it.","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"### Add tasks with deadlines or timed events","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"Duke can manage various types of tasks for you, including simple tasks with descriptions, tasks with deadlines as well as events that happen only within a certain time frame.","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"### Give tasks priority","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"Tasks can have priority levels, so that you can track what needs to be done right now, and what can be done later.","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"### Mark tasks as complete or incomplete","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"Tasks can be marked as complete, so that you know what tasks you have yet to do.","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"### View all tasks at a glance","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"Duke provides a command (`list`) to view all your tasks in a simple and readable list.","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"### Delete tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"Tasks can be easily deleted via the command line.","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user. e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter that can be anything the user wants like `todo Read a book`.","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"- For date time commands, `DD` refers to the date of the month in 2 digits (so the first day of the month will be `01`), `MM` refers to the month in 2 digits, `YYYY` refers to the year in 4 digits, `HH` refers to the hour of the day in 2 digits (so 1a.m. is 01 and 3p.m. is 15) and `mm` refers to the current minute in 2 digits.","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"- Commands with `INDEX` parameters should have positive integers used as the `INDEX`. Indexes start at 1 and are the same as the numbers on the list when the `list` command is used.","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"Shows a list of all tasks in your task list.","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"Format:","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"`list`","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"Duke replies with your task list.","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"1.[T][ ][1] hi","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"2.[D][ ][8] read book /by Jan 22 2023, 16:00","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"3.[E][ ][5] swim /from Jan 24 2023, 09:15 /to Jan 24 2023, 11:00","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"Format:","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"`todo DESCRIPTION /prio PRIORITY_NUMBER`","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"Example usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"`todo TP UG /prio 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"A todo task with a description of \"TP UG\" and a priority of \"1\" is added to the task list.","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"  [T][ ][1] TP UG","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"Adds a deadline task to the task list.","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"Format:","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"`deadline DESCRIPTION /by DEADLINE /prio PRIORITY_NUMBER`","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"where `DEADLINE` is of the format `DD-MM-YYYY HH:mm`.","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"Example usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"zxisatree"},"content":"`deadline Read book /by 22-01-2023 16:00 /prio 2`","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"zxisatree"},"content":"A deadline task with a description of \"Read book\", a deadline of \"January 22, 2023, 4p.m.\" and a priority of \"2\" is added to the task list.","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"  [D][ ][2] Read book (by: Jan 22 2023, 16:00)","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"zxisatree"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"zxisatree"},"content":"### Adding an event: `event`","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"zxisatree"},"content":"Adds an event task to the task list.","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"zxisatree"},"content":"Format:","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"zxisatree"},"content":"`event DESCRIPTION /from START_TIME /to END_TIME /prio PRIORITY_NUMBER`","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"zxisatree"},"content":"where both `START_TIME` and `END_TIME` are of the format `DD-MM-YYYY HH:mm`.","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"zxisatree"},"content":"Example usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"zxisatree"},"content":"`event Swim /from 24-01-2023 09:15 /to 24-01-2023 11:00 /prio 3`","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"zxisatree"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"zxisatree"},"content":"An event task with a description of \"Swim\", a starting time of \"January 24, 2023, 9.15a.m.\", a ending time of \"January 24, 2023, 11a.m.\" and a priority of \"3\" is added to the task list.","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"zxisatree"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"zxisatree"},"content":"  [E][ ][3] Swim (from: Jan 24 2023, 09:15 to: Jan 24 2023, 11:00)","lastModifiedDate":"2023-02-15"},{"lineNumber":131,"author":{"gitId":"zxisatree"},"content":"Now you have 7 tasks in the list.","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":133,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":134,"author":{"gitId":"zxisatree"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2023-02-15"},{"lineNumber":135,"author":{"gitId":"zxisatree"},"content":"Marks a task at the given index as complete.","lastModifiedDate":"2023-02-15"},{"lineNumber":136,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"zxisatree"},"content":"Format:","lastModifiedDate":"2023-02-15"},{"lineNumber":138,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"zxisatree"},"content":"`mark INDEX`","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":141,"author":{"gitId":"zxisatree"},"content":"Example usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":142,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":143,"author":{"gitId":"zxisatree"},"content":"`mark 2`","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":145,"author":{"gitId":"zxisatree"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"zxisatree"},"content":"The task at the given index will be marked as complete.","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":150,"author":{"gitId":"zxisatree"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"zxisatree"},"content":"  [E][X][3] Swim (from: Jan 24 2023, 09:15 to: Jan 24 2023, 11:00)","lastModifiedDate":"2023-02-15"},{"lineNumber":152,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":154,"author":{"gitId":"zxisatree"},"content":"### Marking a task as undone: `unmark`","lastModifiedDate":"2023-02-15"},{"lineNumber":155,"author":{"gitId":"zxisatree"},"content":"Marks a task at the given index as incomplete.","lastModifiedDate":"2023-02-15"},{"lineNumber":156,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"zxisatree"},"content":"Format:","lastModifiedDate":"2023-02-15"},{"lineNumber":158,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":159,"author":{"gitId":"zxisatree"},"content":"`unmark INDEX`","lastModifiedDate":"2023-02-15"},{"lineNumber":160,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":161,"author":{"gitId":"zxisatree"},"content":"Example usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":162,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":163,"author":{"gitId":"zxisatree"},"content":"`unmark 2`","lastModifiedDate":"2023-02-15"},{"lineNumber":164,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":165,"author":{"gitId":"zxisatree"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":166,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":167,"author":{"gitId":"zxisatree"},"content":"The task at the given index will be marked as incomplete.","lastModifiedDate":"2023-02-15"},{"lineNumber":168,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":169,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":170,"author":{"gitId":"zxisatree"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-15"},{"lineNumber":171,"author":{"gitId":"zxisatree"},"content":"  [E][ ][3] Swim (from: Jan 24 2023, 09:15 to: Jan 24 2023, 11:00)","lastModifiedDate":"2023-02-15"},{"lineNumber":172,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":173,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":174,"author":{"gitId":"zxisatree"},"content":"### Locating tasks by description: `find`","lastModifiedDate":"2023-02-15"},{"lineNumber":175,"author":{"gitId":"zxisatree"},"content":"Find a task based on the given search string. All tasks that have a description containing the given input will be shown.","lastModifiedDate":"2023-02-15"},{"lineNumber":176,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":177,"author":{"gitId":"zxisatree"},"content":"Format:","lastModifiedDate":"2023-02-15"},{"lineNumber":178,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":179,"author":{"gitId":"zxisatree"},"content":"`find SEARCH_STRING`","lastModifiedDate":"2023-02-15"},{"lineNumber":180,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":181,"author":{"gitId":"zxisatree"},"content":"Example usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":182,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":183,"author":{"gitId":"zxisatree"},"content":"`find IP`","lastModifiedDate":"2023-02-15"},{"lineNumber":184,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":185,"author":{"gitId":"zxisatree"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":186,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":187,"author":{"gitId":"zxisatree"},"content":"A list of all tasks that have a description containing the given input will be shown.","lastModifiedDate":"2023-02-15"},{"lineNumber":188,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":189,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":190,"author":{"gitId":"zxisatree"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-15"},{"lineNumber":191,"author":{"gitId":"zxisatree"},"content":"1.[T][ ][1] IP UG","lastModifiedDate":"2023-02-15"},{"lineNumber":192,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":193,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":194,"author":{"gitId":"zxisatree"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-02-15"},{"lineNumber":195,"author":{"gitId":"zxisatree"},"content":"Deletes the task at the given index.","lastModifiedDate":"2023-02-15"},{"lineNumber":196,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":197,"author":{"gitId":"zxisatree"},"content":"Format:","lastModifiedDate":"2023-02-15"},{"lineNumber":198,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":199,"author":{"gitId":"zxisatree"},"content":"`delete INDEX`","lastModifiedDate":"2023-02-15"},{"lineNumber":200,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":201,"author":{"gitId":"zxisatree"},"content":"Example usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":202,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":203,"author":{"gitId":"zxisatree"},"content":"`delete 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":204,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":205,"author":{"gitId":"zxisatree"},"content":"Expected outcome:","lastModifiedDate":"2023-02-15"},{"lineNumber":206,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":207,"author":{"gitId":"zxisatree"},"content":"The task at the given index is deleted.","lastModifiedDate":"2023-02-15"},{"lineNumber":208,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":209,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":210,"author":{"gitId":"zxisatree"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-15"},{"lineNumber":211,"author":{"gitId":"zxisatree"},"content":"  [T][ ][1] TP UG","lastModifiedDate":"2023-02-15"},{"lineNumber":212,"author":{"gitId":"zxisatree"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2023-02-15"},{"lineNumber":213,"author":{"gitId":"zxisatree"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":215,"author":{"gitId":"zxisatree"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2023-02-15"},{"lineNumber":216,"author":{"gitId":"zxisatree"},"content":"Exits the program gracefully. Closes the app after 1 second.","lastModifiedDate":"2023-02-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":218,"author":{"gitId":"zxisatree"},"content":"Format:","lastModifiedDate":"2023-02-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":220,"author":{"gitId":"zxisatree"},"content":"`bye`","lastModifiedDate":"2023-02-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":224,"author":{"gitId":"zxisatree"},"content":"The chatbot exits after 1 second.","lastModifiedDate":"2023-02-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":227,"author":{"gitId":"zxisatree"},"content":"\"Bye. Hope to see you again soon!\"","lastModifiedDate":"2023-02-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"zxisatree":198,"-":30}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":" * A custom control using FXML.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"     * Creates a new dialog box representing the user.","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"     * @param text Text to be displayed in the dialog box.","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"     * @param img  Image of the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"     * @return A new dialog box representing the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"     * Creates a new dialog box representing the Duke chatbot.","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"     * @param text Text to be displayed in the dialog box.","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"     * @param img  Image of the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"     * @return A new dialog box representing a message sent by the chatbot.","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"        db.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zxisatree":75}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import tasks.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":" * The main class, includes logic to run the chatbot.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"     * Constructs a new chatbot.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"     * @param dataFilePath Path to store the task list text file.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    public Duke(String dataFilePath) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"        assert dataFilePath !\u003d null \u0026\u0026 !dataFilePath.equals(\"\") : \"dataFilePath is null or empty\";","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        storage \u003d new Storage(dataFilePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"            System.out.println(ui.getLoadingError());","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"    private String handleByeCommand() {","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"        return ui.getGoodbyeMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"    private String handleListCommand() {","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"        return tasks.toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"    private String handleMarkCommand(String taskIndex) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"        int taskNumber \u003d Integer.parseInt(taskIndex);","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"        tasks.setDone(taskNumber, true);","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"        Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"        return ui.getMarkTaskMessage(task);","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"    private String handleUnmarkCommand(String taskIndex) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"        int taskNumber \u003d Integer.parseInt(taskIndex);","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"        tasks.setDone(taskNumber, false);","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"        Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"        return ui.getUnmarkTaskMessage(task);","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"    private String handleDeleteCommand(String taskIndex) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"        int taskNumber \u003d Integer.parseInt(taskIndex);","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"        Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"        tasks.deleteTask(taskNumber);","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"        return ui.getDeleteTaskMessage(task, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"    private String handleFindCommand(String searchString) {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"        return ui.getFindTaskMessage(tasks.findTasks(searchString));","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"    private String handleTodoCommand(String priorityStr, String description) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"        int priority \u003d Integer.parseInt(priorityStr);","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"        if (priority \u003c\u003d 0) {","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"            throw new InvalidCommandException(\"Priority must be a positive integer.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"        Task task \u003d new ToDo(description, priority);","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"        return ui.getAddTaskMessage(task, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"    private String handleDeadlineCommand(String priorityStr, String description, String deadline) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"        int priority \u003d Integer.parseInt(priorityStr);","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"        if (priority \u003c\u003d 0) {","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"            throw new InvalidCommandException(\"Priority must be a positive integer.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"        Task task \u003d new Deadline(description, priority, Parser.parseDate(deadline, false));","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"        return ui.getAddTaskMessage(task, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"    private String handleEventCommand(String priorityStr, String description, String startTime, String endTime)","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"            throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"        int priority \u003d Integer.parseInt(priorityStr);","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"        if (priority \u003c\u003d 0) {","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"            throw new InvalidCommandException(\"Priority must be a positive integer.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"        Task task \u003d new Event(description, priority, Parser.parseDate(startTime, false),","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"            Parser.parseDate(endTime, false));","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"        return ui.getAddTaskMessage(task, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"     * Responds to a given input message.","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"zxisatree"},"content":"     * @param input The input message.","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"zxisatree"},"content":"     * @return An appropriate response.","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"zxisatree"},"content":"            String[] parsedCommand \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"zxisatree"},"content":"            String command \u003d parsedCommand[0];","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"zxisatree"},"content":"            String response;","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"zxisatree"},"content":"            switch (command) {","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"zxisatree"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"zxisatree"},"content":"                response \u003d handleByeCommand();","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"zxisatree"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"zxisatree"},"content":"            case \"list\":","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"zxisatree"},"content":"                response \u003d handleListCommand();","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"zxisatree"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"zxisatree"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"zxisatree"},"content":"                response \u003d handleMarkCommand(parsedCommand[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"zxisatree"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"zxisatree"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"zxisatree"},"content":"                response \u003d handleUnmarkCommand(parsedCommand[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"zxisatree"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":125,"author":{"gitId":"zxisatree"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"zxisatree"},"content":"                response \u003d handleDeleteCommand(parsedCommand[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"zxisatree"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":128,"author":{"gitId":"zxisatree"},"content":"            case \"find\":","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"zxisatree"},"content":"                response \u003d handleFindCommand(parsedCommand[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"zxisatree"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":131,"author":{"gitId":"zxisatree"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"zxisatree"},"content":"                response \u003d handleTodoCommand(parsedCommand[2], parsedCommand[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":133,"author":{"gitId":"zxisatree"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":134,"author":{"gitId":"zxisatree"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"zxisatree"},"content":"                response \u003d handleDeadlineCommand(parsedCommand[2], parsedCommand[1], parsedCommand[3]);","lastModifiedDate":"2023-02-15"},{"lineNumber":136,"author":{"gitId":"zxisatree"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":137,"author":{"gitId":"zxisatree"},"content":"            case \"event\":","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"zxisatree"},"content":"                response \u003d handleEventCommand(parsedCommand[2], parsedCommand[1], parsedCommand[3], parsedCommand[4]);","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"zxisatree"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":140,"author":{"gitId":"zxisatree"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"zxisatree"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":144,"author":{"gitId":"zxisatree"},"content":"            // After each command, save the current task list to the file","lastModifiedDate":"2023-02-06"},{"lineNumber":145,"author":{"gitId":"zxisatree"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":146,"author":{"gitId":"zxisatree"},"content":"            return response;","lastModifiedDate":"2023-02-06"},{"lineNumber":147,"author":{"gitId":"zxisatree"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":148,"author":{"gitId":"zxisatree"},"content":"            return ui.getErrorMessage(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"zxisatree"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"zxisatree"},"content":"            return ui.getErrorMessage(e.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":151,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zxisatree":150,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zxisatree":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    private final Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"            stage.show();","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zxisatree":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"        Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    private final Image dukeImage \u003d new Image(","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"        Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"            DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"        if (input.equals(Parser.getByeInput())) {","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"            PauseTransition exit \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"            exit.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"            exit.play();","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zxisatree":64}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import exceptions.InvalidDataFileException;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":" * Parses user commands and commands inputted through the data file stored in memory.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"     * Returns the input corresponding to the input required to request to close the application.","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"     * @return The input that will close the application.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    public static String getByeInput() {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"        String byeInput \u003d \"bye\";","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"        return byeInput;","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"     * Parses a string input by the user into an array of each segment of the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"     * @param toParse String input by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"     * @return Array of each segment of the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"     * @throws DukeException if the command given is invalid or not a command known by the chatbot.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    public static String[] parseCommand(String toParse) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"        if (toParse.equals(Parser.getByeInput())) {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"            return new String[] {\"bye\"};","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"        } else if (toParse.equals(\"list\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"            return new String[] {\"list\"};","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"        } else if (toParse.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"            Matcher matcher \u003d compileAndMatch(\"mark (.*)\", toParse);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"            checkForMatch(matcher, 1, \"The task number of a mark command cannot be empty.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"            return new String[] {\"mark\", matcher.group(1)};","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"        } else if (toParse.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"            Matcher matcher \u003d compileAndMatch(\"unmark (.*)\", toParse);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"            checkForMatch(matcher, 1, \"The task number of an unmark command cannot be empty.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"            return new String[] {\"unmark\", matcher.group(1)};","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"        } else if (toParse.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"            Matcher matcher \u003d compileAndMatch(\"delete (.*)\", toParse);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"            checkForMatch(matcher, 1, \"The task number to be deleted must be specified, and must be an integer.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"            return new String[] {\"delete\", matcher.group(1)};","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"        } else if (toParse.startsWith(\"find\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"            Matcher matcher \u003d compileAndMatch(\"find (.*)\", toParse);","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"            checkForMatch(matcher, 1, \"Must supply a search string to the find command.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"            return new String[] {\"find\", matcher.group(1)};","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"        } else if (toParse.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"            Matcher matcher \u003d compileAndMatch(\"todo (.*) /prio (\\\\d+)\", toParse);","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"            checkForMatch(matcher, 2,","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"                \"The description of a todo cannot be empty, and the priority must be a positive integer.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"            return new String[] {\"todo\", matcher.group(1), matcher.group(2)};","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"        } else if (toParse.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"            Matcher matcher \u003d compileAndMatch(\"deadline (.*) /by (.*) /prio (\\\\d+)\", toParse);","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"            checkForMatch(matcher, 3,","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"                \"The end date of a deadline cannot be empty, and the priority must be a positive integer.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"            return new String[] {\"deadline\", matcher.group(1), matcher.group(3), matcher.group(2)};","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"        } else if (toParse.startsWith(\"event\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"            Matcher matcher \u003d compileAndMatch(\"event (.*) /from (.*) /to (.*) /prio (\\\\d+)\", toParse);","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"            checkForMatch(matcher, 4,","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"                \"An event must have a nonempty from date and to date, and the priority must be a positive integer.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"            return new String[] {\"event\", matcher.group(1), matcher.group(4), matcher.group(2), matcher.group(3)};","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"     * Checks if the given matcher found a match with the correct number of groups.","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"     * @param matcher            Matcher containing the regex and the string to be matched with.","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"     * @param expectedGroupCount Number of groups that should be matched.","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"     * @param errorMessage       Description of the error that is indicated by a failed match.","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"     * @throws DukeException if the actual number of groups matched is not the same as expected.","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"    private static void checkForMatch(Matcher matcher, int expectedGroupCount, String errorMessage)","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"            throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"            throw new InvalidCommandException(errorMessage);","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"            // Ignore the first group which is the entire matched string","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"            for (int i \u003d 1; i \u003c expectedGroupCount + 1; i++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"                if (matcher.group(i).length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"                    throw new InvalidCommandException(errorMessage);","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"            throw new InvalidCommandException(errorMessage);","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"     * Parses a string input from the data file into an array of each segment of the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"zxisatree"},"content":"     * @param toParse String input from the data file.","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"zxisatree"},"content":"     * @return Array of each segment of the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"zxisatree"},"content":"     * @throws DukeException if the command given is invalid or is not a command known by the chatbot.","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"    public static String[] parseFileCommand(String toParse) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"zxisatree"},"content":"        // Groups: 1: TaskType, 2: isDone, 3: priority, 4: task details","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"zxisatree"},"content":"        Pattern fileCommandPattern \u003d Pattern.compile(\"\\\\d+\\\\.\\\\[([TDE])]\\\\[([ X])\\\\]\\\\[(\\\\d+)\\\\] (.*)\");","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"zxisatree"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(\"(.*) /by (.*)\");","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"zxisatree"},"content":"        Pattern eventPattern \u003d Pattern.compile(\"(.*) /from (.*) /to (.*)\");","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"zxisatree"},"content":"        Matcher fileCommandMatcher \u003d fileCommandPattern.matcher(toParse);","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"zxisatree"},"content":"        Matcher individualMatcher;","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"zxisatree"},"content":"        if (!fileCommandMatcher.find()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"zxisatree"},"content":"            throw new InvalidDataFileException();","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":118,"author":{"gitId":"zxisatree"},"content":"        switch (fileCommandMatcher.group(1)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"zxisatree"},"content":"        case \"T\":","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"zxisatree"},"content":"            return new String[] {\"T\", fileCommandMatcher.group(2), fileCommandMatcher.group(3),","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"zxisatree"},"content":"                fileCommandMatcher.group(4)};","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"zxisatree"},"content":"        case \"D\":","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"zxisatree"},"content":"            individualMatcher \u003d deadlinePattern.matcher(fileCommandMatcher.group(4));","lastModifiedDate":"2023-02-06"},{"lineNumber":124,"author":{"gitId":"zxisatree"},"content":"            if (individualMatcher.find()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"zxisatree"},"content":"                return new String[] {\"D\", fileCommandMatcher.group(2), fileCommandMatcher.group(3),","lastModifiedDate":"2023-02-06"},{"lineNumber":126,"author":{"gitId":"zxisatree"},"content":"                    individualMatcher.group(1), individualMatcher.group(2)};","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"zxisatree"},"content":"            // Fallthrough","lastModifiedDate":"2023-02-06"},{"lineNumber":129,"author":{"gitId":"zxisatree"},"content":"        case \"E\":","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"zxisatree"},"content":"            individualMatcher \u003d eventPattern.matcher(fileCommandMatcher.group(4));","lastModifiedDate":"2023-02-06"},{"lineNumber":131,"author":{"gitId":"zxisatree"},"content":"            if (individualMatcher.find()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"zxisatree"},"content":"                return new String[] {\"D\", fileCommandMatcher.group(2), fileCommandMatcher.group(3),","lastModifiedDate":"2023-02-06"},{"lineNumber":133,"author":{"gitId":"zxisatree"},"content":"                    individualMatcher.group(1), individualMatcher.group(2), individualMatcher.group(3)};","lastModifiedDate":"2023-02-06"},{"lineNumber":134,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"zxisatree"},"content":"            // Fallthrough","lastModifiedDate":"2023-02-06"},{"lineNumber":136,"author":{"gitId":"zxisatree"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"zxisatree"},"content":"            throw new InvalidDataFileException();","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"zxisatree"},"content":"     * Parses a given date time string into a LocalDateTime object.","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"zxisatree"},"content":"     * @param dateTime Date time string.","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"zxisatree"},"content":"     * @param fromFile Whether the date time string was input via command line or from the data file.","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"zxisatree"},"content":"     * @return LocalDateTime object representing the date time given.","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"zxisatree"},"content":"    public static LocalDateTime parseDate(String dateTime, boolean fromFile) {","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"zxisatree"},"content":"        if (fromFile) {","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"zxisatree"},"content":"            return LocalDateTime.parse(dateTime, Task.getOutputDateTimeFormatter());","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"zxisatree"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"zxisatree"},"content":"            return LocalDateTime.parse(dateTime, Task.getInputDateTimeFormatter());","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"zxisatree"},"content":"     * Compiles a given regex and matches it with the given input.","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"zxisatree"},"content":"     * @param regex   Regular expression search pattern.","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"zxisatree"},"content":"     * @param toMatch String to match regex with.","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"zxisatree"},"content":"     * @return Matcher object containing the given regex and input string.","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"zxisatree"},"content":"    private static Matcher compileAndMatch(String regex, String toMatch) {","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"zxisatree"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"zxisatree"},"content":"        return pattern.matcher(toMatch);","lastModifiedDate":"2023-01-24"},{"lineNumber":166,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":167,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"zxisatree":167}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":" * Writes and loads task lists to and from storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"    private final String dataFilePath;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"     * Constructs a storage, creating the parent directories for the data file if they do not exist.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"     * @param dataFilePath Path to store the task list text file.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    public Storage(String dataFilePath) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"        this.dataFilePath \u003d dataFilePath;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"        // Create the directories if they do not exist. Adapted from","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"        // https://stackoverflow.com/questions/4040624/how-to-create-a-file-including-folders-for-a-given-path.","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"            File targetFile \u003d new File(dataFilePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"            File parent \u003d targetFile.getParentFile();","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"            if (parent !\u003d null \u0026\u0026 !parent.exists() \u0026\u0026 !parent.mkdirs()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"                throw new IllegalStateException(\"Couldn\u0027t create dir: \" + parent);","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"     * Saves the task list to memory.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"     * @param tasks Task list containing tasks to be saved.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"     * @throws IOException if the path exists but is a directory instead of a file, or cannot be opened for some reason.","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"    public void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"            FileWriter writer \u003d new FileWriter(dataFilePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"            writer.write(tasks.toEncodedString());","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"            writer.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"     * Parses and separates the data file into an ArrayList of each line.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"     * @return ArrayList of parsed commands.","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"    public ArrayList\u003cString[]\u003e load() {","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"        File targetFile \u003d new File(dataFilePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"        ArrayList\u003cString[]\u003e fileCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"            if (!targetFile.createNewFile()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"                Scanner scanner \u003d new Scanner(targetFile);","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"                    fileCommands.add(Parser.parseFileCommand(scanner.nextLine()));","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"        return fileCommands;","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"zxisatree":71}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import exceptions.InvalidDataFileException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import exceptions.TaskNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import tasks.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":" * Wraps the task list and provides methods to interact with it.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"public class TaskList {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"     * Constructs a new task list wrapper.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"     * Constructs a new task list wrapper using parsed input from a data file.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"     * @param dataFileTasks Lines of parsed input commands from the data file.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"     * @throws DukeException if the command given is invalid or is not a command known by the chatbot.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"    public TaskList(ArrayList\u003cString[]\u003e dataFileTasks) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"        Task newTask;","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"        for (String[] fileCommand : dataFileTasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"            assert fileCommand.length \u003e 0;","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"            int priority;","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"                priority \u003d Integer.parseInt(fileCommand[2]);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"                if (priority \u003c\u003d 0) {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"                    throw new InvalidDataFileException();","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"                throw new InvalidDataFileException();","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"            switch (fileCommand[0]) {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"            case \"T\":","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"                newTask \u003d new ToDo(fileCommand[3], priority);","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"            case \"D\":","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"                newTask \u003d new Deadline(fileCommand[3], priority, Parser.parseDate(fileCommand[4], true));","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"            case \"E\":","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"                newTask \u003d new Event(fileCommand[3], priority, Parser.parseDate(fileCommand[4], true),","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"                    Parser.parseDate(fileCommand[5], true));","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"            default:","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"                throw new InvalidDataFileException();","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"            if (fileCommand[1].equals(\"X\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"                newTask.setDone(true);","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"            this.addTask(newTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"     * Gets the length of the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"     * @return Length of the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"    public int size() {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"     * @return Whether the task list is empty or not.","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"        return this.taskList.size() \u003d\u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"    private boolean isIndexOutOfRange(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"        return index - 1 \u003e\u003d this.size() || index \u003c 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"     * Gets a task by its index.","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"     * @param taskNumber Index of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"     * @return The requested task.","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"     * @throws TaskNotFoundException if task index is out of range.","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"    public Task getTask(int taskNumber) throws TaskNotFoundException {","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"        if (this.isIndexOutOfRange(taskNumber)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"zxisatree"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"zxisatree"},"content":"        return this.taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"zxisatree"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"zxisatree"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"zxisatree"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"zxisatree"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"zxisatree"},"content":"     * @param taskNumber Index of the task to be deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"zxisatree"},"content":"     * @throws TaskNotFoundException if task index is out of range.","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"zxisatree"},"content":"    public void deleteTask(int taskNumber) throws TaskNotFoundException {","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"zxisatree"},"content":"        if (this.isIndexOutOfRange(taskNumber)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"zxisatree"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"zxisatree"},"content":"        this.taskList.remove(taskNumber - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"zxisatree"},"content":"     * Marks a task as complete or uncomplete.","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"zxisatree"},"content":"     * @param taskNumber Index of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"zxisatree"},"content":"     * @param done       Whether to mark the task as complete or uncomplete.","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"zxisatree"},"content":"     * @throws TaskNotFoundException if task index is out of range.","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"zxisatree"},"content":"    public void setDone(int taskNumber, boolean done) throws TaskNotFoundException {","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"zxisatree"},"content":"        if (this.isIndexOutOfRange(taskNumber)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":135,"author":{"gitId":"zxisatree"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"zxisatree"},"content":"        this.taskList.get(taskNumber - 1).setDone(done);","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"zxisatree"},"content":"     * Finds tasks from the task list matching the given search string.","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"zxisatree"},"content":"     * @param searchString String to search for in the tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"zxisatree"},"content":"     * @return List of tasks matching the search string.","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"zxisatree"},"content":"    public ArrayList\u003cTask\u003e findTasks(String searchString) {","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"zxisatree"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"zxisatree"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"zxisatree"},"content":"            if (task.match(searchString)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"zxisatree"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":153,"author":{"gitId":"zxisatree"},"content":"        return matchingTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"zxisatree"},"content":"     * Describes the length of the task list in a human readable format.","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"zxisatree"},"content":"     * @return Description of the task list in a human readable format.","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"zxisatree"},"content":"    public String describeLength() {","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"zxisatree"},"content":"        return \"Now you have \" + this.size() + \" tasks in the list.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"zxisatree"},"content":"     * Represents the task list in a string suitable for storing in memory.","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"zxisatree"},"content":"     * @return Representation of the task list to be stored in memory.","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"zxisatree"},"content":"    public String toEncodedString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"zxisatree"},"content":"        if (size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":172,"author":{"gitId":"zxisatree"},"content":"            return \"\";","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"zxisatree"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"zxisatree"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"zxisatree"},"content":"            String encodedTask \u003d taskList.get(i).toEncodedString();","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"zxisatree"},"content":"            result.append(i + 1).append(\".\").append(encodedTask).append(\"\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":178,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":179,"author":{"gitId":"zxisatree"},"content":"        if (result.length() \u003e 0) {","lastModifiedDate":"2023-01-24"},{"lineNumber":180,"author":{"gitId":"zxisatree"},"content":"            result.deleteCharAt(result.length() - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":181,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":182,"author":{"gitId":"zxisatree"},"content":"        return result.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":183,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":184,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":185,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"zxisatree"},"content":"        if (size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":188,"author":{"gitId":"zxisatree"},"content":"            return \"No tasks found.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"zxisatree"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"zxisatree"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":192,"author":{"gitId":"zxisatree"},"content":"            result.append(i + 1).append(\".\").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"zxisatree"},"content":"        if (result.length() \u003e 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"zxisatree"},"content":"            result.deleteCharAt(result.length() - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":197,"author":{"gitId":"zxisatree"},"content":"        return result.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":198,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":199,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":199}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":" * Handles interaction with the user and prints information about the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"     * The message to be shown before quitting the application.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"     * @return The goodbye message.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     * Returns human readable information about the task list after adding a task.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"     * @param task  Task that was added.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"     * @param tasks Task list that task was added to.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"     * @return The relevant information about the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    public String getAddTaskMessage(Task task, TaskList tasks) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + task + \"\\n\" + tasks.describeLength();","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"     * Returns humanreadable information about the task list after deleting a task.","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"     * @param task  Task that was deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"     * @param tasks Task list that task was deleted from.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"     * @return The relevant information about the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"    public String getDeleteTaskMessage(Task task, TaskList tasks) {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + task + \"\\n\" + tasks.describeLength();","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"     * Returns humanreadable information about the task list after marking a task as complete.","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"     * @param task Task that was marked as complete.","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"     * @return The relevant information about the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"    public String getMarkTaskMessage(Task task) {","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task;","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"     * Returns humanreadable information about the task list after marking a task as uncomplete.","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"     * @param task Task that was marked as uncomplete.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"     * @return The relevant information about the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"    public String getUnmarkTaskMessage(Task task) {","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task;","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"     * Returns humanreadable information about the tasks found with the search string.","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"     * @param tasks List of tasks that were found by the search string.","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"     * @return The relevant information about the tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"    public String getFindTaskMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"        StringBuilder tasksStr \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"        tasksStr.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"            tasksStr.append(i + 1).append(\u0027.\u0027).append(tasks.get(i).toString()).append(\u0027\\n\u0027);","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"        if (tasksStr.length() \u003e 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"            tasksStr.deleteCharAt(tasksStr.length() - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"        return tasksStr.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"     * Returns humanreadable information about an error message.","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"     * @param errorMessage Error message describing the error.","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"     * @return Human readable information about the error message.","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"    public String getErrorMessage(String errorMessage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"        return \"Something went wrong:\\n\" + errorMessage;","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"     * An error message for unexpected errors.","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"     * @return The error message.","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"    public String getLoadingError() {","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"        return \"Something went wrong while loading Duke.\";","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"zxisatree":98}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":" * Represents custom exceptions thrown by the chatbot.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"     * Constructs an exception with the given description.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"     * @param description Description of the problem.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"    public DukeException(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":15}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":" * Represents exceptions for commands with invalid inputs.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"     * Constructs an exception for commands with invalid inputs.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"     * @param description Description of the problem.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"    public InvalidCommandException(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"        super(\"OOPS!!! \" + description);","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":15}},{"path":"src/main/java/exceptions/InvalidDataFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":" * Represents exceptions for invalid, missing or corrupt data files.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"public class InvalidDataFileException extends DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"     * Constructs an exception for invalid, missing or corrupt data files.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"    public InvalidDataFileException() {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"        super(\"OOPS!!! Could not read data from the provided source file.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"zxisatree":13}},{"path":"src/main/java/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":" * Represents exceptions for requesting tasks not in the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"public class TaskNotFoundException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"     * Constructs an exception for requesting tasks not in the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"        super(\"OOPS!!! The requested task was not found in the task list.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":13}},{"path":"src/main/java/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":" * Represents exceptions for commands not known by the chatbot.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"     * Constructs an exception for a command not known by the chatbot.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":13}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"     * Constructs a task with a deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"     * @param priority Priority of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"     * @param endDateTime Deadline of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    public Deadline(String description, int priority, LocalDateTime endDateTime) {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"        super(description, priority);","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    public String toEncodedString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"        return \"[\" + TaskType.D + \"]\" + super.toString() + \" /by \"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"            + this.endDateTime.format(Task.getOutputDateTimeFormatter());","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"        return \"[\" + TaskType.D + \"]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"                + this.endDateTime.format(Task.getOutputDateTimeFormatter()) + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":34}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":" * Represents a task that takes place within a time period.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"     * Constructs a task that takes place within a time period.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"     * @param description   Description of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"     * @param priority Priority of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"     * @param startDateTime Starting date and time of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"     * @param endDateTime   Ending date and time of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    public Event(String description, int priority, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"        super(description, priority);","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    public String toEncodedString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        return \"[\" + TaskType.E + \"]\" + super.toString() + \" /from \"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"                + this.startDateTime.format(Task.getOutputDateTimeFormatter()) + \" /to \"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"                + this.endDateTime.format(Task.getOutputDateTimeFormatter());","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"        return \"[\" + TaskType.E + \"]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"                + this.startDateTime.format(Task.getOutputDateTimeFormatter()) + \" to: \"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"                + this.endDateTime.format(Task.getOutputDateTimeFormatter()) + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":39}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":" * Represents a task to be completed.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"     * Formatters to parse date time strings.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    private static final DateTimeFormatter inputDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    private static final DateTimeFormatter outputDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"     * Description of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     * Whether the task is done or not.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"     * A positive integer representing how important the task is, where lower values are more important.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    protected int priority;","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"     * Constructs a new task.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"     * @param priority Priority of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"    public Task(String description, int priority) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        assert priority \u003e\u003d 0 : \"Attempted to create task with negative priority\";","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"     * Gets the date time formatter for input.","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"     * @return Date time formatter for input.","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"    public static DateTimeFormatter getInputDateTimeFormatter() {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"        return inputDateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"     * Gets the date time formatter for output.","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"     * @return Date time formatter for output.","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"    public static DateTimeFormatter getOutputDateTimeFormatter() {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"        return outputDateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"     * Sets a task as complete or uncomplete.","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"     * @param done Whether to set the task as complete or uncomplete.","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"     * Sets the priority of a task.","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"     * @param priority The priority level to set the task to.","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"    public void setPriority(int priority) {","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"        // Checking for negative priority is done in Parser","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"        assert priority \u003e\u003d 0 : \"Attempted to set negative priority\";","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"     * Get a human readable representation of whether the task is complete or not.","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"     * @return A human readable representation of whether the task is complete or not.","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"     * Check if a task contains a given string.","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"     * @param toMatch String to check for.","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"     * @return Whether the task contains the given string or not.","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"    public boolean match(String toMatch) {","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"        Pattern pattern \u003d Pattern.compile(toMatch);","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"        Matcher matcher \u003d pattern.matcher(this.description);","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"        return matcher.find();","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"     * Represents the task in a string suitable for storing in memory.","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"zxisatree"},"content":"     * @return A string representing the task suitable for storing in memory.","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"zxisatree"},"content":"    public abstract String toEncodedString();","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"zxisatree"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \"[\" + this.priority + \"]\" + \" \" + this.description;","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":112}},{"path":"src/main/java/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":" * Represents different types of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"public enum TaskType {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"    T,","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"    D,","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"    E","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":10}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":" * Represents a simple task that can be completed.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"     * Construct a new task that can be completed.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"     * @param priority Priority of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"    public ToDo(String description, int priority) {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"        super(description, priority);","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    public String toEncodedString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"        return \"[\" + TaskType.T + \"]\" + super.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"        return \"[\" + TaskType.T + \"]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-padding: 0 5 0 5\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zxisatree":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"zxisatree":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"    public void deadlineCommand_deadlineTask_success() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"            String[] parsed \u003d Parser.parseCommand(\"deadline read book /by 22-01-2023 16:00\");","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"            assertArrayEquals(new String[]{\"deadline\", \"read book\", \"22-01-2023 16:00\"}, parsed);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"    public void deadlineFileCommand_deadlineTask_success() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"            String[] parsed \u003d Parser.parseFileCommand(\"1.[D][ ] read book /by Jan 22 2023, 16:00\");","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"            assertArrayEquals(new String[]{\"D\", \" \", \"read book\", \"Jan 22 2023, 16:00\"}, parsed);","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    public void eventCommand_eventTask_success() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"            String[] parsed \u003d Parser.parseCommand(\"event swim /from 24-01-2023 09:15 /to 24-01-2023 10:30\");","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"            assertArrayEquals(new String[]{\"event\", \"swim\", \"24-01-2023 09:15\", \"24-01-2023 10:30\"}, parsed);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"zxisatree":37}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import tasks.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"    public void addTaskCommand_toDoTask_success() {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"        taskList.addTask(new ToDo(\"Valid task description\", 1));","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    public void deadlineCommand_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"        assertThrows(DateTimeParseException.class, ()","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"            -\u003e taskList.addTask(new Deadline(\"invalid hour\", 1, Parser.parseDate(","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"                        \"22-01-2023 25:00\", false))));","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    public void eventCommand_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"        assertThrows(DateTimeParseException.class, ()","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"            -\u003e taskList.addTask(new Event(\"invalid start day\", 2, Parser.parseDate(","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"                        \"36-01-2023 16:00\", false),","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"                        Parser.parseDate(\"04-02-2023 12:00\", false))));","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"zxisatree":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"deadline fail /by","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"event","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"event fail /from","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"event fail /from 1 /to","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"mark","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"unmark","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"zxisatree":18}}]
